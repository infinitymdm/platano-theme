// /************
//  * Overview *
//  ************/

#overview {
  spacing: if($ref_weight >= 1.0, 24px, 18px);

  &-controls { padding-bottom: if($ref_weight >= 1.0, 32px, 26px); }

  StScrollBar {
    StBin#trough { background-color: opacity(black, $alpha_track_1); }

    StButton#vhandle,
    StButton#hhandle { // use variant-sensitive slider-bit
      background-color: opacity($color_fg_ovv, $alpha_foreground_3rd * $alpha_foreground_3rd);
      &:hover { background-color: opacity($color_fg_ovv, $alpha_foreground_2nd * $alpha_foreground_3rd); }
      &:active { background-color: $color_fg_ovv; }
    }
  }

  @if $variant == light { // for .app-folder-popup
    StScrollView.all-apps StScrollBar {
      StBin#trough { background-color: opacity($color_base, $alpha_foreground_3rd); }

      StButton#vhandle,
      StButton#hhandle {
        background-color: opacity($color_fg, $alpha_foreground_3rd * $alpha_foreground_3rd);
        &:hover { background-color: opacity($color_fg, $alpha_foreground_2nd * $alpha_foreground_3rd); }
        &:active { background-color: $color_fg; }
      }
    }
  }
}

.window-picker { // container around window thumbnails
  @if $ver > 3.25 {
    @if $ver < 3.37 {
      -horizontal-spacing: if($ref_weight >= 1.0, 16px, 12px);
      -vertical-spacing: if($ref_weight >= 1.0, 16px, 12px);
      spacing: if($ref_weight >= 1.0, 16px / 2, 12px / 2);
    }
    padding: if($ref_weight >= 1.0, 16px, 12px);
  }
  @else {
    -horizontal-spacing: if($ref_weight >= 1.0, 32px, 26px);
    -vertical-spacing: if($ref_weight >= 1.0, 32px, 26px);
    padding-left: if($ref_weight >= 1.0, 32px, 26px);
    padding-right: if($ref_weight >= 1.0, 32px, 26px);
    padding-bottom: if($ref_weight >= 1.0, 48px, 36px);
  }

  &.external-monitor {
    @if $ver > 3.25 { padding: if($ref_weight >= 1.0, 16px, 12px); }
    @else { padding: if($ref_weight >= 1.0, 32px, 26px); }
  }
}

.window-clone-border {
  border: 4px solid $color_bg_ovv_semi_fill;
  border-radius: $r_2 $r_2 0 0;
  // For window decorations with round corners we can't match
  // the exact shape when the window is scaled. So apply a shadow
  // to fix that case
  box-shadow: inset 0 0 0 1px $color_bg_ovv_semi_fill;
}

.window-caption { // hovered tooltips
  @if $ver > 3.25 {
    @extend %tooltip_template;
    max-width: 75em; // set horizontal limit for damned looong web page titles
    padding: if($ref_weight >= 1.0, 0.6em 1.2em 0.7em, 0.4em 0.9em 0.5em);
    border-radius: $r;
    @if $ver > 3.35 {
      border: 0 none transparent;
      font-size: 100%;
      font-weight: 400;
    }
    // FIXME: Still label width computing is quite weird in Wayland session
    // (brings unwanted larger L/R padding than we set) though, at least
    // we should align StLabel in the center of finalized widget width
    // as possible as we can...
    text-align: center; // enforce label centering for Wayland session
  }
  @else {
    spacing: if($ref_weight >= 1.0, 25px, 19px);
    padding: if($ref_weight >= 1.0, 0.3em 0.9em 0.4em, 0.2em 0.6em 0.3em);
    border-radius: $r_2;
    background-color: opacity($color_bg_osd, $alpha_osd);
    -shell-caption-spacing: if($ref_weight >= 1.0, 12px, 8px);
    &:hover {
      color: $color_fg_osd;
      background-color: $color_bg_osd_semi_fill;
    }
  }
}

// Search entry
.search-entry { // use raised entry-box styling
  width: if($ref_weight >= 1.0, 400px, 340px);
  padding: if($ref_weight >= 1.0, 0.4em 0.8em, 0.3em 0.6em);
  border-radius: $r;
  border: 2px solid transparent;
  background-color: opacity($color_base, $alpha_foreground_3rd);
  box-shadow: $empty_shadow;
  font-weight: 400;
  transition-duration: $transition_d_standard;

  selection-background-color: $color_bg_sel;
  selected-color: $color_fg_sel;

  &,
  StLabel {
    margin-bottom: 0.1em;
    color: $color_fg_3; // shut up 3rd-party gresources
  }

  &:hover,
  &:focus {
    caret-color: $color_fg;
    background-color: $color_base;
    box-shadow: $z-depth-2;

    &,
    StLabel {
      color: $color_fg; // shut up 3rd-party gresources
    }
  }

  &:focus { border-color: $color_bg_sel; }

  .search-entry-icon {
    icon-size: $icon_size;
    color: $color_fg_3;
  }

  &:hover,
  &:focus {
    .search-entry-icon { color: $color_fg; }
  }
}

// Search results
$results_icon_size: 24px;
$provider_details_width: 120px;
$provider_icon_size: 32px; // for < 3.25

#searchResults {
  @if $ver < 3.33 {
    &Bin { max-width: 1000px; } // keep this for =< 3.32
  }

  &Content {
    @if $ver > 3.33 { max-width: 1000px; }

    @if $ver > 3.25 {
      spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                      $results_icon_size / 6);
      padding: if($ref_weight >= 1.0, $results_icon_size / 3,
                                      $results_icon_size / 6);
    }
    @else {
      spacing: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                      $provider_icon_size / 4);
      padding: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                      $provider_icon_size / 4);
    }
  }
}

  // This should be equal to #searchResultsContent spacing
.search-section {
  @if $ver > 3.25 {
    spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                    $results_icon_size / 6);

    // This is the space between the provider icon and the results container
    &-content {
      spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                      $results_icon_size / 6);
    }
  }
  @else {
    spacing: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                    $provider_icon_size / 4);
    &-content {
      spacing: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                      $provider_icon_size / 4);
    }

    // hide unneeded last separator
    &:last-child .search-section-separator {
      -gradient-start: transparent;
      -gradient-end: transparent;
    }
  }

  &-separator {
    @if $ver > 3.25 {
      height: 0;
      background-color: transparent;
    }
    @else {
      height: 1px;
      // FIXME: keep meaningless gradient properties
      // otherwise warnings are recorded
      -gradient-height: 1px;
      -gradient-start: $color_bg_ovv_out;
      -gradient-end: $color_bg_ovv_out;
      &:ltr {
        margin-left: if($ref_weight >= 1.0, $provider_icon_size * (2 + 0.5),
                                            $provider_icon_size * (2 + 0.25));
      }
      &:rtl {
        margin-right: if($ref_weight >= 1.0, $provider_icon_size * (2 + 0.5),
                                              $provider_icon_size * (2 + 0.25));
      }
    }
  }

  &-content {
    @if $ver > 3.25 {
      padding: if($ref_weight >= 1.0, 8px, 6px);
      border-radius: $r_8;
      background-color: opacity($color_bg_osd, $alpha_osd);
      box-shadow: $z-depth-2;
      @if $ver > 3.35 {
        border: 0 none transparent;
        text-shadow: none;
        icon-shadow: none;
      }
    }
  }
}

.search-statustext { // "no results"
  @extend %status_text;
}

.list-search {
  &-results {
    @if $ver > 3.25 {
      spacing: 0;
      background-color: $color_bg_fill_hidden;
      &:ltr {
        // concern the inset fake border width
        padding-left: if($ref_weight >= 1.0, 8px, 6px) + 1px;
        box-shadow: inset 1px 0 opacity($color_fg_osd, $alpha_track_out);
      }
      &:rtl {
        padding-right: if($ref_weight >= 1.0, 8px, 6px) + 1px;
        box-shadow: inset -1px 0 opacity($color_fg_osd, $alpha_track_out);
      }
    }
    @else { spacing: 3px; }
  }

  &-result {
    @if $ver < 3.25 {
      &:ltr { margin-right: $provider_icon_size / 2; }
      &:rtl { margin-left: $provider_icon_size / 2; }
    }
    padding: 0;
    border-radius: $r_2;
    transition-duration: $transition_d_none;
    &:focus,
    &:selected,
    &:hover {
      transition-duration: $transition_d_none;
      @if $ver > 3.25 {
        background-color: $color_bg_osd_semi_fill;

        .list-search-result {
          &-title { color: $color_fg_osd; }

          &-description { color: $color_fg_osd_2; }
        }
      }
      @else {
        background-color: $color_bg_ovv_semi_fill;

        .list-search-result {
          &-title { color: $color_fg_ovv; }

          &-description { color: $color_fg_ovv_2; }
        }
      }
    }
    &:active {
      transition-duration: $transition_d_standard;
      @if $ver > 3.25 {
        background-color: $color_bg_osd_fill;

        .list-search-result {
          &-title { color: $color_fg_osd; }

          &-description { color: $color_fg_osd_2; }
        }
      }
      @else {
        background-color: $color_bg_ovv_fill;

        .list-search-result {
          &-title { color: $color_fg_ovv; }

          &-description { color: $color_fg_ovv_2; }
        }
      }
    }
    &:checked {
      background-color: $color_bg_sel;
      transition-duration: $transition_d_standard;

      .list-search-result {
        &-title { color: $color_fg_sel; }

        &-description { color: $color_fg_sel_2; }
      }
    }

    &-content {
      @if $ver > 3.25 {
        // concern the rows without 48px icons
        min-height: $results_icon_size * (1.5 + 0.5);
        spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                        $results_icon_size / 6);
        padding: if($ref_weight >= 1.0, $results_icon_size / 3,
                                        $results_icon_size / 6);
      }
      @else {
        min-height: $provider_icon_size * (1.5 + 0.5);
        spacing: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                        $provider_icon_size / 4);
        padding: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                        $provider_icon_size / 4);
      }
    }

    &-title {
      font-weight: 700;
      font-size: 110%;
      @if $ver > 3.25 { color: $color_fg_osd_2; }
      @else { color: $color_fg_ovv; }

      @if $ver > 3.25 {
        StIcon,
        StLabel {
          // add spacing to start-position only
          &:ltr {
            padding-left: if($ref_weight >= 1.0, $results_icon_size  / 3,
                                                  $results_icon_size  / 6);
          }
          &:rtl {
            padding-right: if($ref_weight >= 1.0, $results_icon_size / 3,
                                                  $results_icon_size / 6);
          }
        }
      }
    }

    &-description {
      @if $ver > 3.25 {
        padding: 0;
        color: $color_fg_osd_3;
      }
      @else {
        color: $color_fg_ovv_2;
        font-size: 90%;
      }
    }
  }

  @if $ver > 3.25 {
    &-provider {
      &-content {
        spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                        $results_icon_size / 6);
        padding: if($ref_weight >= 1.0, $results_icon_size / 3,
                                        $results_icon_size / 6);
      }

      &-details { // labels at the right-side of -icon
        width: $provider_details_width;
        @if $ver > 3.35 {
          margin-top: if($ref_weight >= 1.0, $results_icon_size / 3 * 2,
                                              $results_icon_size / 6 * 2);
        }
        font-size: 90%;
        @if $ver > 3.25 {
          color: $color_fg_osd_3;
          &:ltr {
            margin-left: if($ref_weight >= 1.0, $results_icon_size  / 3,
                                                $results_icon_size  / 6);
          }
          &:rtl {
            margin-right: if($ref_weight >= 1.0, $results_icon_size / 3,
                                                  $results_icon_size / 6);
          }
        }
        @else { color: $color_fg_ovv_2; }

        .search-provider-icon:hover &,
        .search-provider-icon:focus &,
        .search-provider-icon:active &,
        .search-provider-icon:checked & {
          @if $ver > 3.25 { color: $color_fg_osd; }
          @else { color: $color_fg_ovv; }
        }
      }
    }
  }
}

@if $ver > 3.37 {
  .grid-search-results { spacing: $icon_grid_spacing; }
}

.search-provider-icon {
  @if $ver > 3.25 {
    min-height: if($ref_weight >= 1.0, $results_icon_size * 2.75,
                                        $results_icon_size * 2.42);
    padding: if($ref_weight >= 1.0, 0 $results_icon_size / 4,
                                    0 $results_icon_size / 8);
    color: $color_fg_osd_3;
    &:ltr { border-radius: $r_2 $r $r $r_2; }
    &:rtl { border-radius: $r $r_2 $r_2 $r; }
  }
  @else {
    margin: if($ref_weight >= 1.0, $provider_icon_size / 4 0, 0);
    padding: $provider_icon_size / 2;
    border-radius: $r;
    color: $color_fg_ovv_2;
  }
  border: none;
  transition-duration: $transition_d_none;
  &:focus,
  &:selected,
  &:hover {
    @if $ver > 3.25 { background-color: $color_bg_osd_semi_fill; }
    @else { background-color: $color_bg_ovv_semi_fill; }
    transition-duration: $transition_d_none;
  }
  &:active {
    @if $ver > 3.25 { background-color: $color_bg_osd_fill; }
    @else { background-color: $color_bg_ovv_fill; }
    transition-duration: $transition_d_standard;
  }
  &:checked {
    background-color: $color_bg_sel;
    color: $color_fg_sel;
    transition-duration: $transition_d_standard;
  }

  @if $ver < 3.25 {
    &-more {
      width: $provider_icon_size / 2;
      height: $provider_icon_size / 2;
      @include image-loader($url: 'assets/more-results.svg');
      -st-background-image-shadow: $z-depth-2;
    }
  }
}
