//
// This is the RIGHT PLACE to edit the stylesheet
//

// /***********
//  * Globals *
//  ***********/

* {
  transition-property: border-color,
                       border-image,
                       background-color,
                       background-image,
                       box-shadow;
  transition-timing-function: $tr_t_std;
  transition-duration: $tr_d_std;
  // quicker response for keyboard operations
  &:focus { transition-duration: $tr_d_non; }

  text-shadow: none;
  icon-shadow: none;
}

$font-family: Roboto, Sans-Serif;
$font-family-for-ornament: Sans-Serif;

stage {
  color: $fg;
  @if $ver < 3.35 {
    font-family: $font-family;
    font-size: 10pt;
  }
  @else { font-size: 100%; }
}

// /***********
//  * Buttons *
//  ***********/

.button {
  padding: if($ref_weight >= 1.0, 7px 16px 8px, 5px 12px 6px);
  border-radius: $r_2;
  border: none;
  font-weight: 500;
  @include button(flat-normal);
  &:hover { @include button(flat-hover); }
  &:focus { @include button(flat-focus); }
  &:active { @include button(flat-active); }
  &:insensitive { @include button(flat-disabled); }
}

.modal-dialog-linked-button {
  @extend %modal_dialog_button;
  padding: if($ref_weight >= 1.0, 9px 16px 10px, 6px 12px 7px);
}

%modal_dialog_button {
  border: 0 none transparent;
  font-weight: 500;
  text-shadow: none;
  icon-shadow: none;
  @if $variant != light {
    @include button(flat-normal, $tc: $inv_acc_fg);
    &:hover { @include button(flat-hover, $tc: $inv_acc_fg); }
    &:focus { @include button(flat-focus, $tc: $inv_acc_fg); }
    &:active { @include button(flat-active, $tc: $inv_acc_fg); }
    &:insensitive { @include button(flat-disabled, $tc: $osd_fg); }
  }
  @else {
    @include button(flat-normal, $tc: $acc_fg);
    &:hover { @include button(flat-hover, $tc: $acc_fg); }
    &:focus { @include button(flat-focus, $tc: $acc_fg); }
    &:active { @include button(flat-active, $tc: $acc_fg); }
    &:insensitive { @include button(flat-disabled, $tc: $fg); }
  }
  &:first-child { border-radius: 0 0 0 $r_8; }
  &:last-child { border-radius: 0 0 $r_8 0; }
  &:first-child:last-child { border-radius: 0 0 $r_8 $r_8; }
}

// /***********
//  * Entries *
//  ***********/

%entry_icon_sizing {
  icon-size: $icon_size;
  padding: 0 0.3em;
}

StEntry {
  min-height: if($ref_weight >= 1.0, 1em + 0.7em + 0.8em,
                                     1em + 0.5em + 0.6em);
  padding: if($ref_weight >= 1.0, 0 0.8em, 0 0.6em);
  border-radius: $r_4 $r_4 0 0;
  border-width: 0;
  selection-background-color: $sel_bg;
  selected-color: $sel_fg;
  transition-duration: $tr_d_non;
  @if $variant != light {
    @include entry(normal, $tc: $osd_fg);
    &:hover { @include entry(hover, $tc: $osd_fg); }
    &:focus { @include entry(focus, $tc: $osd_fg); }
    &:insensitive { @include entry(disabled, $tc: $osd_fg); }
  }
  @else {
    @include entry(normal, $tc: $fg);
    &:hover { @include entry(hover, $tc: $fg); }
    &:focus { @include entry(focus, $tc: $fg); }
    &:insensitive { @include entry(disabled, $tc: $fg); }
  }

  StIcon {
    &.capslock-warning {
      @extend %entry_icon_sizing;
      warning-color: $warn;
    }

    @if $ver > 3.35 {
      &.peek-password { @extend %entry_icon_sizing; }
    }
  }

  @if $ver > 3.35 {
    .hint-text { // placeholder labels
      color: if($variant != light, $osd_ter_fg, $ter_fg);
      &:ltr { margin-left: 2px; }
      &:rtl { margin-right: 2px; }
    }
  }
}

@if $ver > 3.35 {
  .capslock-warning-label {
    padding-bottom: if($ref_weight >= 1.0, 0.75em, 0.55em);
    color: $warn;
    font-size: 90%;
    text-align: center;
  }
}

// /**************
//  * Scrollbars *
//  **************/

StScrollView {
  // disable undershoots
  &.vfade {
    @if $ver < 3.33 { -st-vfade-offset: 0; }
    @else {
      &.search-display {
        -st-vfade-offset: $icon_size * 3;
      }
    }
  }
  &.hfade { -st-hfade-offset: 0; }
}

StScrollBar {
  padding: 0;

  StScrollView & {
    min-width: if($ref_weight >= 1.0, 0.9em, 0.6em);
    min-height: if($ref_weight >= 1.0, 0.9em, 0.6em);
  }

  StBin#trough {
    margin: 0;
    border-radius: 0;
    background-color: opacity($osd_fg, $a_trk_1);
  }

  StButton#vhandle,
  StButton#hhandle {
    margin: 0;
    border-radius: 0;
    background-color: opacity($osd_fg, $a_fg_3rd * $a_fg_3rd);
    &:hover { background-color: opacity($osd_fg, $a_fg_2nd * $a_fg_3rd); }
    &:active { background-color: $osd_fg; }
  }
}

// /**********
//  * Slider *
//  **********/

.slider {
  height: $icon_size;
  color: $acc_bg;
  -slider-height: 2px;
  -slider-background-color: $out_fg;        // background of the trough
  -slider-border-color: transparent;        // trough border color
  -slider-active-background-color: $acc_bg; // active trough fill
  -slider-active-border-color: transparent; // active trough border
  -slider-handle-border-width: 0;
  -slider-handle-radius: $icon_size / 2;
  @if $ver > 3.25 {
    // barlevels are for >= 3.29.90
    -barlevel-height: 2px;
    -barlevel-background-color: $out_fg;
    -barlevel-border-color: transparent;
    -barlevel-active-background-color: $acc_bg;
    -barlevel-active-border-color: transparent;
    -barlevel-overdrive-color: $dest_bg;
    -barlevel-overdrive-border-color: transparent;
    -barlevel-overdrive-separator-width: 2px;
    -barlevel-border-width: 0;
  }
}

// /***************
//  * Check Boxes *
//  ***************/

.check-box {
  StBoxLayout { spacing: 0.8em; }

  StBin {
    width: $icon_size;
    height: $icon_size;
    @include image-loader($url: 'assets/checkbox-off.svg');
    color: $osd_sec_fg;
  }

  &:focus StBin {
    @include image-loader($url: 'assets/checkbox-off-hover.svg');
    color: $osd_fg;
  }
  &:checked StBin {
    @include image-loader($url: 'assets/checkbox.svg');
    color: $osd_fg;
  }
  &:focus:checked StBin {
    @include image-loader($url: 'assets/checkbox-hover.svg');
    color: $osd_fg;
  }
}

// /************
//  * Switches *
//  ************/

.toggle-switch {
  width: 40px;
  height: 20px;
  background-size: contain;
}

@if $ver < 3.31 {
  @each $v in us, intl {
    .toggle-switch-#{$v} {
      @include image-loader($url: 'toggle-off.svg');
      &:checked { @include image-loader($url: 'toggle-on.svg'); }
    }
  }
}
@else {
  .toggle-switch {
    @include image-loader($url: 'toggle-off.svg');
    &:checked { @include image-loader($url: 'toggle-on.svg'); }
  }
}

// /*********
//  * Links *
//  *********/

.shell-link {
  border-radius: $r_2;
  color: $osd_link_fg;
  &:hover {
    @include button(flat-hover, $tc: $osd_link_fg);
  }
  &:active {
    @include button(flat-active, $tc: $osd_link_fg);
  }
}

// /*****************
//  * Modal Dialogs *
//  *****************/

.headline { font-size: 110%; }

.lightbox { background-color: black; }

.flashspot { background-color: white; }

.modal-dialog {
  border: none;
  border-radius: $r_8;
  color: $osd_fg;
  background-color: opacity($osd_bg, $a_osd);
  @if $ver < 3.31 { box-shadow: $z-depth-4; }
  // FIXME: Lock drop-shadows until upstream computes proper shadow-region
  @else { box-shadow: $empty_shadow; }

  &-content-box {
    @if $ver > 3.35 {
      max-width: 28em;
      margin: if($ref_weight >= 1.0, 24px, 20px);
      spacing: if($ref_weight >= 1.0, 24px, 20px);
      padding: 0;
    }
    @else { padding: if($ref_weight >= 1.0, 24px, 20px); }
  }

  .run-dialog {
    @if $ver > 3.35 {
      .modal-dialog-content-box {
        margin-top: 0;
        margin-bottom: 0;
      }
    }

    &-entry {
      width: 20em;
      @if $ver < 3.35 {
        margin-bottom: if($ref_weight >= 1.0, 6px, 4px);
      }
    }

    @if $ver < 3.35 {
      &-error-box {
        padding-top: if($ref_weight >= 1.0, 16px, 12px);
        spacing: if($ref_weight >= 1.0, 6px, 4px);
        color: $err;
        font-size: 90%;
      }

      &-button-box { padding-top: if($ref_weight >= 1.0, 1em, 0.7em); }

      &-label {
        padding-bottom: if($ref_weight >= 1.0, 0.4em, 0.3em);
        font-weight: 400;
        color: $osd_ter_fg;
        font-size: 110%;
      }
    }
    @else {
      &-description {
        color: $osd_ter_fg;
        font-size: 90%;
        text-align: center;
      }
    }
  }
}

@if $ver > 3.25 {
  @if $ver < 3.35 {
    .mount-dialog-subject,
    .end-session-dialog-subject { // this should be a generic header class
      font-size: 130%;
    }
  }
  @else {
    .end-session-dialog-subject { // this should be a generic header class
      font-size: 130%;
    }
  }
}
@else {
  .show-processes-dialog-subject,
  .mount-question-dialog-subject,
  .end-session-dialog-subject { // this should be a generic header class
    font-size: 130%;
  }
}

@if $ver > 3.35 {
  .dialog-list {
    spacing: if($ref_weight >= 1.0, 16px, 12px);

    &-title {
      color: $osd_fg;
      text-align: center;
      font-weight: 700;
    }

    &-scrollview { max-height: if($ref_weight >= 1.0, 200px, 180px); }

    &-box {
      spacing: if($ref_weight >= 1.0, 1em, 0.7em);

      .dialog-list-item {
        spacing: if($ref_weight >= 1.0, 1em, 0.7em);

        &-title {
          color: $osd_fg;
          font-weight: 700;
        }

        &-description {
          color: $osd_sec_fg;
          font-weight: 400;
          font-size: 90%;
        }
      }
    }
  }
}

@if $ver > 3.25 {
  // /******************
  //  * Message Dialog *
  //  ******************/

  .message-dialog {
    @if $ver < 3.35 {
      &-main-layout {
        padding: if($ref_weight >= 1.0, 12px 20px 0,
                                        8px 16px 0);
        spacing: if($ref_weight >= 1.0, 12px, 8px);
      }
    }

    &-content {
      @if $ver < 3.35 {
        max-width: 28em;
        // same values with the parent lateral padding
        spacing: if($ref_weight >= 1.0, 20px, 16px);
      }
      @else { spacing: if($ref_weight >= 1.0, 18px, 12px); }
      color: $osd_fg;
    }

    @if $ver < 3.35 {
      &-icon {
        min-width: $icon_size * 3;
        color: $osd_fg;
        icon-size: $icon_size * 3;
        -st-icon-style: symbolic;
      }
    }

    &-title {
      color: $osd_fg;
      font-size: 130%;
      @if $ver > 3.35 {
        font-weight: 700;
        text-align: center;

        // for loooong titles
        @if $ver < 3.37 {
          &.leightweight { font-size: 90%; }
        }
        @else {
          &.leightweight,
          &.lightweight { font-size: 90%; }
        }
      }
      @else { font-weight: 500; }
    }

    @if $ver < 3.35 {
      &-subtitle { @extend %message_dialog_subtitle; }
    }
    @else {
      &-description {
        @extend %message_dialog_subtitle;
        text-align: center;
      }
    }
  }
}

%message_dialog_subtitle {
  color: $osd_sec_fg;
  font-weight: 400;
}

// /**********************
//  * End Session Dialog *
//  **********************/

.end-session-dialog {
  @if $ver > 3.35 { width: 30em; }
  @else { spacing: if($ref_weight >= 1.0, 42px, 30px); }
  border: none;

  &-list { padding-top: if($ref_weight >= 1.0, 20px, 14px); }

  &-layout {
    &:ltr { padding-left: if($ref_weight >= 1.0, 17px, 12px); }
    &:rtl { padding-right: if($ref_weight >= 1.0, 17px, 12px); }
  }

  &-description {
    width: 28em;
    padding-bottom: if($ref_weight >= 1.0, 10px, 7px);
    &:ltr { text-align: left; }
    &:rtl { text-align: right; }
  }

  @if $ver > 3.35 {
    &-battery-warning { @extend %battery_warning; }
  }
  @else {
    &-warning { @extend %battery_warning; }
  }

  &-logout-icon {
    width: $icon_size * 3;
    height: $icon_size * 3;
    background-size: contain;
    color: $osd_fg;
    @if $ver < 3.31 { border-radius: $r_2; }
    @else { border-radius: $r; } // circular shape
  }

  &-shutdown-icon {
    width: $icon_size * 3;
    height: $icon_size * 3;
    color: $osd_fg;
  }

  @if $ver < 3.35 {
    &-inhibitor-layout {
      spacing: if($ref_weight >= 1.0, 16px, 12px);
      max-height: if($ref_weight >= 1.0, 200px, 180px);
      padding-right: if($ref_weight >= 1.0, 65px, 50px);
      padding-left: if($ref_weight >= 1.0, 65px, 50px);
    }

    &-session-list,
    &-app-list { spacing: if($ref_weight >= 1.0, 1em, 0.7em); }

    &-list-header {
      font-weight: 700;
      &:ltr { text-align: left; }
      &:rtl { text-align: right; }
    }

    &-app-list-item,
    &-session-list-item { spacing: if($ref_weight >= 1.0, 1em, 0.7em); }

    &-app-list-item-name,
    &-session-list-item-name { font-weight: 700; }

    &-app-list-item-description {
      color: $osd_ter_fg;
      font-size: 100%;
    }
  }
  @else {
    .dialog-list-title { color: $warn; }
  }
}

%battery_warning {
  width: 28em;
  padding-top: if($ref_weight >= 1.0, 6px, 4px);
  color: $warn;
  &:ltr { text-align: left; }
  &:rtl { text-align: right; }
}

// /*******************************
//  * ShellMountOperation Dialogs *
//  *******************************/


@if $ver < 3.35 {
  .shell-mount-operation-icon { icon-size: $icon_size * 3; }

  @if $ver > 3.25 {
    .mount {
      &-dialog {
        spacing: if($ref_weight >= 1.0, 24px, 18px);

        .message-dialog {
          &-title {
            max-width: 34em;
            padding-top: if($ref_weight >= 1.0, 10px, 8px);
            padding-bottom: if($ref_weight >= 1.0, 6px, 5px);
            &:ltr { padding-left: if($ref_weight >= 1.0, 17px, 12px); }
            &:rtl { padding-right: if($ref_weight >= 1.0, 17px, 12px); }
          }

          &-body {
            width: 28em;
            &:ltr { padding-left: if($ref_weight >= 1.0, 17px, 12px); }
            &:rtl { padding-right: if($ref_weight >= 1.0, 17px, 12px); }
          }
        }
      }
    }
  }
  @else {
    .show-processes,
    .mount-question {
      &-dialog { spacing: if($ref_weight >= 1.0, 24px, 18px); }

      &-dialog-subject {
        padding-top: if($ref_weight >= 1.0, 10px, 8px);
        padding-bottom: if($ref_weight >= 1.0, 6px, 5px);
        &:ltr { padding-left: if($ref_weight >= 1.0, 17px, 12px); }
        &:rtl { padding-right: if($ref_weight >= 1.0, 17px, 12px); }
      }

      &-dialog-description {
        width: 28em;
        &:ltr { padding-left: if($ref_weight >= 1.0, 17px, 12px); }
        &:rtl { padding-right: if($ref_weight >= 1.0, 17px, 12px); }
      }
    }
  }
}

@if $ver < 3.35 {
  @if $ver > 3.25 {
    .mount {
      &-dialog-app-list {
        max-height: if($ref_weight >= 1.0, 200px, 180px);
        padding-top: if($ref_weight >= 1.0, 24px, 18px);
        &:ltr {
          padding-left: if($ref_weight >= 1.0, 49px, 37px);
          padding-right: if($ref_weight >= 1.0, 32px, 26px);
        }
        &:rtl {
          padding-right: if($ref_weight >= 1.0, 49px, 37px);
          padding-left: if($ref_weight >= 1.0, 32px, 26px);
        }

        &-item {
          color: $osd_sec_fg;
          &:hover { color: $osd_fg; }
          &:ltr { padding-right: if($ref_weight >= 1.0, 1em, 0.7em); }
          &:rtl { padding-left: if($ref_weight >= 1.0, 1em, 0.7em); }
        }

        &-item-icon {
          &:ltr { padding-right: if($ref_weight >= 1.0, 17px, 12px); }
          &:rtl { padding-left: if($ref_weight >= 1.0, 17px, 12px); }
        }

        &-item-name { font-size: 100%; }
      }
    }
  }
  @else {
    .show-processes-dialog {
      &-app-list {
        max-height: if($ref_weight >= 1.0, 200px, 180px);
        padding-top: if($ref_weight >= 1.0, 24px, 18px);
        &:ltr {
          padding-left: if($ref_weight >= 1.0, 49px, 37px);
          padding-right: if($ref_weight >= 1.0, 32px, 26px);
        }
        &:rtl {
          padding-right: if($ref_weight >= 1.0, 49px, 37px);
          padding-left: if($ref_weight >= 1.0, 32px, 26px);
        }

        &-item {
          color: $osd_sec_fg;
          &:hover { color: $osd_fg; }
          &:ltr { padding-right: if($ref_weight >= 1.0, 1em, 0.7em); }
          &:rtl { padding-left: if($ref_weight >= 1.0, 1em, 0.7em); }
        }

        &-item-icon {
          &:ltr { padding-right: if($ref_weight >= 1.0, 17px, 12px); }
          &:rtl { padding-left: if($ref_weight >= 1.0, 17px, 12px); }
        }

        &-item-name { font-size: 100%; }
      }
    }
  }
}

// /*************************************
//  * Password or Authentication Dialog *
//  *************************************/

.prompt-dialog {
  // this is the width of the entire modal popup
  @if $ver < 3.35 { width: 34em; }
  @else { width: 28em; }
  border: none;

  @if $ver < 3.35 {
    .message-dialog {
      &-main-layout {
        spacing: if($ref_weight >= 1.0, 24px, 18px);
        padding: if($ref_weight >= 1.0, 10px, 8px);
      }
    }

    &-content { spacing: if($ref_weight >= 1.0, 16px, 12px); }

    &-title {
      color: $osd_fg;
      font-weight: 500;
      font-size: 130%;
    }
  }

  @if $ver < 3.35 {
    &-description {
      &:ltr { text-align: left; }
      &:rtl { text-align: right; }
    }
  }

  @if $ver < 3.35 {
    &-password-box {
      spacing: 1em;
      @if $ver < 3.33 {
        padding-bottom: if($ref_weight >= 1.0, 1em, 0.7em);
      }
    }
  }
  @else {
    &-password {
      &-grid {
        spacing-rows: if($ref_weight >= 1.0, 8px, 6px);
        spacing-columns: if($ref_weight >= 1.0, 6px, 4px);

        .prompt-dialog-password-entry {
          width: auto;
          // concern the 16px spinner size
          &:ltr { margin-left: 4px + $icon_size; }
          &:rtl { margin-right: 4px + $icon_size; }
        }
      }

      &-layout { spacing: if($ref_weight >= 1.0, 8px, 6px); }

      &-entry { width: 20em; }
    }
  }

  &-error-label { color: $err; }

  &-error-label,
  &-info-label,
  &-null-label {
    @if $ver < 3.35 {
      padding-bottom: if($ref_weight >= 1.0, 8px, 6px);
    }
    @else { text-align: center; }
    font-size: 100%;
  }

  @if $ver < 3.35 {
    @if $ver > 3.31 {
      &-pim-box,
      &-keyfiles-box { spacing: 1em; }

      &-button.button {
      }
    }

    &-grid { @extend %table_grid_spacing; }
  }

  @if $ver > 3.35 {
    &-caps-lock-warning {
      @extend .prompt-dialog-error-label;
      padding-left: if($ref_weight >= 1.0, 8px, 6px);
    }
  }
}

.hidden { color: transparent; }

// /*****************
//  * Polkit Dialog *
//  *****************/

.polkit-dialog {
  &-user-layout {
    spacing: if($ref_weight >= 1.0, 8px, 6px);
    @if $ver < 3.35 {
      &:ltr { padding-left: if($ref_weight >= 1.0, 8px, 6px); }
      &:rtl { padding-right: if($ref_weight >= 1.0, 8px, 6px); }
    }
    @else {
      margin-bottom: if($ref_weight >= 1.0, 6px, 4px);
      text-align: center;
    }
  }

  &-user-root-label { color: $warn; }

  &-user-icon {
    @if $ver < 3.35 {
      width: $icon_size * 3;
      height: $icon_size * 3;
    }
    background-size: contain;
    @if $ver < 3.31 { border-radius: $r_2; }
    @else { border-radius: $r; } // circular shape
  }
}

// /**************************
//  * Audio Selection Dialog *
//  **************************/

.audio-device-selection-dialog {
  @if $ver < 3.35 {
    spacing: if($ref_weight >= 1.0, 32px, 24px);
  }
  @else {
    .modal-dialog-content-box {
      margin-bottom: if($ref_weight >= 1.0, 28px, 21px);
    }
  }
}

.audio-selection {
  @if $ver < 3.35 {
    &-content {
      padding: if($ref_weight >= 1.0, 24px, 20px);
      spacing: if($ref_weight >= 1.0, 20px, 16px);
    }

    &-title {
      font-weight: 700;
      text-align: center;
    }
  }

  &-box { spacing: if($ref_weight >= 1.0, 20px, 16px); }

  &-device {
    border: 1px solid $div_fg;
    border-radius: $r_2;
    &:hover,
    &:focus { background-color: $osd_semi_fill_bg; }
    &:active {
      background-color: $sel_bg;
      color: $sel_fg;
    }
  }

  &-device-box {
    padding: if($ref_weight >= 1.0, 2em, 1.6em);
    spacing: if($ref_weight >= 1.0, 2em, 1.6em);
  }

  &-device-icon { icon-size: $icon_size * 4; }
}

// /*****************
//  * Access Dialog *
//  *****************/

@if $ver < 3.35 {
  .access-dialog { spacing: if($ref_weight >= 1.0, 30px, 24px); }
}

@if $ver < 3.25 {
  .access-dialog {
    &-main-layout {
      padding: if($ref_weight >= 1.0, 1em 1.6em 0, 0.7em 1.2em 0);
      spacing: if($ref_weight >= 1.0, 1em, 0.7em);
    }

    &-content {
      max-width: 28em;
      spacing: if($ref_weight >= 1.0, 2em, 1.6em);
    }

    &-icon {
      min-width: $icon_size * 3;
      icon-size: $icon_size * 3;
    }

    &-title { font-weight: 700; }

    &-subtitle {
      color: $osd_ter_fg;
      font-weight: 700;
      font-size: 110%;
    }
  }
}

// /**********************
//  * Geolocation Dialog *
//  **********************/

@if $ver < 3.35 {
  .geolocation-dialog { spacing: if($ref_weight >= 1.0, 32px, 24px); }
}

@if $ver < 3.25 {
  .geolocation-dialog {
    &-main-layout { spacing: if($ref_weight >= 1.0, 1em, 0.7em); }

    &-content { spacing: if($ref_weight >= 1.0, 2em, 1.6em); }

    &-icon { icon-size: $icon_size * 3; }

    &-title { font-weight: 700; }
  }
}

@if $ver > 3.25 {
  // /********************
  //  * Extension Dialog *
  //  ********************/

  .extension-dialog {
    @if $ver < 3.35 {
      .message-dialog {
        &-main-layout {
          padding: if($ref_weight >= 1.0, 12px, 8px);
          spacing: if($ref_weight >= 1.0, 24px, 16px);
        }

        &-title {
          // color: $osd_sec_fg;
          // font-weight: 400;
          // font-size: 100%;
        }
      }
    }
  }
}

@if $ver > 3.25 {
  // /****************************
  //  * Inhibit-Shortcuts Dialog *
  //  ****************************/

  @if $ver < 3.35 {
    .inhibit-shortcuts-dialog {
      spacing: if($ref_weight >= 1.0, 32px, 24px);
    }
  }
}

// /************************
//  * Network Agent Dialog *
//  ************************/

@if $ver < 3.35 {
  .network-dialog-secret-table,
  .keyring-dialog-control-table {
    @extend %table_grid_spacing;
  }
}

%table_grid_spacing {
  spacing-rows: 15px;
  spacing-columns: 1em;
}

// /******************
//  * Popovers/Menus *
//  ******************/

$extra_spacing: 3px;
$avatar_width: $icon_size * 1.5;

.popup-menu {
  min-width: 15em;

  .popup-sub-menu {
    @if $ver < 3.35 {
      padding-bottom: 1px; // reserve bottom-border height
      border-bottom: 1px solid $div_fg;
    }
    @else {
      border-width: 0 0 1px;
      border-style: solid;
      border-color: $div_fg;
    }
    background-color: $bg;
    box-shadow: inset 0 2px 2px opacity(black, $a_trk_1);
    @if $ver > 3.35 {
      .popup-menu-item {
        &:ltr { padding-left: if($ref_weight >= 1.0, 8px * 1.5, 6px); }
        &:rtl { padding-right: if($ref_weight >= 1.0, 8px * 1.5, 6px); }
      }
    }
  }

  @if $ver < 3.25 {
    .popup-menu-content { padding: if($ref_weight >= 1.0, 0.3em 0, 0.21em 0); }
  }

  .popup-menu-item {
    @if $ver < 3.35 {
      spacing: if($ref_weight >= 1.0, $avatar_width / 2 - $extra_spacing,
                                      $avatar_width / 2);
    }
    @else { spacing: if($ref_weight >= 1.0, 8px, 6px); }
    color: $sec_fg;
    font-weight: 400;
    transition-duration: $tr_d_non;
    &:ltr {
      @if $ver < 3.35 {
        padding: if($ref_weight >= 1.0, 0.45em $avatar_width 0.45em 0,
                                        0.3em $avatar_width 0.3em 0);
      }
      @else {
        padding: if($ref_weight >= 1.0, 0.45em ($icon_size + 8px) 0.45em 0,
                                        0.3em ($icon_size + 6px) 0.3em 0);
      }
    }
    &:rtl {
      @if $ver < 3.35 {
        padding: if($ref_weight >= 1.0, 0.45em 0 0.45em $avatar_width,
                                        0.3em 0 0.3em $avatar_width);
      }
      @else {
        padding: if($ref_weight >= 1.0, 0.45em 0 0.45em ($icon_size + 8px),
                                        0.3em 0 0.3em ($icon_size + 6px));
      }
    }

    &:checked {
      &, &.selected {
        background-color: transparent;
        color: $sel_label;
        box-shadow: $empty_shadow;
      }
      &:hover {
        background-color: opacity($sel_bg, $a_trk_1);
        color: $sel_label;
      }
      &:active {
        background-color: opacity($sel_bg, $a_trk_2);
        color: $sel_label;
      }
      &:insensitive { color: opacity($sel_label, $a_fg_bdp); }
    }
    &.selected {
      background-color: $semi_fill_bg;
      color: $fg;
      transition-duration: $tr_d_non;
    }
    &:active {
      background-color: $fill_bg;
      color: $fg;
      transition-duration: $tr_d_std;
    }
    &.selected:active { color: $fg; }
    &:insensitive { color: $dis_fg; }
  }

  .popup-inactive-menu-item { // all icons and other graphical elements
    color: $sec_fg;
    &:insensitive { color: $dis_fg; }
  }

  &.panel-menu {
    @if $ver < 3.25 {
      -boxpointer-gap: 4px;
      margin-bottom: 16px;
    }
    @else {
      // child popup-menu-content has 3px top-margin
      -boxpointer-gap: 4px - 3px;
    }
  }

  StEntry { // use variant-sensitive foreground colors
    @include entry(normal);
    transition-duration: $tr_d_non;
    &:hover { @include entry(hover); }
    &:focus { @include entry(focus); }
    &:insensitive { @include entry(disabled); }

    @if $ver > 3.35 {
      .hint-text { color: $ter_fg; }
    }
  }

  StScrollBar {
    StBin#trough { background-color: opacity($base, $a_fg_3rd); }

    StButton#vhandle,
    StButton#hhandle { // use variant-sensitive slider-bit
      background-color: opacity($fg, $a_fg_3rd * $a_fg_3rd);
      &:hover { background-color: opacity($fg, $a_fg_2nd * $a_fg_3rd); }
      &:active { background-color: $fg; }
    }
  }
}

.popup-menu {
  &-arrow { // not really top bar only
    @if $ver < 3.31 {
      width: $icon_size;
      height: $icon_size;
    }
    @else { icon-size: $icon_size; }
  }

  &-icon { icon-size: $icon_size; }

  &-ornament {
    @if $ver < 3.35 {
      width: 1em; // protect the region
    }
    @else { width: $icon_size; }
    height: 0; // trick for minimum separator-menu-item height
    text-align: right;
    font-size: $icon_size; // fixed size
    color: $sel_label;
    font-family: $font-family-for-ornament;
    font-weight: 700;
  }
}

.popup-menu-boxpointer,
.candidate-popup-boxpointer {
  @if $ver < 3.33 { // affects boxpointer placement
    -arrow-border-radius: $icon_size * 1.5;
  }
  @else { -arrow-border-radius: 0; }
  -arrow-border-width: 0;
  -arrow-border-color: transparent;
  -arrow-base: 0;
  -arrow-rise: 0;
  -arrow-box-shadow: $empty_shadow; // dreaming. bug #689995
  @if $ver < 3.25 {
    border-radius: $r_4;
    box-shadow: $z-depth-3;
  }
  @else { // shut up 3rd-party gresources
    border-radius: 0;
    box-shadow: $empty_shadow;
  }
}

.popup-menu-boxpointer {
  @if $ver < 3.25 {
    -arrow-background-color: $dark_bg; // fake arrows
    border: 1px solid $div_sld_fg;
    background-color: $dark_bg;
  }
  @else {
    -arrow-background-color: transparent;

    .popup-menu-content {
      @extend %popover_content;
      padding: if($ref_weight >= 1.0, 0.3em 0, 0.21em 0);
      border: 1px solid $div_sld_fg;
      background-color: $dark_bg;
    }
  }
}

%popover_content {
  margin: 3px 5px 12px;
  border-radius: $r_4;
  box-shadow: $z-depth-3;
}

.candidate-popup-boxpointer {
  -arrow-background-color: transparent;
  border: 0 none transparent;
  background: transparent; // needs to reset?
  // candidate popups are rendered as OSDs, so no need to set edge borders
  @if $ver < 3.25 {
    background-color: opacity($osd_bg, $a_osd);
    color: $osd_sec_fg;
  }
  @else {
    .candidate-popup-content {
      @extend %popover_content;
      background-color: opacity($osd_bg, $a_osd);
      color: $osd_sec_fg;
    }
  }
}

.popup-separator-menu-item {
  @if $ver < 3.35 {
    height: 1px; // not really the whole box
    margin: 0;
    spacing: 0;
    border-color: if($variant != dark,
                     $div_fg,
                     mix(white, $dark_bg, percentage($a_div_2)));
    border-bottom-width: 1px;
    border-bottom-style: solid;
    background-color: transparent;
  }
  @else {
    padding: 0;

    .popup-separator-menu-item-separator {
      height: 1px;
      margin: 0;
      background-color: if($variant != dark,
                           $div_fg,
                           mix(white, $dark_bg, percentage($a_div_2)));

      @if $ver > 3.35 and $variant == dark {
        .popup-sub-menu & {
          background-color: mix(white, $bg, percentage($a_div_2));
        }
      }
    }
  }
}

@if $ver > 3.33 { // rename popup-menu
  $rename_popup_content: if($ref_weight >= 1.0, 8px, 6px);

  .rename-folder-popup { // concern .popup-menu-item
    .popup-menu {
      &-content { padding: $rename_popup_content 0; }

      &-ornament { width: 0; } // clear unneeded ornament

      &-item {
        spacing: $rename_popup_content;
        &:ltr { padding: 0 $rename_popup_content 0 0; }
        &:rtl { padding: 0 0 0 $rename_popup_content; }
      }
    }

    StEntry {
    }

    .button { // suggested-action button
      padding: if($ref_weight >= 1.0, // subtract borders
                  (7px - 2px) (16px - 2px) (8px - 2px),
                  (5px - 2px) (12px - 2px) (6px - 2px));
      border-radius: $r_2;
      font-weight: 500;
      @include button(suggested-normal, $c: $sggt_bg, $tc: $sel_fg);
      &:hover {
        @include button(suggested-hover, $c: $sggt_bg, $tc: $sel_fg);
      }
      &:focus {
        @include button(suggested-focus, $c: $sggt_bg, $tc: $sel_fg);
      }
      &:active { @include button(suggested-active); }
      &:insensitive {
        padding: if($ref_weight >= 1.0, 7px 16px 8px, 5px 12px 6px);
        @include button(suggested-disabled, $tc: $fg);
      }
    }
  }
}

// Background menu
.background-menu {
  -boxpointer-gap: 0;
  -arrow-rise: 0;
}

// an avatar icon in menus
.system-switch-user-submenu-icon {
  @if $ver < 3.31 {
    &.user-icon {
      icon-size: $icon_size + 4px;
      padding: 0 if($ref_weight >= 1.0,
                    ($avatar_width - ($icon_size + 4px) + $extra_spacing) / 2,
                    ($avatar_width - ($icon_size + 4px)) / 2);
    }

    &.default-icon {
      icon-size: $icon_size;
      padding: 0 if($ref_weight >= 1.0,
                    ($avatar_width - $icon_size + $extra_spacing) / 2,
                    ($avatar_width - $icon_size) / 2);
    }
  }
  @elif $ver < 3.33 {
    icon-size: $icon_size;
    padding: 0 if($ref_weight >= 1.0,
                  ($avatar_width - $icon_size + $extra_spacing) / 2,
                  ($avatar_width - $icon_size) / 2);
  }
}

@if $ver > 3.33 {
  // /*************
  //  * App Icons *
  //  *************/

  // by default, we don't expose any icon outlines/shadows.
  .lowres-icon { // outline for low res icons
    icon-shadow: none;
  }

  .icon-dropshadow { // drop-shadow for large icons
    icon-shadow: none;
  }
}

// /*******
//  * OSD *
//  *******/

.osd-window {
  min-width: 64px;
  min-height: 64px;
  margin: if($ref_weight >= 1.0, 32px, 24px);
  spacing: if($ref_weight >= 1.0, 1em, 0.7em);
  font-weight: 700;
  text-align: center;

  .osd-monitor-label { font-size: 300%; }

  .level {
    height: 3px;
    border-radius: 0;
    background-color: $osd_out_fg;
    color: $sccs;
  }

  .level-bar {
    border-radius: 0;
    background-color: $sccs;
  }

  @if $ver > 3.25 {
    .level { // >= 3.29.90
      -barlevel-height: 3px;
      // FIXME: above 'background-color' property rendered correct trough
      // color already, so keep -background-color style-property transparent
      -barlevel-background-color: transparent;
      -barlevel-active-background-color: $sccs;
      -barlevel-overdrive-color: $dest_bg;
      -barlevel-overdrive-separator-width: 3px;
      -barlevel-border-width: 0;
    }
  }
}

// /***********
//  * Pad OSD *
//  ***********/

.pad-osd {
  &-window {
    padding: if($ref_weight >= 1.0, 32px, 26px);
    background-color: opacity($osd_bg, $a_osd);

    .pad-osd-title {
      &-box { spacing: if($ref_weight >= 1.0, 12px, 10px); }

      &-menu-box { spacing: if($ref_weight >= 1.0, 6px, 5px); }
    }
  }
}

.combo-box-label { width: 15em; }

// /****************
//  * App Switcher *
//  ****************/

.switcher-popup {
  padding: if($ref_weight >= 1.0, 8px, 6px);
  spacing: if($ref_weight >= 1.0, 16px, 12px);
}

.osd-window,
.resize-popup,
.switcher-list { @extend %osd-panel; }

.switcher-list {
  > StLabel { // for app titles in AlternativeTabExtension
    // prepare for tall/dense font-families
    min-height: 13.3px * 2; // use 'px' unit
  }

  &-item-container { spacing: if($ref_weight >= 1.0, 8px, 6px); }

  .item-box {
    padding: if($ref_weight >= 1.0, 6px, 4px);
    border: 2px solid transparent;
    border-radius: $r_2;

    &:outlined { border: 2px solid $osd_out_fg; }
    &:selected {
      background-color: $inv_acc_fill_bg;
      color: $inv_acc_fg;
    }
  }

  .thumbnail-box {
    padding: 2px;
    spacing: 4px;
  }

  .thumbnail { width: if($ref_weight >= 1.0, 256px, 192px); }

  .separator {
    width: 1px;
    background: if($variant != dark,
                   $div_fg,
                   mix(white, $dark_bg, percentage($a_div_2)));
  }
}

.switcher-arrow {
  border-color: transparent;
  color: $osd_sec_fg;
  &:highlighted { color: $osd_fg; }
}

.input-source-switcher-symbol {
  width: if($ref_weight >= 1.0, 96px, 72px);
  height: if($ref_weight >= 1.0, 96px, 72px);
  font-size: if($ref_weight >= 1.0, 300%, 240%);
}

// /*****************
//  * Window Cycler *
//  *****************/

.cycler-highlight {
  border-radius: $r_2 $r_2 0 0;
  @extend %rubberband;
}

// /**********************
//  * Workspace Switcher *
//  **********************/

$ws_container_size: if($ref_weight >= 1.0, 50px, 36px);

.workspace-switcher {
  padding: 0;
  spacing: if($ref_weight >= 1.0, 8px, 6px);
  border: 0;
  border-radius: 0;
  background: transparent;

  &-group { padding: if($ref_weight >= 1.0, 12px, 8px); }

  &-container { @extend %osd-panel; }
}

%switcher_arrow_active {
  height: $ws_container_size + (2px * 2); // concern the box's border width
  border: 0 none transparent;
  border-radius: $r_2;
  background-size: 24px;
  background-color: $inv_acc_fill_bg;
}

.ws-switcher {
  @if $ver < 3.31 {
    @each $d in up, down {
      &-active-#{$d} {
        @extend %switcher_arrow_active;
        @include image-loader($url: 'assets/go-#{$d}.svg');
      }
    }
  }
  @else {
    @each $d in up, down, left, right {
      &-active-#{$d} {
        @extend %switcher_arrow_active;
        @include image-loader($url: 'assets/go-#{$d}.svg');
      }
    }
  }

  &-box {
    height: $ws_container_size;
    border: 2px solid $osd_out_fg;
    border-radius: $r_2;
    background: transparent;
  }
}

%osd-panel {
  // the value of bottom-padding is shared with '.switcher-arrow' size,
  // so do not reduce to < 12px (StDrawingArea)
  padding: if($ref_weight >= 1.0, 16px, 12px);
  border-radius: $r_8;
  border: 0 none transparent;
  color: $osd_fg;
  background-color: opacity($osd_bg, $a_osd);
  box-shadow: $z-depth-4;
}

// /*************************
//  * Tiled Window Previews *
//  *************************/

.tile-preview { // no radius
  border: 1px solid $sel_bg;
  border-radius: 0;
  background-color: opacity($sel_bg, $a_trk_out);

  &-left.on-primary,
  &-left.on-primary.tile-preview-right,
  &-right.on-primary { border-radius: 0; }
}

// /***********
//  * Top Bar *
//  ***********/

#panel {
  // default height
  min-height: if($ref_weight >= 1.0, 30px,  // = 2.25em
                                     25px); // = 1.875em
  // special height for upscaled via font-scaling-factor
  // this should be always smaller than min-height if f-s-f < 1.0
  height: if($ref_weight >= 1.0, 2.1em, 1.8em);
  @if ($ver > 3.25) and ($ver < 3.31) {
    background-color: opacity($panel_bg, $a_fg_3rd);
    box-shadow: $empty_shadow;
  }
  @else {
    background-color: $panel_bg;
  }
  font-weight: 700;
  transition-timing-function: $tr_t_std;
  transition-duration: $tr_d_lng;

  @if $ver > 3.35 {
    &:overview,
    &.unlock-screen,
    &.login-screen { @extend %translucent_panel; }
  }
  @else {
    &:overview,
    &.unlock-screen,
    &.login-screen,
    &.lock-screen { @extend %translucent_panel; }
  }

  #panelLeft, // spacing between activities<>app menu and such
  #panelCenter { spacing: 0; }

  .panel-corner { // unset all properties
    -panel-corner-radius: 0;
    -panel-corner-background-color: $panel_hidden_bg;
    -panel-corner-border-width: 0;
    -panel-corner-border-color: transparent;
    transition-duration: $tr_d_non;

    &:hover,
    &:focus {
      background-color: $panel_hidden_bg;
      box-shadow: inset 0 2px $osd_out_fg;
    }
    &:active,
    &:overview {
      background-color: $panel_hidden_bg;
      box-shadow: inset 0 2px $sel_bg;
    }

    @if $ver > 3.35 {
      &.login-screen,
      &.unlock-screen { @extend %translucent_panel_corner; }
    }
    @else {
      &.lock-screen,
      &.login-screen,
      &.unlock-screen { @extend %translucent_panel_corner; }
    }

    StLabel { padding: if($ref_weight >= 1.0, 0 4px 1px, 0 2px 1px); }

    StIcon { margin-top: 1px; } // reset base-line
  }

  .panel-button {
    -natural-hpadding: if($ref_weight >= 1.0, 10px, 6px);
    -minimum-hpadding: if($ref_weight >= 1.0, 10px, 6px);
    color: $osd_fg;
    @if $ver > 3.25 {
      text-shadow: none;
      icon-shadow: none;
    }
    font-weight: 700;
    // FIXME: once these buttons are placed in panel-corners,
    // all of transition properties are ignored?
    // So stop using transition as default...
    transition-duration: $tr_d_non;

    .app-menu-icon { // dimensions of the icon are hardcoded
      -st-icon-style: symbolic;
      padding: if($ref_weight >= 1.0, 0 5px, 0 2px);
    }

    &:hover {
      background-color: $panel_hidden_bg;
      color: if($variant != light, $sel_fg, black);
      box-shadow: inset 0 2px $osd_out_fg;
    }
    &:active,
    &:focus,
    &:checked,
    &:overview {
      // Trick due to St limitations. It needs a background to draw
      // a box-shadow
      background-color: $panel_hidden_bg;
      color: if($variant != light, $sel_fg, black);
      box-shadow: inset 0 2px $sel_bg;

     @if $ver < 3.25 {
        > .system-status-icon { icon-shadow: none; }
      }
    }

    .system-status-icon {
      icon-size: $icon_size;
      padding: if($ref_weight >= 1.0, 0 5px, 0 3px);
    }

    StLabel { padding: if($ref_weight >= 1.0, 0 4px 1px, 0 2px 1px); }

    StIcon { margin-top: 1px; } // reset base-line

    @if $ver > 3.35 {
      &,
      &:hover,
      &:active,
      &:focus,
      &:checked,
      &:overview,
      &.unlock-screen,
      &.login-screen { @extend %panel_arrow; }
    }
    @else {
      &,
      &:hover,
      &:active,
      &:focus,
      &:checked,
      &:overview,
      &.unlock-screen,
      &.login-screen,
      &.lock-screen { @extend %panel_arrow; }
    }

    @if $ver > 3.25 {
      &.clock-display {
        // do-not-disturb icon + clock label
        @if $ver > 3.35 { // move L/R padding to child StLabel
          -natural-hpadding: 0;
          -minimum-hpadding: 0;
          &:hover,
          &:active,
          &:focus,
          &:checked,
          &:overview { box-shadow: $empty_shadow; }

          .clock-display-box { spacing: if($ref_weight >= 1.0, 10px, 6px); }

          .clock {
            padding-left: if($ref_weight >= 1.0, 10px, 6px);
            padding-right: if($ref_weight >= 1.0, 10px, 6px);
            background-color: $panel_hidden_bg; // for line-indicators
          }

          // draw line highlight on StLabel only
          &:hover .clock { box-shadow: inset 0 2px $osd_out_fg; }

          &:active,
          &:focus,
          &:checked,
          &:overview {
            .clock { box-shadow: inset 0 2px $sel_bg; }
          }
        }

        // notification dot at the right-side of clock label
        > StBoxLayout > StIcon {
          padding-bottom: 1px; // keep the StLabel baseline
          icon-size: $icon_size;
          color: $sggt_bg;
        }
      }
    }
  }

  @if $ver > 3.25 {
    StLabel { text-shadow: none; }

    StIcon { icon-shadow: none; }
  }

  .panel-status-indicators-box,
  .panel-status-menu-box { spacing: 0; }

  .panel-status-indicators-box {
    .power-status StLabel { // battery percentage?
      margin-top: 0.05em; // smaller fonts are used
      padding: 0;
    }
  }

  .screencast-indicator { color: $dest_bg; }

  @if $ver > 3.25 {
    .remote-access-indicator { color: $warn; } // > 3.29.4

    @if $ver < 3.31 {
      &.solid { // solid-mode of TopBar
        background-color: $panel_bg; // fill whole area
        // FIXME: override ugly ubuntu.css
        background-gradient-start: $panel_bg;
        background-gradient-end: $panel_bg;
        transition-timing-function: $tr_t_dec;
        transition-duration: $tr_d_lng; // transparent -> solid

        .panel-corner { -panel-corner-background-color: $panel_bg; }

        .panel-button {
          color: $osd_fg;
          &:hover,
          &:active,
          &:focus,
          &:checked { color: if($variant != light, $sel_fg, black); }

          @if $ver > 3.35 {
            &,
            &:hover,
            &:active,
            &:focus,
            &:checked,
            &:overview,
            &.unlock-screen,
            &.login-screen {
              > .system-status-icon { icon-shadow: none; }
            }
          }
          @else {
            &,
            &:hover,
            &:active,
            &:focus,
            &:checked,
            &:overview,
            &.unlock-screen,
            &.login-screen,
            &.lock-screen {
              > .system-status-icon { icon-shadow: none; }
            }
          }
        }
      }
    }
  }
}

%translucent_panel {
  background-color: if($variant == light, opacity($panel_bg, $a_fg_3rd),
                                          $panel_hidden_bg);
  @if $ver > 3.25 { box-shadow: $empty_shadow; }
  @else { box-shadow: inset 0 2px $panel_bg; }
  transition-timing-function: $tr_t_dec;
  transition-duration: $tr_d_lng;
}

%translucent_panel_corner {
  -panel-corner-radius: 0;
  -panel-corner-background-color: transparent;
  -panel-corner-border-width: 0;
  -panel-corner-border-color: transparent;
}

%panel_arrow {
  .popup-menu-arrow { // hide down-arrows
    width: 0;
    height: 0;
    color: transparent;
    icon-shadow: none; // unset drop-shadow
  }
}

// /********************
//  * Calendar Popover *
//  ********************/

#calendarArea {
  @if $ver < 3.35 {
    padding: if($ref_weight >= 1.0, 0.75em 1.0em, 0.5em 0.7em);
  }
  @else {
    padding: if($ref_weight >= 1.0, 0.75em 0, 0.5em 0);
  }
}

%reset_cal {
  border: 0 none transparent;
  background-color: transparent;
  box-shadow: $empty_shadow;
  text-shadow: none;
  icon-shadow: none;
}

.calendar {
  margin-bottom: if($ref_weight >= 1.0, 1em, 0.7em);
  border-radius: $r_2;
  @if $ver > 3.35 {
    @extend %reset_cal;
    padding-left: 0;
    padding-right: 0;
    color: $fg;
  }
}

.calendar,
.datemenu-today-button,
.datemenu-displays-box,
.message-list-sections { margin: if($ref_weight >= 1.0, 0 1.5em, 0 1em); }

.datemenu { // optimize spacing
  &-calendar-column {
    spacing: 0.5em;
    @if $ver > 3.35 {
      padding: if($ref_weight >= 1.0, 0 1em, 0 0.7em);
      &:ltr,
      &:rtl { margin: 0; } // override Adwaita's theming
    }
  }

  &-displays-section { padding-bottom: 0; }

  &-displays-box { spacing: if($ref_weight >= 1.0, 1em, 0.7em); }
}

// pane-separator between messages and calendar
.datemenu-calendar-column {
  border-style: solid;
  border-color: if($variant != dark,
                   $div_fg,
                   mix(white, $dark_bg, percentage($a_div_2)));

  &:ltr { border-left-width: 1px; }
  &:rtl { border-right-width: 1px; }
}

@if $ver > 3.25 {
  @if $ver < 3.37 {
    .datemenu-today-button,
    .world-clocks-button,
    .weather-button,
    .events-section-title {
      @if $ver > 3.35 { @extend %reset_cal; }
      padding: 0.4em;
      border-radius: $r_2;
    }
  }
  @else {
    .events-button,
    .datemenu-today-button,
    .world-clocks-button,
    .weather-button,
    .events-section-title {
      @extend %reset_cal;
      padding: 0.4em;
      border-radius: $r_2;
    }
  }
}
@else {
  .datemenu-today-button,
  .world-clocks-button,
  .weather-button,
  .message-list-section-title, // in 3.24 cycle, use .event-section-title
  .events-section-title {
    padding: 0.4em;
    border-radius: $r_2;
  }
}

@if $ver > 3.25 {
  .datemenu-today-button,
  .world-clocks-button,
  .weather-button,
  .events-section-title {
    color: $sec_fg;
    &:hover,
    &:focus {
      color: $fg;
      background-color: $semi_fill_bg;
    }
    &:active {
      color: $fg;
      background-color: $fill_bg;
    }
  }
}
@else {
  .datemenu-today-button,
  .world-clocks-button,
  .weather-button,
  .message-list-section-title, // in 3.24 cycle, use .event-section-title
  .events-section-title {
    color: $sec_fg;
    &:hover,
    &:focus {
      color: $fg;
      background-color: $semi_fill_bg;
    }
    &:active {
      color: $fg;
      background-color: $fill_bg;
    }
  }
}

@if $ver > 3.37 {
  .events-button {
    color: $fg;

    .events {
      &-box { spacing: 0; }

      &-list { spacing: 0.4em; }

      &-title {
        color: $ter_fg;
        font-weight: 700;
      }
    }

    .event-time {
      color: $ter_fg;
      font-weight: 400;
      font-size: 90%;
    }
  }
}

.datemenu-today-button { // re-define foregrounds
  .day-label {
    color: $ter_fg;
    font-weight: 700;
  }

  .date-label {
    color: $sec_fg;
    font-size: 150%;
    font-weight: 500;
  }

  &:hover,
  &:focus,
  &:active {
    .day-label { color: $sec_fg; }

    .date-label { color: $fg; }
  }
}

@if $ver > 3.25 {
  .world-clocks-header,
  .weather-header,
  .events-section-title {
    color: $ter_fg;
    font-weight: 700;
  }
}
@else {
  .world-clocks-header,
  .weather-header,
  .message-list-section-title, // in 3.24 cycle, use .event-section-title
  .events-section-title {
    color: $ter_fg;
    font-weight: 700;
  }
}

@if $ver < 3.31 {
  .world-clocks-grid { spacing-rows: 0.4em; }
}
@else { // World Clock and Weather (>= 3.31)
  .world-clocks-grid,
  .weather-grid {
    spacing-rows: 0.4em;
    spacing-columns: 0.8em;
  }

  .world-clocks {
    &-city,
    &-time {
      color: $fg;
      font-weight: 400;
      font-size: 100%;
    }

    @if $ver > 3.37 {
      &-time {
        &:ltr { text-align: right; }
        &:rtl { text-align: left; }
      }
    }

    &-timezone {
      color: $ter_fg;
      font-size: 90%;
    }
  }

  .weather {
    @if $ver > 3.35 {
      &-box,
      &-header-box { spacing: 0.4em; }
    }
    @else {
      &-box { spacing: 0.4em; }
    }

    &-header.location {
      color: $sec_fg;
      font-weight: 400;
      font-size: 90%;
    }

    &-forecast {
      &-icon {
        width: 2.4em; // = .calendar-day-base
        height: 2.4em;
        border-radius: $r;
        background-color: opacity($sec_fg, $a_trk_1);
        color: $sec_fg;
        icon-size: if($ref_weight >= 1.0, $icon_size * 1.5,
                                          $icon_size);
      }

      &-time {
        @if $ver > 3.35 { padding: 0.2em 0 0.4em; }
        color: $ter_fg;
        font-size: 80%;
      }

      @if $ver > 3.35 {
        &-temp { font-weight: 700; }
      }
    }
  }
}

.calendar-month-label {
  padding: 4px 0;
  color: $fg;
  font-weight: 700;
}

.pager-button {
  width: 2.1em;
  height: 2.1em;
  border-radius: $r;
  color: $fg;
  background-color: transparent;
  &:hover { background-color: $semi_fill_bg; }
  &:focus {
    background-color: opacity($dark_bg, 0.01);
    box-shadow: inset 0 0 0 2px $out_fg;
    &:hover { background-color: $semi_fill_bg; }
  }
  &:active { background-color: $fill_bg; }
}

.calendar-change-month {
  &-back { // arrow back
    @if $ver < 3.31 {
      @include image-loader($url: 'assets/calendar-arrow-left.svg');
    }
    @else {
      color: $sec_fg;

      StIcon { icon-size: $icon_size; }
    }
    &:hover,
    &:focus {
      @if $ver < 3.31 {
        @include image-loader($url: 'assets/calendar-arrow-left-hover.svg');
      }
      @else { color: $fg; }
    }

    @if $ver < 3.31 {
      &:rtl {
        @include image-loader($url: 'assets/calendar-arrow-right.svg');
      }
      &:rtl:hover,
      &:rtl:focus {
        @include image-loader($url: 'assets/calendar-arrow-right-hover.svg');
      }
    }
  }

  &-forward { // arrow forward
    @if $ver < 3.31 {
      @include image-loader($url: 'assets/calendar-arrow-right.svg');
    }
    @else {
      color: $sec_fg;

      StIcon { icon-size: $icon_size; }
    }
    &:hover,
    &:focus {
      @if $ver < 3.31 {
        @include image-loader($url: 'assets/calendar-arrow-right-hover.svg');
      }
      @else { color: $fg; }
    }

    @if $ver < 3.31 {
      &:rtl {
        @include image-loader($url: 'assets/calendar-arrow-left.svg');
      }
      &:rtl:hover,
      &:rtl:focus {
        @include image-loader($url: 'assets/calendar-arrow-left-hover.svg');
      }
    }
  }
}

.calendar-day-base {
  width: 2.4em;
  height: 2.4em;
  padding: 0;
  margin: 0.2em;
  border-radius: $r;
  @if $ver > 3.35 { border: 0 none transparent; }
  font-size: 90%;
  text-align: center;
  transition-duration: $tr_d_sht;
  &:hover,
  &:focus { background-color: $semi_fill_bg; }
  &:active,
  &:selected {
    &, &:hover {
      color: $sel_fg;
      background-color: $sel_bg;
      transition-duration: $tr_d_std;
    }
  }

  &.calendar-day-heading { // day of week heading
    width: 2.4em;
    height: 1.9em;
    margin-top: 0.2em;
    padding: 0.5em 0 0;
    background-color: transparent;
    color: $ter_fg;
    font-weight: 500;
    font-size: 90%;
    text-align: center;
  }
}

.calendar-week-number { // day of week heading
  width: 2.4em;
  height: 1.9em;
  margin: 0.2em;
  @if $ver < 3.37 { padding: 0.5em 0 0; }
  background-color: transparent;
  color: $ter_fg;
  font-weight: 500;
  text-align: center;
}

.calendar-day { // border collapse hack - see calendar.js
  border-width: 0;
  color: $fg;

  &-top { border-top-width: 0; }

  &-left { border-left-width: 0; }

  &-with-events {
    background-image: none;
    color: $link_fg;
    font-weight: 500;
    @if $ver < 3.35 { text-decoration: underline; }
    @else {
      @include image-loader($url: 'calendar-today.svg');
      background-size: contain;
    }
    &:hover,
    &:focus { background-color: opacity($link_fg, $a_trk_1); }
    &:active,
    &:selected {
      &,
      &:hover,
      &:focus {
        color: $sel_fg;
        background-color: $sel_bg;
        @if $ver > 3.35 { background-image: none; }
        border-color: transparent;
      }
    }
  }
}

.calendar-work-day,
.calendar-nonwork-day {
}

.calendar-today {
  border: none;
  font-weight: 700;

  &,
  &.calendar-day-with-events {
    background-color: if($variant == dark, $sec_sel_fg, $sec_fg);
    color: if($variant == dark, $dark_bg, $sec_sel_fg);
    &:hover,
    &:focus {
      background-color: if($variant == dark, $sel_fg, $fg);
      color: if($variant == dark, black, $sel_fg);
    }
    &:selected {
      &, &:hover {
        color: $sel_fg;
        background-color: $sel_bg;
        border-color: transparent;
      }
    }
  }
}

.calendar-other-month-day {
  color: opacity($ter_fg, $a_fg_3rd);
  &:hover,
  &:focus {
    color: $ter_fg;
    background-color: opacity($ter_fg, $a_trk_1);
  }

  &.calendar-day-with-events {
    color: opacity($link_fg, $a_fg_3rd * $a_fg_3rd);
    @if $ver > 3.35 {
      @include image-loader($url: 'calendar-today-other.svg');
    }
    &:hover,
    &:focus {
      color: opacity($link_fg, $a_fg_3rd);
      background-color: opacity($link_fg, $a_fg_3rd * $a_trk_1);
    }
  }
}

// /****************
//  * Message List *
//  ****************/

.message-list {
  width: if($ref_weight >= 1.0, 420px, 380px);

  &-clear-button.button {
    @if $ver < 3.35 {
      margin:  if($ref_weight >= 1.0, 1.5em 1.5em 0, 1.2em 1.2em 0);
    }
    font-weight: 500;
    @include button(flat-normal, $tc: $acc_fg);
    &:hover,
    &:focus { @include button(flat-hover, $tc: $acc_fg); }
    &:active { @include button(flat-active, $tc: $acc_fg); }
    &:insensitive { @include button(flat-disabled); }
  }

  @if $ver > 3.35 { // parent container of button and switch
    &-controls {
      margin:  if($ref_weight >= 1.0, 1.5em 1.5em 0, 1.2em 1.2em 0);

      > StLabel { color: $fg; } // 'Do Not Disturb' label
    }
  }

  @if $ver < 3.25 {
    &-sections { spacing: if($ref_weight >= 1.0, 1.5em, 1.2em); }

    &-section,
    &-section-list { spacing: 0.7em; }

    &-section-title-box { spacing: 0.4em; }

    &-section-close {
      > StIcon {
        padding: 0.45em;
        border-radius: $r;
        icon-size: $icon_size;
        color: $sec_fg;
        background-color: transparent;
      }

      // FIXME: how do you do this in sass?
      &:hover > StIcon,
      &:focus > StIcon {
        color: $fg;
        background-color: $semi_fill_bg;
      }
      &:active > StIcon {
        color: $fg;
        background-color: $fill_bg;
      }
    }
  }
  @else {
    &-sections { spacing: 0; }

    &-section {
      spacing: 0;
      padding: 0;

      &-list {
        spacing: 1px; // for internal separators
        margin-top: if($ref_weight >= 1.0, 0.6em / 2, 0.45em / 2);
        margin-bottom: if($ref_weight >= 1.0, 0.6em * 1.5, 0.45em * 1.5);
        padding: 0;
        border: 1px solid if($variant == dark, $hidden_fill_bg,
                                               opacity(white, 0.01));
        // set a half of div_fg for internal separators
        background-color: if($variant == dark, opacity(white, $a_div_2),
                                               opacity(black, $a_div_2));
      }
    }
  }

  // labels for empty messages/events
  &-placeholder {
    @if $ver > 3.35 { spacing: if($ref_weight >= 1.0, 12px, 8px); }
    color: $ter_fg;
  }
}

.message {
  // No need to set any height/min-height with fixed values,
  // 'no-values' can keep its height automatically even
  // if switched to scrolled-view mode.
  // So only padding property seems enough to control the spacing.
  @if $ver > 3.25 { padding: if($ref_weight >= 1.0, 0.9em, 0.6em); }
  @else { padding: 6px; }
  border-radius: 0;
  background-color: transparent;
  color: $osd_fg;
  @if $ver > 3.35 {
    margin: 0;
    border: 0 none transparent;
    box-shadow: $empty_shadow;
  }

  .popup-menu & {
    @if $ver > 3.25 {
      padding: if($ref_weight >= 1.0, 0.6em, 0.45em);
      background-color: $base;
      @if $ver > 3.33 { border: 1px solid $base; }
    }
    @else {
      background-color: $semi_fill_bg;
      &:ltr { box-shadow: inset 4px 0 $out_fg; }
      &:rtl { box-shadow: inset -4px 0 $out_fg; }
    }
    color: $sec_fg;

    @if $ver < 3.31 {
      .message-icon-bin > StIcon,
      .message-title,
      .message-content { color: $sec_fg; }
    }
    @else {
      @if $ver > 3.35 {
        .message-icon-bin > StIcon,
        .message-icon-bin > .fallback-app-icon,
        .message-title,
        .message-body { color: $sec_fg; }
      }
      @else {
        .message-icon-bin > StIcon,
        .message-icon-bin > .fallback-app-icon,
        .message-title,
        .message-content { color: $sec_fg; }
      }
    }

    &:hover,
    &:focus {
      @if $ver > 3.25 {
        background-color: mix($fg, $base, percentage($a_trk_1)); // use opaque
        @if $ver > 3.33 {
          border: 1px solid mix($fg, $base, percentage($a_trk_1));
        }
      }
      @else {
        background-color: $acc_semi_fill_bg;
        &:ltr { box-shadow: inset 4px 0 opacity($acc_bg, $a_fg_2nd); }
        &:rtl { box-shadow: inset -4px 0 opacity($acc_bg, $a_fg_2nd); }
      }
      color: $fg;

      @if $ver < 3.31 {
        .message-icon-bin > StIcon,
        .message-title,
        .message-content { color: $fg; }
      }
      @else {
        @if $ver > 3.35 {
          .message-icon-bin > StIcon,
          .message-icon-bin > .fallback-app-icon,
          .message-title,
          .message-body { color: $fg; }
        }
        @else {
          .message-icon-bin > StIcon,
          .message-icon-bin > .fallback-app-icon,
          .message-title,
          .message-content { color: $fg; }
        }
      }

      .message-secondary-bin {
        &,
        > .event-time { color: $sec_fg; }
      }
    }
    &:active {
      @if $ver > 3.25 {
        background-color: mix($fg, $base, percentage($a_trk_2));
        @if $ver > 3.33 {
          border: 1px solid mix($fg, $base, percentage($a_trk_2));
        }
      }
      @else {
        background-color: $acc_fill_bg;
        &:ltr { box-shadow: inset 4px 0 $acc_bg; }
        &:rtl { box-shadow: inset -4px 0 $acc_bg; }
      }
      color: $fg;

      @if $ver < 3.31 {
        .message-icon-bin > StIcon,
        .message-title,
        .message-content { color: $fg; }
      }
      @else {
        @if $ver > 3.35 {
          .message-icon-bin > StIcon,
          .message-icon-bin > .fallback-app-icon,
          .message-title,
          .message-body { color: $fg; }
        }
        @else {
          .message-icon-bin > StIcon,
          .message-icon-bin > .fallback-app-icon,
          .message-title,
          .message-content { color: $fg; }
        }
      }

      .message-secondary-bin {
        &,
        > .event-time { color: $sec_fg; }
      }
    }
  }

  &-icon-bin {
    @if $ver > 3.25 {
      margin: if($ref_weight >= 1.0, 0.2em 0.6em 0, 0.2em 0.45em 0);
    }
    @else {
      // subtract .message-content's 'close' button padding
      &:ltr { margin: 4px - 2px 0 0 6px; }
      &:rtl { margin: 4px - 2px 6px 0 0; }
    }
    padding: 0; // FIXME: needs to override the stock gresource
                // (Since upstream still uses padding properties)

    @if $ver < 3.31 {
      > StIcon {
        min-width: $icon_size;  // for an indentation of .message-content
        min-height: $icon_size; // reserve StIcon region even if StIcon was null
        color: $osd_fg;
        icon-size: $icon_size;
        -st-icon-style: symbolic;
      }
    }
    @else {
      > StIcon,
      > .fallback-app-icon {
        min-width: $icon_size;
        min-height: $icon_size;
        color: $osd_fg;
        icon-size: $icon_size;
        -st-icon-style: symbolic;
      }
    }
  }

  &-secondary-bin {
    color: $osd_ter_fg;
    @if $ver > 3.25 {
      &:ltr { padding-left: if($ref_weight >= 1.0, 0.6em, 0.45em); }
      &:rtl { padding-right: if($ref_weight >= 1.0, 0.6em, 0.45em); }
    }
    @else {
      &:ltr { padding-left: 6px; }
      &:rtl { padding-right: 6px; }
    }

    > .event-time {
      @if $ver > 3.25 {
        min-height: $icon_size - 4px;
        margin-bottom: (1.15em - 0.9em) * 1.22;
        padding: 0;
        font-size: 90%;
      }
      @else {
        // '.message-title' padding + extra 0.1em for finer base-line
        padding-bottom: 0.5em + 0.1em;
        font-size: 80%;
      }
      color: $osd_ter_fg;
    }

    > StIcon {
      padding: 0.2em;
      icon-size: $icon_size;
    }

    .popup-menu & {
      &,
      > .event-time { color: $ter_fg; }
    }
  }

  &-title {
    @if $ver > 3.25 {
      min-height: $icon_size - 4px;
      margin-bottom: 0.1em; // base-line correction
      padding: 1.33px 0 0; // for smaller font-scaling-factor
    }
    @else {
      padding: 0 0 4px;
    }
    color: $osd_fg;
    font-weight: 700;
    font-size: 110%;
  }

  &-content {
    @if $ver > 3.25 {
      padding: 0;
    }
    @else {
      padding: 0 8px 4px;
      font-size: 90%;
    }
    color: $osd_fg;

    * > StIcon {
      @if $ver > 3.25 {
        padding: 0.2em;
        icon-size: $icon_size;
      }
      @else {
        padding: 2px;
        icon-size: 1.09em;
      }
      border-radius: $r;
    }

    StButton > StIcon { // close button
      // FIXME: alpha blended secondary color can't be rendered in OSD?
      color: $inv_acc_fg;

      .popup-menu & { color: $sec_acc_fg; }
    }

    StButton:hover > StIcon,
    StButton:focus > StIcon {
      color: $inv_acc_fg;
      background-color: $inv_acc_semi_fill_bg;

      .popup-menu & {
        color: $acc_fg;
        background-color: $acc_semi_fill_bg;
      }
    }
    StButton:active > StIcon {
      color: $inv_acc_fg;
      background-color: $inv_acc_fill_bg;

      .popup-menu & {
        color: $acc_fg;
        background-color: $acc_fill_bg;
      }
    }
  }

  @if $ver > 3.35 {
    &-body { color: $osd_fg; }
  }
}

@if $ver > 3.35 {
  // NEEDS_REVIEW: Was this really needed?
  .message-close-button {
  }
}

.message-media-control {
  padding: 0 8px;
  margin: 0 6px;
  border-radius: $r;
  color: $sec_acc_fg;
  background: transparent;
  background-size: 32px 32px;
  &:hover {
    color: $acc_fg;
    @include image-loader($url: 'assets/media-control-hover.svg');
    background-size: 32px 32px;
  }
  &:active {
    color: $acc_fg;
    @include image-loader($url: 'assets/media-control-active.svg');
    background-size: 32px 32px;
  }
  &:insensitive {
    color: $dis_acc_fg;
    background-image: none;
    background: transparent;
  }
}

.media-message-cover-icon {
  // use 'important' flag to override .message-icon-bin > StIcon size
  icon-size: if($ref_weight >= 1.0, 48px, 36px) !important;

  &.fallback {
    icon-size: if($ref_weight >= 1.0, 24px, 16px) !important;
    padding: if($ref_weight >= 1.0, 12px, 10px);
    border: none;
    border-radius: $r_2;
    color: $osd_ter_fg;
    background-color: $osd_semi_fill_bg;
    box-shadow: $empty_shadow;

    .popup-menu .message & {
      color: $ter_fg;
      background-color: $semi_fill_bg;
    }

    .popup-menu .message:hover &,
    .popup-menu .message:focus &,
    .popup-menu .message:active & {
      color: $sec_fg;
      background-color: $acc_fill_bg;
    }
  }
}

// /************
//  * App Menu *
//  ************/

#appMenu {
  @if $ver < 3.33 {
    // deprecated >= 3.33/34 cycle
    @include image-loader($url: 'process-working.svg', $type: sp);
  }
  padding: if($ref_weight >= 1.0, 0 10px, 0 6px);

  // LR padding and make more gap between label and spinner
  StLabel {
    &:ltr { padding: if($ref_weight >= 1.0, 0 10px 1px 3px, 0 6px 1px 2px); }
    &:rtl { padding: if($ref_weight >= 1.0, 0 3px 1px 10px, 0 2px 1px 6px); }
  }

  .label-shadow { color: transparent; }
}


@if $ver > 3.25 { // limit maximum width
  .app-menu,
  .app-well-menu { max-width: 28em; }
}

.aggregate-menu {
  min-width: 24em;

  .popup-menu-icon {
    padding: if($ref_weight >= 1.0, 0 6px, 0 4px);
    @if $ver > 3.35 { -st-icon-style: symbolic; }
  }
}

@if $ver < 3.35 {
  .system-menu-action {
    padding: if($ref_weight >= 1.0, 10px, 8px);
    border-radius: $r;
    @include button(normal);
    @if $ver > 3.25 { -st-icon-style: symbolic; } // >= 3.29.90
    &:hover { @include button(hover); }
    &:focus { @include button(focus); }
    &:active {
      &, &:focus { @include button(active); }
    }
    &:checked { // this might not be needed
      &, &:focus { @include button(checked); }
    }

    > StIcon { icon-size: $icon_size; }
  }
}

// /**********************
//  * Activities Ripples *
//  **********************/

$ripple_d: 52px;

%ripple_bg {
  border: 0 none transparent; // for safety
  background-color: opacity($acc_bg, $a_fg_3rd);
  box-shadow: $empty_shadow;
}

.ripple-box {
  width: $ripple_d;
  height: $ripple_d;
  border-radius: 0 0 $ripple_d 0; // top-left corner
  background-image: none; // need to unset the stock asset images
  @extend %ripple_bg;

  &:rtl { border-radius: 0 0 0 $ripple_d; } // top-right corner
}

@if $ver > 3.33 {
  .ripple-pointer-location {
    width: $ripple_d;
    height: $ripple_d;
    border-radius: $ripple_d / 2;
    @extend %ripple_bg;
  }
}

// /**************
//  * Rubberband *
//  **************/

%rubberband {
  border: 1px solid $sel_bg;
  background-color: opacity($sel_bg, $a_trk_out);
  box-shadow: $empty_shadow; // for safety
}

@if $ver > 3.31 {
  .select-area-rubberband {
    border-radius: 0;
    @extend %rubberband;
  }
}

// /*****************
//  * Close Buttons *
//  *****************/

$close_button_size: if($ver < 3.35, 32px,
                                    if($ref_weight >= 1.0, 2.5em, 1.8em));

.window-close {
  width: $close_button_size;
  height: $close_button_size;
  @if $ver < 3.37 { -shell-close-overlap: $close_button_size * 0.75; }
  @if $ver < 3.31 {
    @include image-loader($url: 'assets/window-close.svg');
    background-size: $close_button_size;
    -st-background-image-shadow: $z-depth-1;
  }
  @else {
    @if $ver > 3.35 {
      margin: 0.1em; // previent unwanted truncated button top
    }
    border-radius: $r;
    border: 0 none transparent;
    background-color: $dest_bg;
    color: $sel_fg;
    box-shadow: $z-depth-1;

    StIcon { icon-size: $icon_size; } // for safety
  }
  // FIXME: image duration causes weird deformation of images
  // while transitioning, keep non-duration here
  transition-duration: $tr_d_non;
  &:hover {
    @if $ver < 3.31 {
      @include image-loader($url: 'assets/window-close-hover.svg');
      -st-background-image-shadow: $z-depth-2;
    }
    @else {
      background-color: mix($dest_bg, $sel_fg, percentage(1 - $a_trk_1));
      color: $sel_fg;
      box-shadow: $z-depth-2;
    }
  }
  &:active {
    @if $ver < 3.31 {
      @include image-loader($url: 'assets/window-close-active.svg');
      -st-background-image-shadow: $z-depth-2;
    }
    @else {
      background-color: $sel_bg;
      color: $sel_fg;
      box-shadow: $z-depth-2;
    }
  }
}

// /*************
//  * Pie Timer *
//  *************/

@if $ver > 3.33 {
  $progress_width: 3px;

  .pie-timer {
    width: $ripple_d + ($progress_width * 2);
    height: $ripple_d + ($progress_width * 2);
    -pie-border-width: $progress_width;
    -pie-border-color: $acc_bg; // progress bit
    -pie-background-color: opacity($acc_bg, $a_trk_out); // trough
  }
}

// /*******************
//  * Network Dialogs *
//  *******************/

.nm-dialog {
  max-height: 34em;
  min-height: 28em;
  min-width: 34em;

  &-content {
    spacing: if($ref_weight >= 1.0, 20px, 16px);
    padding: if($ref_weight >= 1.0, 24px, 18px);
  }

  &-header-hbox {
    spacing: if($ref_weight >= 1.0, 10px, 7px);
    // dimming for subtitle
    color: $osd_ter_fg;
  }

  &-header { // title
    color: $osd_fg;
    font-weight: 700;
    font-size: 110%;
  }

  &-header-icon {
    icon-size: $icon_size * 2;
    color: $osd_fg;
  }

  &-airplane {
    &-box {
      spacing: if($ref_weight >= 1.0, 12px, 9px);

      .button {
        font-weight: 500;
        @if $variant != light {
          @include button(flat-normal, $tc: $inv_acc_fg);
          &:hover { @include button(flat-hover, $tc: $inv_acc_fg); }
          &:active {
            @include button(flat-active, $tc: $inv_acc_fg);
            box-shadow: $empty_shadow;
          }
          &:insensitive { @include button(flat-disabled, $tc: $osd_fg); }
        }
        @else {
          @include button(flat-normal, $tc: $acc_fg);
          &:hover { @include button(flat-hover, $tc: $acc_fg); }
          &:active {
            @include button(flat-active, $tc: $acc_fg);
            box-shadow: $empty_shadow;
          }
          &:insensitive { @include button(flat-disabled, $tc: $fg); }
        }
      }
    }

    &-headline {
      font-weight: 700;
      text-align: center;
    }

    &-text { color: $osd_fg; }
  }

  &-scroll-view {
    padding: 0;
    border: 1px solid $div_fg;
    background-color: transparent;
  }

  &-item {
    spacing: if($ref_weight >= 1.0, 20px, 16px);
    padding: if($ref_weight >= 1.0, 12px, 8px);
    background-color: transparent; // shut up 3rd-party gresources
    color: $osd_fg;
    font-size: 100%;
    &:selected {
      background-color: $sel_bg;
      color: $sel_fg;
    }
  }

  &-icons { spacing: 6px; }

  &-icon { icon-size: $icon_size; }
}

.no-networks {
  &-label { color: $osd_ter_fg; }

  &-box { spacing: if($ref_weight >= 1.0, 12px, 8px); }
}

// /************
//  * Overview *
//  ************/

#overview {
  spacing: if($ref_weight >= 1.0, 24px, 18px);

  &-controls { padding-bottom: if($ref_weight >= 1.0, 32px, 26px); }

  StScrollBar {
    StBin#trough { background-color: opacity(black, $a_trk_1); }

    StButton#vhandle,
    StButton#hhandle { // use variant-sensitive slider-bit
      background-color: opacity($ovv_fg, $a_fg_3rd * $a_fg_3rd);
      &:hover { background-color: opacity($ovv_fg, $a_fg_2nd * $a_fg_3rd); }
      &:active { background-color: $ovv_fg; }
    }
  }

  @if $variant == light { // for .app-folder-popup
    StScrollView.all-apps StScrollBar {
      StBin#trough { background-color: opacity($base, $a_fg_3rd); }

      StButton#vhandle,
      StButton#hhandle {
        background-color: opacity($fg, $a_fg_3rd * $a_fg_3rd);
        &:hover { background-color: opacity($fg, $a_fg_2nd * $a_fg_3rd); }
        &:active { background-color: $fg; }
      }
    }
  }
}

.window-picker { // container around window thumbnails
  @if $ver > 3.25 {
    @if $ver < 3.37 {
      -horizontal-spacing: if($ref_weight >= 1.0, 16px, 12px);
      -vertical-spacing: if($ref_weight >= 1.0, 16px, 12px);
      spacing: if($ref_weight >= 1.0, 16px / 2, 12px / 2);
    }
    padding: if($ref_weight >= 1.0, 16px, 12px);
  }
  @else {
    -horizontal-spacing: if($ref_weight >= 1.0, 32px, 26px);
    -vertical-spacing: if($ref_weight >= 1.0, 32px, 26px);
    padding-left: if($ref_weight >= 1.0, 32px, 26px);
    padding-right: if($ref_weight >= 1.0, 32px, 26px);
    padding-bottom: if($ref_weight >= 1.0, 48px, 36px);
  }

  &.external-monitor {
    @if $ver > 3.25 { padding: if($ref_weight >= 1.0, 16px, 12px); }
    @else { padding: if($ref_weight >= 1.0, 32px, 26px); }
  }
}

.window-clone-border {
  border: 4px solid $ovv_semi_fill_bg;
  border-radius: $r_2 $r_2 0 0;
  // For window decorations with round corners we can't match
  // the exact shape when the window is scaled. So apply a shadow
  // to fix that case
  box-shadow: inset 0 0 0 1px $ovv_semi_fill_bg;
}

.window-caption { // hovered tooltips
  @if $ver > 3.25 {
    @extend %tooltip_template;
    max-width: 75em; // set horizontal limit for damned looong web page titles
    padding: if($ref_weight >= 1.0, 0.6em 1.2em 0.7em, 0.4em 0.9em 0.5em);
    border-radius: $r;
    @if $ver > 3.35 {
      border: 0 none transparent;
      font-size: 100%;
      font-weight: 400;
    }
    // FIXME: Still label width computing is quite weird in Wayland session
    // (brings unwanted larger L/R padding than we set) though, at least
    // we should align StLabel in the center of finalized widget width
    // as possible as we can...
    text-align: center; // enforce label centering for Wayland session
  }
  @else {
    spacing: if($ref_weight >= 1.0, 25px, 19px);
    padding: if($ref_weight >= 1.0, 0.3em 0.9em 0.4em, 0.2em 0.6em 0.3em);
    border-radius: $r_2;
    background-color: opacity($osd_bg, $a_osd);
    -shell-caption-spacing: if($ref_weight >= 1.0, 12px, 8px);
    &:hover {
      color: $osd_fg;
      background-color: $osd_semi_fill_bg;
    }
  }
}

// Search entry
.search-entry { // use raised entry-box styling
  width: if($ref_weight >= 1.0, 400px, 340px);
  padding: if($ref_weight >= 1.0, 0.4em 0.8em, 0.3em 0.6em);
  border-radius: $r;
  border: 2px solid transparent;
  background-color: opacity($base, $a_fg_3rd);
  box-shadow: $empty_shadow;
  font-weight: 400;
  transition-duration: $tr_d_std;

  selection-background-color: $sel_bg;
  selected-color: $sel_fg;

  &,
  StLabel {
    margin-bottom: 0.1em;
    color: $ter_fg; // shut up 3rd-party gresources
  }

  &:hover,
  &:focus {
    caret-color: $fg;
    background-color: $base;
    box-shadow: $z-depth-2;

    &,
    StLabel {
      color: $fg; // shut up 3rd-party gresources
    }
  }

  &:focus { border-color: $sel_bg; }

  .search-entry-icon {
    icon-size: $icon_size;
    color: $ter_fg;
  }

  &:hover,
  &:focus {
    .search-entry-icon { color: $fg; }
  }
}

// Search results
$results_icon_size: 24px;
$provider_details_width: 120px;
$provider_icon_size: 32px; // for < 3.25

#searchResults {
  @if $ver < 3.33 {
    &Bin { max-width: 1000px; } // keep this for =< 3.32
  }

  &Content {
    @if $ver > 3.33 { max-width: 1000px; }

    @if $ver > 3.25 {
      spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                      $results_icon_size / 6);
      padding: if($ref_weight >= 1.0, $results_icon_size / 3,
                                      $results_icon_size / 6);
    }
    @else {
      spacing: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                      $provider_icon_size / 4);
      padding: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                      $provider_icon_size / 4);
    }
  }
}

 // This should be equal to #searchResultsContent spacing
.search-section {
  @if $ver > 3.25 {
    spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                    $results_icon_size / 6);

    // This is the space between the provider icon and the results container
    &-content {
      spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                      $results_icon_size / 6);
    }
  }
  @else {
    spacing: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                    $provider_icon_size / 4);
    &-content {
      spacing: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                      $provider_icon_size / 4);
    }

    // hide unneeded last separator
    &:last-child .search-section-separator {
      -gradient-start: transparent;
      -gradient-end: transparent;
    }
  }

  &-separator {
    @if $ver > 3.25 {
      height: 0;
      background-color: transparent;
    }
    @else {
      height: 1px;
      // FIXME: keep meaningless gradient properties
      // otherwise warnings are recorded
      -gradient-height: 1px;
      -gradient-start: $ovv_out_fg;
      -gradient-end: $ovv_out_fg;
      &:ltr {
        margin-left: if($ref_weight >= 1.0, $provider_icon_size * (2 + 0.5),
                                            $provider_icon_size * (2 + 0.25));
      }
      &:rtl {
        margin-right: if($ref_weight >= 1.0, $provider_icon_size * (2 + 0.5),
                                             $provider_icon_size * (2 + 0.25));
      }
    }
  }

  &-content {
    @if $ver > 3.25 {
      padding: if($ref_weight >= 1.0, 8px, 6px);
      border-radius: $r_8;
      background-color: opacity($osd_bg, $a_osd);
      box-shadow: $z-depth-2;
      @if $ver > 3.35 {
        border: 0 none transparent;
        text-shadow: none;
        icon-shadow: none;
      }
    }
  }
}

.search-statustext { // "no results"
  @extend %status_text;
}

.list-search {
  &-results {
    @if $ver > 3.25 {
      spacing: 0;
      background-color: $hidden_fill_bg;
      &:ltr {
        // concern the inset fake border width
        padding-left: if($ref_weight >= 1.0, 8px, 6px) + 1px;
        box-shadow: inset 1px 0 opacity($osd_fg, $a_trk_out);
      }
      &:rtl {
        padding-right: if($ref_weight >= 1.0, 8px, 6px) + 1px;
        box-shadow: inset -1px 0 opacity($osd_fg, $a_trk_out);
      }
    }
    @else { spacing: 3px; }
  }

  &-result {
    @if $ver < 3.25 {
      &:ltr { margin-right: $provider_icon_size / 2; }
      &:rtl { margin-left: $provider_icon_size / 2; }
    }
    padding: 0;
    border-radius: $r_2;
    transition-duration: $tr_d_non;
    &:focus,
    &:selected,
    &:hover {
      transition-duration: $tr_d_non;
      @if $ver > 3.25 {
        background-color: $osd_semi_fill_bg;

        .list-search-result {
          &-title { color: $osd_fg; }

          &-description { color: $osd_sec_fg; }
        }
      }
      @else {
        background-color: $ovv_semi_fill_bg;

        .list-search-result {
          &-title { color: $ovv_fg; }

          &-description { color: $ovv_sec_fg; }
        }
      }
    }
    &:active {
      transition-duration: $tr_d_std;
      @if $ver > 3.25 {
        background-color: $osd_fill_bg;

        .list-search-result {
          &-title { color: $osd_fg; }

          &-description { color: $osd_sec_fg; }
        }
      }
      @else {
        background-color: $ovv_fill_bg;

        .list-search-result {
          &-title { color: $ovv_fg; }

          &-description { color: $ovv_sec_fg; }
        }
      }
    }
    &:checked {
      background-color: $sel_bg;
      transition-duration: $tr_d_std;

      .list-search-result {
        &-title { color: $sel_fg; }

        &-description { color: $sec_sel_fg; }
      }
    }

    &-content {
      @if $ver > 3.25 {
        // concern the rows without 48px icons
        min-height: $results_icon_size * (1.5 + 0.5);
        spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                        $results_icon_size / 6);
        padding: if($ref_weight >= 1.0, $results_icon_size / 3,
                                        $results_icon_size / 6);
      }
      @else {
        min-height: $provider_icon_size * (1.5 + 0.5);
        spacing: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                        $provider_icon_size / 4);
        padding: if($ref_weight >= 1.0, $provider_icon_size / 2,
                                        $provider_icon_size / 4);
      }
    }

    &-title {
      font-weight: 700;
      font-size: 110%;
      @if $ver > 3.25 { color: $osd_sec_fg; }
      @else { color: $ovv_fg; }

      @if $ver > 3.25 {
        StIcon,
        StLabel {
          // add spacing to start-position only
          &:ltr {
            padding-left: if($ref_weight >= 1.0, $results_icon_size  / 3,
                                                 $results_icon_size  / 6);
          }
          &:rtl {
            padding-right: if($ref_weight >= 1.0, $results_icon_size / 3,
                                                  $results_icon_size / 6);
          }
        }
      }
    }

    &-description {
      @if $ver > 3.25 {
        padding: 0;
        color: $osd_ter_fg;
      }
      @else {
        color: $ovv_sec_fg;
        font-size: 90%;
      }
    }
  }

  @if $ver > 3.25 {
    &-provider {
      &-content {
        spacing: if($ref_weight >= 1.0, $results_icon_size / 3,
                                        $results_icon_size / 6);
        padding: if($ref_weight >= 1.0, $results_icon_size / 3,
                                        $results_icon_size / 6);
      }

      &-details { // labels at the right-side of -icon
        width: $provider_details_width;
        @if $ver > 3.35 {
          margin-top: if($ref_weight >= 1.0, $results_icon_size / 3 * 2,
                                             $results_icon_size / 6 * 2);
        }
        font-size: 90%;
        @if $ver > 3.25 {
          color: $osd_ter_fg;
          &:ltr {
            margin-left: if($ref_weight >= 1.0, $results_icon_size  / 3,
                                                $results_icon_size  / 6);
          }
          &:rtl {
            margin-right: if($ref_weight >= 1.0, $results_icon_size / 3,
                                                 $results_icon_size / 6);
          }
        }
        @else { color: $ovv_sec_fg; }

        .search-provider-icon:hover &,
        .search-provider-icon:focus &,
        .search-provider-icon:active &,
        .search-provider-icon:checked & {
          @if $ver > 3.25 { color: $osd_fg; }
          @else { color: $ovv_fg; }
        }
      }
    }
  }
}

$icon_grid_spacing: if($ref_weight >= 1.0, 36px, 27px);

@if $ver > 3.37 {
  .grid-search-results { spcaing: $icon_grid_spacing; }
}

.search-provider-icon {
  @if $ver > 3.25 {
    min-height: if($ref_weight >= 1.0, $results_icon_size * 2.75,
                                       $results_icon_size * 2.42);
    padding: if($ref_weight >= 1.0, 0 $results_icon_size / 4,
                                    0 $results_icon_size / 8);
    color: $osd_ter_fg;
    &:ltr { border-radius: $r_2 $r $r $r_2; }
    &:rtl { border-radius: $r $r_2 $r_2 $r; }
  }
  @else {
    margin: if($ref_weight >= 1.0, $provider_icon_size / 4 0, 0);
    padding: $provider_icon_size / 2;
    border-radius: $r;
    color: $ovv_sec_fg;
  }
  border: none;
  transition-duration: $tr_d_non;
  &:focus,
  &:selected,
  &:hover {
    @if $ver > 3.25 { background-color: $osd_semi_fill_bg; }
    @else { background-color: $ovv_semi_fill_bg; }
    transition-duration: $tr_d_non;
  }
  &:active {
    @if $ver > 3.25 { background-color: $osd_fill_bg; }
    @else { background-color: $ovv_fill_bg; }
    transition-duration: $tr_d_std;
  }
  &:checked {
    background-color: $sel_bg;
    color: $sel_fg;
    transition-duration: $tr_d_std;
  }

  @if $ver < 3.25 {
    &-more {
      width: $provider_icon_size / 2;
      height: $provider_icon_size / 2;
      @include image-loader($url: 'assets/more-results.svg');
      -st-background-image-shadow: $z-depth-2;
    }
  }
}

// /*************
//  * Dashboard *
//  *************/

#dash {
  padding: 0;
  border: none;
  border-radius: 0;
  background-color: transparent;
  box-shadow: $empty_shadow;
  font-size: 90%;
  transition-duration: $tr_d_lng;

  .placeholder {
    width: 24px;
    height: 24px;
    @include image-loader($url: 'assets/dash-placeholder.svg');
    background-size: 24px 24px;
  }

  .empty-dash-drop-target {
    width: 24px;
    height: 24px;
  }
}

.dash-item-container {
  background: transparent;

  > StWidget { padding: 0; }
}

.dash-label { // osd tooltip
  @extend %tooltip_template;
  // non-scalable unit instead
  padding: if($ref_weight >= 1.0, 7px 8px 8px,
                                  6px 7px 7px);
  border-radius: $r_2;
  @if $ver > 3.33 { border: 0 none transparent; }
  text-align: center;
  -x-offset: 8px;
}

%tooltip_template {
  color: $osd_fg;
  background-color: if($variant == mixed, opacity($inv_tooltip_bg, $a_osd),
                                          opacity($tooltip_bg, $a_osd));
  box-shadow: $empty_shadow;
}

// /******************
//  * App Vault/Grid *
//  ******************/

$grid_size: 136px;

.icon-grid {
  @if $ver < 3.37 {
    spacing: 30px;
    -shell-grid-horizontal-item-size: $grid_size;
    -shell-grid-vertical-item-size: $grid_size;
  }
  @else {
    row-spacing: $icon_grid_spacing;
    column-spacing: $icon_grid_spacing;
    max-row-spacing: $icon_grid_spacing * 2;
    max-column-spacing: $icon_grid_spacing * 2;
  }

  .overview-icon { icon-size: $icon_size * 6; }
}

@if $ver > 3.25 {
  .system-action-icon { // system-action icons in search results
    icon-size: $icon_size * 3;
    border-radius: $r;
    background-color: opacity($osd_bg, $a_osd);
    color: $osd_fg;
    box-shadow: $z-depth-2;
  }
}

@if $ver < 3.37 {
  .app-view-controls { // favorites | all toggle container
    width: if($ref_weight >= 1.0, 400px, 340px);
    margin-bottom: if($ref_weight >= 1.0, 12px, 9px);
    border-radius: $r;
    background-color: $hidden_fill_bg !important;
    box-shadow: $empty_shadow;
  }

  .app-view-control { // favorites | all toggle button
    padding: if($ref_weight >= 1.0, 7px 32px 8px, 5px 32px 6px);
    border-radius: $r;
    color: $ovv_sec_fg;
    background-color: $hidden_fill_bg !important;
    box-shadow: inset 0 0 0 1px $ovv_out_fg;
    font-weight: 500;
    &:ltr {
      &:first-child { margin-right: 6px; }
      &:last-child { margin-left: 6px; }
    }
    &:rtl {
      &:first-child { margin-left: 6px; }
      &:last-child { margin-right: 6px; }
    }

    &:hover {
      color: $ovv_fg;
      background-color: $ovv_semi_fill_bg !important;
      box-shadow: $empty_shadow;
    }
    &:active {
      color: $ovv_fg;
      background-color: $ovv_fill_bg !important;
      box-shadow: $empty_shadow;
    }
    &:checked {
      color: $sel_fg;
      background-color: $sel_bg !important;
      box-shadow: $empty_shadow;
    }
    &:hover:checked {
      color: $sel_fg;
      background-color: mix($sel_bg, $sel_fg, percentage($a_fg_2nd)) !important;
      box-shadow: $empty_shadow;
    }
  }
}

// Icon tile
.app-well-app,
.app-well-app.app-folder,
.show-apps,
.grid-search-result {
  .overview-icon {
    padding: 9px;
    border: none;
    border-radius: $r_2;
    color: $ovv_sec_fg;
    box-shadow: $empty_shadow;
    font-weight: 700;
    text-align: center;
    transition-duration: $tr_d_non;

    // FIXME: on some GPUs, text-shadow property strongly affects to rendering
    // performance while transitioning #overview <-> .all-apps, so do not set
    // label shadows.

    &.overview-icon-with-label {
      padding: 9px;
      spacing: 9px;
    }
  }

  &:focus .overview-icon,
  &:hover .overview-icon,
  &:selected .overview-icon {
    border-image: none;
    background-color: $ovv_semi_fill_bg;
    background-image: none;
    color: $ovv_fg;
    box-shadow: $empty_shadow;
    transition-duration: $tr_d_sht;
  }

  @if $ver > 3.33 {
    &:drop .overview-icon {
      border: none; // for safety
      background-color: opacity($sel_bg, $a_trk_out);
      box-shadow: inset 0 0 0 1px $sel_bg;
    }
  }

  &:active .overview-icon {
    border-image: none;
    background-color: $ovv_fill_bg;
    background-image: none;
    color: $ovv_fg;
    box-shadow: $empty_shadow;
    transition-duration: $tr_d_std;
  }

  &:checked .overview-icon {
    background-color: $sel_bg;
    color: $sel_fg;
    box-shadow: $empty_shadow;
    transition-duration: $tr_d_non;
  }

  &:checked:hover .overview-icon {
    background-color: mix($sel_fg, $sel_bg, percentage($a_trk_1));
    transition-duration: $tr_d_sht;
  }
}

.app-well-app,
.show-apps {
  .overview-icon {
    // set circle dock buttons on dash
    #dash & { border-radius: $r; }

    #panel & { border-radius: 0; }
  }
}

.app-well-app-running-dot { // running apps indicator
  width: $icon_size * 6;
  height: 4px;
  border-radius: 0;
  background-color: $sel_bg;

  .dash-item-container & {
    width: $icon_size / 2;
    height:  $icon_size / 2;
    margin-bottom: 2px;
    border-radius: $r;
  }
}

// Collections
.app-folder-icon {
  padding: 7px;
  spacing-rows: 7px;
  spacing-columns: 7px;
}

.app-well-app.app-folder {
  > .overview-icon {
    background-color: $ovv_semi_fill_bg;
    box-shadow: $empty_shadow;
  }

  &:hover,
  &:focus {
    > .overview-icon {
      background-color: $ovv_fill_bg;
      box-shadow: $empty_shadow;
    }
  }
  &:active {
    &, &:hover {
      > .overview-icon {
        border-radius: $r_2;
        background-color: $ovv_fill_bg;
        box-shadow: $empty_shadow;
      }
    }
  }
  &:checked {
    &, &:hover {
      > .overview-icon {
        border-radius: $r_2;
        background-color: $sel_bg;
        color: $sel_fg;
        box-shadow: $empty_shadow;
      }
    }
  }
}

@if $ver < 3.35 {
  .app-folder-popup { // expanded collection
    -arrow-border-radius: 0;
    -arrow-border-width: 0; // FIXME: damned ubuntu-session draws unneeded borders
    -arrow-border-color: transparent;
    -arrow-background-color: transparent;
    -arrow-base: 0;
    -arrow-rise: 12px;

    &-bin {
      padding: 5px;
      border-radius: $r_8;
      background-color: opacity($osd_bg, $a_osd);
      box-shadow: $z-depth-1;

      .app-well-app { // enforce variant specific colors
        .overview-icon { color: $osd_sec_fg; }

        &:focus,
        &:hover,
        &:selected {
          .overview-icon {
            background-color: $osd_semi_fill_bg;
            color: $osd_fg;
          }
        }

        &:active .overview-icon {
          background-color: $osd_fill_bg;
          color: $osd_fg;
        }
      }
    }
  }
}
@else {
  .app-folder-dialog {
    @if $ver < 3.37 {
      spacing: if($ref_weight >= 1.0, 16px, 12px);
      padding-bottom: $r_8; // do not cut-off scrollbars
    }
    @else { padding: if($ref_weight >= 1.0, 12px, 8px); }
    border-radius: $r_8;
    border: 0 none transparent;
    background-color: opacity($osd_bg, $a_osd);
    box-shadow: $z-depth-4;

    &-container {
      @if $ver < 3.37 {
        width: if($ref_weight >= 1.0, 800px, 600px);
        height: if($ref_weight >= 1.0, 600px, 400px);
      }
      @else {
        width: if($ref_weight >= 1.0, 600px, 500px);
        height: if($ref_weight >= 1.0, 700px, 600px);
      }
      padding: if($ref_weight >= 1.0, 12px, 8px);

      .app-well-app {
        .overview-icon { color: $osd_sec_fg; }

        &:focus,
        &:hover,
        &:selected {
          .overview-icon {
            background-color: $osd_semi_fill_bg;
            color: $osd_fg;
          }
        }

        &:active .overview-icon {
          background-color: $osd_fill_bg;
          color: $osd_fg;
        }
      }
    }

    .folder-name-container {
      padding: if($ref_weight >= 1.0, 24px, 20px);
      spacing: if($ref_weight >= 1.0, 10px, 8px);

      .folder-name {
        &-label,
        &-entry {
          font-weight: 700;
          font-size: 120%;
        }

        &-entry {
          width: if($ref_weight >= 1.0, 300px, 200px);
        }

        &-label { // use the same internal padding with StEntry
          padding: if($ref_weight >= 1.0, 0.75em 0.8em, 0.55em 0.6em);
          color: $osd_fg;
        }
      }
    }

    .edit-folder-button { // circular icon button
      width: if($ref_weight >= 1.0, $icon_size + (10px * 2),
                                    $icon_size + (7px * 2));
      height: if($ref_weight >= 1.0, $icon_size + (10px * 2),
                                     $icon_size + (7px * 2));
      padding: 0;
      border-radius: $r;
      @if $variant != light {
        @include button(flat-normal, $tc: $inv_acc_fg);
        &:hover { @include button(flat-hover, $tc: $inv_acc_fg); }
        &:focus { @include button(flat-focus, $tc: $inv_acc_fg); }
        &:active { @include button(flat-active, $tc: $inv_acc_fg); }
        &:insensitive { @include button(flat-disabled, $tc: $osd_fg); }
      }
      @else {
        @include button(flat-normal, $tc: $acc_fg);
        &:hover { @include button(flat-hover, $tc: $acc_fg); }
        &:focus { @include button(flat-focus, $tc: $acc_fg); }
        &:active { @include button(flat-active, $tc: $acc_fg); }
        &:insensitive { @include button(flat-disabled, $tc: $fg); }
      }

      > StIcon { icon-size: $icon_size; }
    }

    @if $ver > 3.37 {
      .icon-grid {
        row-spacing: $icon_grid_spacing / 3;
        column-spacing: $icon_grid_spacing / 2;
      }

      .page-indicators {
        margin-bottom: $icon_size;

        .page-indicator { padding: 0 ($icon_size / 2) $icon_size; }
      }
    }
  }
}

.page-indicator {
  padding: if($ref_weight >= 1.0, $icon_size ($icon_size * 1.5),
                                  $icon_size);

  @if $ver > 3.35 {
    .page-indicator-icon { // there's no :checked state
      width: $icon_size - 2px;
      height: $icon_size - 2px;
      border-radius: $r;
      background-color: $ovv_fg;
    }

    &:insensitive {
      .page-indicator-icon { background-color: red; }
    }
  }
  @else {
    .page-indicator-icon {
      width: $icon_size - 2px;
      height: $icon_size - 2px;
      margin: 2px;
      padding: 0;
      border-radius: $r;
      border: 0 none transparent; // avoid stock CSS's borders
      background-image: none;
      background-color: $hidden_fill_bg;
      box-shadow: inset 0 0 0 2px $ovv_ter_fg;
    }

    &:hover .page-indicator-icon {
      margin: 0;
      padding: 2px;
      background-image: none;
      background-color: $hidden_fill_bg;
      box-shadow: inset 0 0 0 2px $ovv_fg;
    }

    &:active .page-indicator-icon {
      margin: 2px;
      padding: 0;
      background-image: none;
      background-color: opacity($sel_bg, $a_fg_2nd);
      box-shadow: $empty_shadow;
    }

    &:checked .page-indicator-icon {
      margin: 0;
      padding: 2px;
      background-image: none;
      background-color: $sel_bg;
      box-shadow: $empty_shadow;
    }

    &:checked:hover .page-indicator-icon {
      margin: 0;
      padding: 2px;
      background-image: none;
      background-color: mix($sel_bg, $sel_fg, percentage($a_fg_2nd));
      @if $ver < 3.31 {
        box-shadow: 0 0 0 ($icon_size / 2)
                    opacity(mix($sel_bg, $sel_fg, percentage($a_fg_2nd)),
                            $a_trk_out);
      }
      @else { box-shadow: $empty_shadow; }
    }
  }
}

@if $ver < 3.37 {
  .no-frequent-applications-label { @extend %status_text; }
}

// /*******************
//  * Workspace Pager *
//  *******************/

.workspace {
  &-thumbnails,
  &-thumbnails-left { // container ala dash
    visible-width: 32px + 24px; // amount visible before hover
    spacing: 12px;
    margin-top: 16px;
    margin-bottom: 32px;
    padding: 12px;
    border: none;
    background-color: $bg;
    color: $fg;
    box-shadow: $z-depth-4;

    StBin.placeholder { // solid-line indicator for drop-target
      height: 4px;
      background-color: $acc_bg;
    }
  }

  &-thumbnail-indicator {
    border: none;
    border-radius: 0;
    background-color: $hidden_fill_bg;
    &:ltr {
      padding: 0 0 0 12px;
      box-shadow: inset 4px 0 $sel_bg;
    }
    &:rtl {
      padding: 0 12px 0 0;
      box-shadow: inset -4px 0 $sel_bg;
    }
  }

  &-thumbnails,
  &-thumbnails-left:rtl {
    border-radius: $r_8 0 0 $r_8;
    margin-left: 24px;
  }

  &-thumbnails:rtl,
  &-thumbnails-left {
    border-radius: 0 $r_8 $r_8 0;
    margin-right: 24px;

    .workspace-thumbnail-indicator {
      padding: 0 12px 0 0;
      box-shadow: inset -4px 0 $sel_bg;
    }
  }
}

// /***************************
//  * Some hacks I don't even *
//  ***************************/

// horizontal padding to make sure scrollbars or dash don't overlap content
@if $ver < 3.33 {
  .search-display > StBoxLayout,
  .all-apps, // .frequent-apps =< 3.36 cycle
  .frequent-apps > StBoxLayout { padding: 0 88px 10px 88px; }
}
@else {
  @if $ver < 3.37 {
    .all-apps,
    .frequent-apps > StBoxLayout { padding: 0 88px 10px 88px; }
  }
  @else {
    .all-apps { padding: 0 88px 10px 88px; }
  }
}

%status_text {
  color: $ovv_ter_fg;
  font-weight: 700;
  font-size: 200%;
}

// /********************************
//  * Notifications & Message Tray *
//  ********************************/

.url-highlighter {
  link-color: $link_fg;

  .notification-banner & { link-color: $osd_link_fg; }
}

// Banners
.notification-banner {
  // override Adwaita's protection
  @if $ver > 3.33 {
    min-height: if($ref_weight >= 1.0, $icon_size + (8px * 2),
                                       $icon_size + (6px * 2));
  }

  width: 34em;
  margin: 6px;
  border: none;
  border-radius: $r_8;
  font-size: 110%;
  &,
  &:hover,
  &:focus {
    background-color: if($variant == mixed, opacity($inv_tooltip_bg, $a_osd),
                                            opacity($tooltip_bg, $a_osd));
    color: $osd_fg;
    box-shadow: $z-depth-2;
  }

  .notification {
    &-icon { padding: if($ref_weight >= 1.0, 8px, 6px); }

    &-content {
      padding: if($ref_weight >= 1.0, 8px, 6px);
      spacing: if($ref_weight >= 1.0, 8px, 6px);
    }

    &-actions {
      padding: 0;
      spacing: 0;
      border: transparent;
      background-color: transparent;
    }
  }

  .secondary-icon { icon-size: $icon_size; }

  .notification-button {
    @extend %modal_dialog_button;
    // override Adwaita's protection
    @if $ver > 3.33 { min-height: 1em; }
    padding: if($ref_weight >= 1.0, 9px 4px 10px, 6px 3px 7px);
  }
}

.summary-source-counter {
  width: 1.6em;
  height: 1.6em;
  border-radius: 0.9em; // should be 0.8 but whatever; wish I could do 50%;
  border: 2px solid $sel_fg;
  font-weight: 700;
  font-size: 100%;
  -shell-counter-overlap-x: 3px;
  -shell-counter-overlap-y: 3px;
  background-color: $sggt_bg;
  color: $sel_fg;
  box-shadow: $z-depth-2;
}

.secondary-icon { icon-size: $icon_size - 2px; }

// Chat bubbles
.chat {
  &-body { spacing: 5px; }

  &-response { margin: 5px; }

  &-log-message { color: $osd_sec_fg; }

  &-new-group { padding-top: 1em; }

  &-received {
    &:ltr { padding-left: 4px; }
    &:rtl { padding-right: 4px; }
  }

  &-sent {
    color: $osd_sec_fg;
    &:ltr { padding-left: 18pt; }
    &:rtl { padding-right: 18pt; }
  }

  &-meta-message {
    color: $dis_osd_fg;
    font-weight: 700;
    font-size: 90%;
    &:ltr { padding-left: 4px; }
    &:rtl { padding-right: 4px; }
  }
}

// Hotplug
.hotplug {
  &-transient-box {
    spacing: 6px;
    padding: 2px 72px 2px 12px;
  }

  &-notification-item {
    @extend %modal_dialog_button;
    padding: 2px 10px;

    &-icon {
      padding: 2px 5px;
      icon-size: $icon_size * 1.5;
    }
  }

  &-resident-box { spacing: 8px; }

  &-resident-mount {
    spacing: 8px;
    border-radius: $r_2;
    &:hover { background-color: $osd_semi_fill_bg; }
    &:active { background-color: $osd_fill_bg; }

    &-label {
      padding-left: 6px;
      color: $osd_sec_fg;
    }

    &-icon {
      padding-left: 6px;
      icon-size: $icon_size * 1.5;
    }
  }

  &-resident-eject-icon { icon-size: $icon_size; }

  &-resident-eject-button {
    padding: 7px;
    border-radius: $r_2;
    color: $osd_fg;
  }
}

@if $ver < 3.25 {
  // /***************
  //  * Legacy Tray *
  //  ***************/

  $legacy_icon_size: if($ref_weight >= 1.0, 24px, 16px);

  .legacy-tray {
    padding: 0;
    border: 0 none transparent;
    background-color: $panel_bg;
    &:ltr { border-radius: 0 $r_2 0 0; }
    &:rtl { border-radius: $r_2 0 0 0; }

    &-handle,
    &-icon {
      width: $legacy_icon_size;
      height: $legacy_icon_size;
      padding: 4px 4px 2px;
      border-radius: $r_2;
      border: 2px solid $panel_bg;
      color: $osd_sec_fg;
      &:hover,
      &:focus {
        background-color: $osd_semi_fill_bg;
        color: $osd_fg;
      }
      &:active {
        background-color: $osd_fill_bg;
        color: $osd_fg;
      }

      StIcon { icon-size: $legacy_icon_size; }
    }

    &-icon-box {
      spacing: 3px;
      &:ltr { padding-left: 3px; }
      &:rtl { padding-right: 3px; }

      StButton {
        width: $legacy_icon_size;
        height: $legacy_icon_size;
      }
    }
  }
}

// /*************
//  * Magnifier *
//  *************/

.magnifier-zoom-region {
  border: 2px solid $sel_bg;

  &.full-screen { border-width: 0; }
}

// /************
//  * Keyboard *
//  ************/

// On-screen Keyboard
#keyboard {
  background-color: if($variant != light, opacity(black, $a_fg_3rd),
                                          opacity(white, $a_fg_dis));

  @if $ver > 3.31 {
    .page-indicator { // in the .emoji-panel
      padding: 0 ($icon_size / 2) $icon_size;

      // set variant-specific colors
      .page-indicator-icon { box-shadow: inset 0 0 0 2px $osd_ter_fg; }

      &:hover .page-indicator-icon { box-shadow: inset 0 0 0 2px $osd_fg; }

      &:active .page-indicator-icon,
      &:checked .page-indicator-icon { box-shadow: $empty_shadow; }
    }
  }
}

@if $ver > 3.25 {
  .key-container { // current
    // no need to set variant specific spacing
    padding: $ref_size * 0.3;
    spacing: $ref_size * 0.3;
  }
}

.keyboard {
  &-layout { // legacy
    spacing: $ref_size * 0.3;
    padding: $ref_size * 0.3;
  }

  &-row { spacing: $ref_size * 0.3; } // legacy

  &-key {
    min-height: $ref_size * 2;
    min-width: $ref_size * 2;
    padding: 0;
    border-radius: $r_2;
    border: 1px solid mix($osd_sec_fg, $osd_bg, percentage($a_div_1));
    background-color: $osd_bg;
    color: $osd_sec_fg;
    box-shadow: $empty_shadow;
    text-shadow: none;
    icon-shadow: none;
    font-size: $ref_size * 2; // use unscalable unit
    font-weight: 700;
    transition-timing-function: $tr_t_std;
    &:focus,
    &:hover,
    &:checked {
      border-color: mix($osd_bg, $osd_fg, percentage($a_fg_2nd));
      background-color: mix($osd_bg, $osd_fg, percentage($a_fg_2nd));
      color: $osd_fg;
      transition-timing-function: $tr_t_std;
    }
    &:active {
      border-color: mix($osd_bg, $osd_fg, percentage(1 - $a_trk_2));
      background-color: mix($osd_bg, $osd_fg, percentage(1 - $a_trk_2));
      color: $osd_fg;
      transition-timing-function: $tr_t_dec;
    }
    &:grayed { // FIXME
      border-color: mix($osd_sec_fg, $osd_bg,
                        percentage($a_div_1 * $a_fg_dis));
      background-color: $panel_bg;
      color: $osd_ter_fg;
      transition-timing-function: $tr_t_std;
    }

    @if $ver > 3.25 {
      &.default-key {
        background-color: mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2));
        @if $ver < 3.35 { background-size: ($ref_size - 0.33) * 2; }
        color: $osd_sec_fg;
        &:focus,
        &:hover,
        &:checked {
          border-color:
            mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                $osd_fg, percentage($a_fg_2nd));
          background-color:
            mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                $osd_fg, percentage($a_fg_2nd));
          color: $osd_fg;
          transition-timing-function: $tr_t_std;
        }
        &:active {
          border-color:
            mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                $osd_fg, percentage(1 - $a_trk_2));
          background-color:
            mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                $osd_fg, percentage(1 - $a_trk_2));
          color: $osd_fg;
          transition-timing-function: $tr_t_dec;
        }
      }

      &.enter-key {
        border-color: $sggt_bg;
        background-color: $sggt_bg;
        @if $ver < 3.35 { @include image-loader($url: 'key-enter.svg'); }
        @else { color: $sec_sel_fg; }
        &:focus,
        &:hover,
        &:checked {
          border-color: mix($sggt_bg, $sel_fg, percentage($a_fg_2nd));
          background-color: mix($sggt_bg, $sel_fg, percentage($a_fg_2nd));
          @if $ver < 3.35 {
            @include image-loader($url: 'key-enter-active.svg');
          }
          @else { color: $sel_fg; }
        }
        &:active {
          border-color: $sel_bg;
          background-color: $sel_bg;
          @if $ver < 3.35 {
            @include image-loader($url: 'key-enter-active.svg');
          }
          @else { color: $sel_fg; }
        }
      }

      &.shift-key {
        &-lowercase {
          @if $ver < 3.35 {
            @include image-loader($url: 'key-shift.svg');
          }
          @else { color: $osd_sec_fg; }
        }

        &-uppercase {
          @if $ver < 3.35 {
            @include image-loader($url: 'key-shift-uppercase.svg');
          }
          @else { color: $sel_bg; }
          &:focus,
          &:hover,
          &:checked {
            border-color:
              mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                  $sel_bg, percentage($a_fg_2nd));
            background-color:
              mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                  $sel_bg, percentage($a_fg_2nd));
          }
          &:active {
            border-color:
              mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                  $sel_bg, percentage(1 - $a_trk_2));
            background-color:
              mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                  $sel_bg, percentage(1 - $a_trk_2));
          }
          &:latched {
            @if $ver < 3.35 {
              @include image-loader($url: 'key-shift-latched-uppercase.svg');
            }
            @else { color: $sel_bg; }
            border-color:
              mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                  $sel_bg, percentage($a_fg_2nd));
            background-color:
              mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                  $sel_bg, percentage($a_fg_2nd));
            transition-timing-function: $tr_t_std;
            &:focus,
            &:hover {
              border-color:
                mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                    $sel_bg, percentage(1 - $a_trk_2));
              background-color:
                mix(mix($osd_bg, $panel_bg, percentage(1 - $a_trk_2)),
                    $sel_bg, percentage(1 - $a_trk_2));
            }
          }
        }
      }

      @if $ver < 3.35 {
        &.hide-key { @include image-loader($url: 'key-hide.svg'); }

        &.layout-key { @include image-loader($url: 'key-layout.svg'); }
      }
    }

    @if $ver > 3.35 {
      StIcon { icon-size: $ref_size * 2; }
    }
  }

  &-subkeys { //long press on a key popup
    padding: 0;
    border-radius: $r_2;
    -arrow-border-radius: 0;
    -arrow-background-color: transparent;
    -arrow-border-width: 0;
    -arrow-border-color: transparent;
    -arrow-base: 0;
    -arrow-rise: 0;
    -boxpointer-gap: $ref_size * 0.3;
    background-color: $sggt_bg;
    color: $sel_fg;
    box-shadow: $z-depth-2;

    .keyboard-key {
      border: 0 none transparent;
      background-color: $hidden_fill_bg;
      color: $sec_sel_fg;
      box-shadow: inset 0 0 0 2px $ovv_out_fg;
      &:focus,
      &:hover,
      &:checked {
        border: 0 none transparent;
        background-color: opacity($sel_fg, $a_trk_1);
        color: $sel_fg;
        box-shadow: $empty_shadow;
      }
      &:active {
        border: 0 none transparent;
        background-color: opacity($sel_fg, $a_trk_2);
        color: $sel_fg;
        box-shadow: $empty_shadow;
      }
    }
  }
}

@if $ver > 3.25 {
  // OSK suggestion actor
  .word-suggestions {
    min-height: 1.6em;
    spacing: $ref_size * 1.3;
    padding: $ref_size * 0.3 0 0;
    font-weight: 500;
    font-size: 130%;

    StButton {
      padding: 0 $ref_size * 1.3;
      border-radius: $r;
      background-color: $sggt_bg;
      color: $sec_sel_fg;
      &:hover,
      &:focus {
        background-color: mix($sel_fg, $sggt_bg, percentage($a_trk_1));
        color: $sel_fg;
      }
      &:active {
        background-color: $sel_bg;
        color: $sel_fg;
      }
    }
  }
}

@if $ver > 3.31 { // Emoji keyboard
  .emoji {
    &-panel {
      .keyboard-key {
        color: $ovv_sec_fg;
        &:focus,
        &:hover,
        &:active,
        &:checked { color: $ovv_fg; }

        &.default-key { // 'ABC' and 'down-arrow' key
          color: $osd_sec_fg;
          &:focus,
          &:hover,
          &:active,
          &:checked { color: $osd_fg; }
        }

        &:latched {
          border-color: $sel_bg;
          background-color: $sel_bg;
          &:hover {
            border-color: mix($sel_fg, $sel_bg, percentage($a_trk_1));
            background-color: mix($sel_fg, $sel_bg, percentage($a_trk_1));
          }
          &:active {
            border-color: mix($sel_fg, $sel_bg, percentage($a_trk_2));
            background-color: mix($sel_fg, $sel_bg, percentage($a_trk_2));
          }
        }
      }
    }

    &-page {
      .keyboard-key { // use flat-style
        border: 0 none transparent;
        background-color: transparent;
        color: $ovv_sec_fg; // do not set variant-specific
        &:focus,
        &:hover {
          border: 0 none transparent;
          background-color: opacity($ovv_fg, $a_trk_1);
          color: $ovv_fg;
        }
        &:active {
          border: 0 none transparent;
          background-color: opacity($ovv_fg, $a_trk_2);
          color: $ovv_fg;
        }
      }
    }
  }
}

// /************************
//  * IBus Candidate Popup *
//  ************************/

.candidate {
  &-popup-content {
    padding: 0.5em;
    spacing: 0.3em;
    color: $osd_ter_fg;
  }

  &-index {
    color: $osd_sec_fg;
    &:ltr { padding: 0.3em 0.5em 0.3em 0; }
    &:rtl { padding: 0.3em 0 0.3em 0.5em; }
  }

  &-box {
    padding: 0.3em 0.5em;
    border-radius: $r_2;
    color: $osd_sec_fg;
    font-size: 110%;
    transition-duration: $tr_d_non;
    &:hover {
      background-color: $osd_semi_fill_bg;
      color: $osd_fg;

      .candidate-index { color: $osd_fg; }
    }
    &:active {
      background-color: $osd_fill_bg;
      color: $osd_fg;

      .candidate-index { color: $osd_fg; }
    }
    &:selected {
      background-color: $sggt_bg;
      color: $sel_fg;

      .candidate-index { color: $sec_sel_fg; }
    }
  }

  &-page-button-box {
    height: 2em;

    .vertical & { padding-top: 0.5em; }

    .horizontal & { padding-left: 0.5em; }
  }

  &-page-button {
    padding: 4px;
    @if $variant != light {
      @include button(flat-normal, $tc: $inv_acc_fg);
      &:hover { @include button(flat-hover, $tc: $inv_acc_fg); }
      &:active { @include button(flat-active, $tc: $inv_acc_fg); }
      &:insensitive { @include button(flat-disabled, $tc: $osd_fg); }
    }
    @else {
      @include button(flat-normal, $tc: $acc_fg);
      &:hover { @include button(flat-hover, $tc: $acc_fg); }
      &:active { @include button(flat-active, $tc: $acc_fg); }
      &:insensitive { @include button(flat-disabled, $tc: $fg); }
    }

    &-previous {
      border-radius: $r_2;
      border-right-width: 0;
    }

    &-next { border-radius: $r_2; }

    &-icon { icon-size: $icon_size; }
  }
}

// /********************************
//  * Auth Dialogs & Screen Shield *
//  ********************************/

%framed_user_icon {
  background-size: contain;
  border: 0 none transparent;
  color: $osd_fg;
  &:hover {
    border-color: $osd_fg;
    color: $osd_fg;
  }
}

@if $ver < 3.31 {
  .framed-user-icon {
    @extend %framed_user_icon;
    border-radius: $r_2;
  }
}
@else {
  .user-icon {
    @extend %framed_user_icon;
    border-radius: $r; // circular shape
  }
}

// /****************
//  * Login Dialog *
//  ****************/

$login_dialog_width: 23em;

.login-dialog {
  &-banner-view {
    max-width: $login_dialog_width;
    padding-top: 24px;
  }

  // reset
  border: none;
  background-color: transparent;

  StEntry {
    @include entry(normal, $tc: $ovv_fg);
    selection-background-color: $sel_bg;
    selected-color: $sel_fg;
    transition-duration: $tr_d_non;
    &:hover { @include entry(hover, $tc: $ovv_fg); }
    &:focus { @include entry(focus, $tc: $ovv_fg); }
    &:insensitive { @include entry(disabled, $tc: $ovv_fg); }

    StIcon.capslock-warning { color: $warn; } // CapsLock warning

    @if $ver > 3.35 {
      .hint-text { color: $ovv_ter_fg; }
    }
  }

  .modal-dialog-button-box { spacing: 1em; }

  .modal-dialog-button {
    padding: 7px 16px 8px;
    font-weight: 500;
    font-size: 110%;
    @include button(flat-normal, $tc: $ovv_fg);
    &:hover { @include button(flat-hover, $tc: $ovv_fg); }
    &:focus { @include button(flat-focus, $tc: $ovv_fg); }
    &:active { @include button(flat-active, $tc: $ovv_fg); }
    &:insensitive { @include button(flat-disabled, $tc: $ovv_fg); }
    &:default { // suggested-action button
      padding: (7px - 2px) (16px - 2px) (8px - 2px); // subtract borders
      @include button(suggested-normal, $c: $sggt_bg, $tc: $sel_fg);
      &:hover {
        @include button(suggested-hover, $c: $sggt_bg, $tc: $sel_fg);
      }
      &:focus {
        @include button(suggested-focus, $c: $sggt_bg, $tc: $sel_fg);
      }
      &:active { @include button(suggested-active); }
      &:insensitive {
        // revert to standard padding since mixin has no borders
        padding: 7px 16px 8px;
        @include button(suggested-disabled, $tc: $sel_fg);
      }
    }
  }

  @if $ver > 3.35 { // circular buttons
    .cancel-button,
    .switch-user-button,
    .login-dialog-session-list-button {
      width: $icon_size * 2;
      height: $icon_size * 2;
      padding: 0;
      border-radius: $r;

      StIcon { icon-size: $icon_size; }
    }

    .login-dialog-session-list-button {
      &:active,
      &:checked {
        background-color: $sel_bg;
        color: $sel_fg;
      }
    }
  }
}

%login_label_sizing {
  font-weight: 700;
  font-size: 120%;
  text-align: left;
}

%login_label_sizing_vrt {
  font-weight: 500;
  font-size: 150%;
  text-align: center;
}

%login_label_spacing {
  &:ltr { padding-left: 1em; }
  &:rtl { padding-right: 1em; }
}

@if $ver > 3.25 {
  @if $ver < 3.35 {
    .login-dialog-username,
    .user-widget-label {
      color: $ovv_fg;
      @extend %login_label_sizing;
      @extend %login_label_spacing;
    }
  }
  @else {
    .user-widget-label {
      color: $ovv_fg;

      .user-widget.horizontal & {
        @extend %login_label_sizing;
        @extend %login_label_spacing;
      }

      .user-widget.vertical & {
        padding-top: if($ref_weight >= 1.0, 12px, 8px);
        @extend %login_label_sizing_vrt;
      }
    }

    .user-icon {
      $hrz_padding: 10px;
      $vrt_padding: 20px;

      .user-widget.horizontal & {
        icon-size: $icon_size * 4;

        StIcon {
          width: ($icon_size * 4) - ($hrz_padding * 2);
          height: ($icon_size * 4) - ($hrz_padding * 2);
          padding: ($hrz_padding - 1px) $hrz_padding
                   ($hrz_padding + 1px) $hrz_padding;
        }
      }

      .user-widget.vertical & {
        icon-size: $icon_size * 8;

        StIcon {
          width: ($icon_size * 8) - ($vrt_padding * 2);
          height: ($icon_size * 8) - ($vrt_padding * 2);
          padding: ($vrt_padding - 2px) $vrt_padding
                   ($vrt_padding + 2px) $vrt_padding;
        }
      }
    }
  }
}
@else {
  .login-dialog-username,
  .user-widget-label {
    padding-left: 15px;
    color: $ovv_fg;
    @extend %login_label_sizing;
  }

  .user-widget-label { @extend %login_label_spacing; }
}

.login-dialog {
  &-logo-bin { padding: 24px 0; }

  &-banner { color: $ovv_sec_fg; }

  &-button-box {
    @if $ver > 3.35 { width: $login_dialog_width; }
    spacing: 1em;
  }

  @if $ver > 3.35 {
    &-message { text-align: center; }
  }

  &-message-warning { color: $warn; }

  &-message-hint {
    padding-top: 0;
    padding-bottom: 20px;
    color: $ovv_ter_fg;
  }

  &-user-selection-box { padding: 100px 0; }

  &-not-listed-button {
    // this class seems almost meaningless
    margin: 12px 0 0;

    &:ltr { margin-right: 4px; }
    &:rtl { margin-left: 4px; }
  }

  &-not-listed-label {
    padding: 4px 8px 5px;
    border-radius: $r_2;
    color: $ovv_acc_fg;
    font-weight: 500;
    font-size: 90%;
    text-align: center;

    .login-dialog-not-listed-button:focus & {
      color: $ovv_acc_fg;
      background-color: $hidden_fill_bg;
      box-shadow: inset 0 0 0 2px $acc_fill_bg;
    }

    .login-dialog-not-listed-button:hover & {
      color: $ovv_acc_fg;
      background-color: $acc_semi_fill_bg;
    }

    .login-dialog-not-listed-button:active & {
      color: $ovv_acc_fg;
      background-color: $acc_fill_bg;
      box-shadow: $empty_shadow;
    }
  }

  &-user-list {
    width: $login_dialog_width;
    spacing: 12px;

    &:expanded .login-dialog-user-list-item {
      @if $ver < 3.25 {
        &:focus {
          color: $ovv_fg;
          background-color: $hidden_fill_bg;
          box-shadow: inset 0 0 0 2px $ovv_out_fg;
        }
        &:hover {
          color: $ovv_fg;
          background-color: $ovv_semi_fill_bg;
        }
        &:active {
          color: $ovv_fg;
          background-color: $ovv_fill_bg;
        }
      }
      &:selected {
        &, &:focus {
          background-color: $hidden_fill_bg;
          box-shadow: inset 0 0 0 2px opacity($sel_bg, $a_trk_out);
        }
        &:hover,
        &:hover:focus {
          background-color: opacity($sel_bg, $a_trk_1);
        }
        &:active,
        &:active:focus {
          background-color: opacity($sel_bg, $a_trk_2);
        }
      }

      &:logged-in {
        border-radius: 0;
        background-color: opacity($sel_bg, $a_trk_2);
        &:focus,
        &:hover {
          background-color: mix(opacity($sel_bg, $a_trk_2),
                                opacity($ovv_semi_fill_bg, $a_fg_3rd));
        }
        &:active {
          background-color: mix(opacity($sel_bg, $a_trk_2),
                                opacity($ovv_fill_bg, $a_fg_3rd));
        }

        &:ltr { box-shadow: inset 4px 0 $sel_bg; }
        &:rtl { box-shadow: inset -4px 0 $sel_bg; }
      }
    }

    &-view { -st-vfade-offset: 0; }
  }

  &-user-list-item {
    padding: 4px 4px 0;
    border-radius: $r_2;
    transition-duration: $tr_d_sht;

    // exclude timed-login-indicator
    &:ltr .user-widget { padding-right: 1em; }
    &:rtl .user-widget { padding-left: 1em; }

    @if $ver > 3.25 {
      .login-dialog-username, // actual label color
      .user-widget-label { color: $ovv_sec_fg; }
    }

    &:focus {
      background-color: $hidden_fill_bg;
      box-shadow: inset 0 0 0 2px $ovv_out_fg;
    }
    &:hover { background-color: $ovv_semi_fill_bg; }
    &:active { background-color: $ovv_fill_bg; }
    &:selected {
      &, &:focus {
        background-color: $hidden_fill_bg;
        box-shadow: inset 0 0 0 2px opacity($sel_bg, $a_trk_out);
      }
      &:hover,
      &:hover:focus {
        background-color: opacity($sel_bg, $a_trk_1);
      }
      &:active,
      &:active:focus {
        background-color: opacity($sel_bg, $a_trk_2);
      }
    }

    &:focus,
    &:hover,
    &:active {
      .login-dialog-username,
      .user-widget-label { color: $ovv_fg; }
    }
    &:selected {
      &, &:focus {
        .login-dialog-username,
        .user-widget-label { color: $ovv_sel_label; }
      }
    }

    .login-dialog-timed-login-indicator {
      height: 4px;
      margin: 4px 0 0 0;
      background-color: opacity($acc_bg, $a_fg_2nd);
    }

    &:focus .login-dialog-timed-login-indicator {
      background-color: $acc_bg;
    }
  }
}

.login-dialog-prompt {
  &-layout {
    width: $login_dialog_width;
    spacing: 1em;
    padding-top: 24px;
    padding-bottom: 12px;
  }

  @if $ver > 3.35 {
    &-entry { height: 1.5em; }
  }

  &-label {
    padding-top: 1em;
    color: $ovv_ter_fg;
    font-size: 100%;
  }
}

@if $ver < 3.35 {
  .login-dialog-session {
    &-list-button {
      padding: 4px;
      border-radius: $r;
      @include button(flat-normal, $tc: $ovv_fg);
      &:focus { @include button(flat-focus, $tc: $ovv_fg); }
      &:hover { @include button(flat-hover, $tc: $ovv_fg); }
      &:active {
        background-color: $sel_bg;
        color: $sel_fg;
      }

      StIcon { icon-size: $icon_size; }
    }
  }
}

// /*****************
//  * Screen Shield *
//  *****************/

%unlock_clock {
  padding-bottom: 1.5em;
  color: $ovv_fg;
  text-align: center;
}

%unlock_time {
  font-weight: 300;
  font-size: 840%;
}

%unlock_date {
  font-weight: 700;
  font-size: 130%;
}

%unlock_container {
  spacing: 6px;
  background-color: transparent;

  .summary-notification-stack-scrollview {
    padding-top: 0;
    padding-bottom: 0;
  }
}

%onlock_notification {
  padding: 12px 6px;
  border: none;
  border-radius: $r_8;
  background-color: if($variant == mixed, opacity($inv_tooltip_bg, $a_osd),
                                          opacity($tooltip_bg, $a_osd));
  color: $osd_fg;
}

%unlock_scrollbar {
  StButton#vhandle,
  StButton#hhandle {
    background-color: opacity($ovv_fg, $a_fg_3rd * $a_fg_3rd);
    &:hover { background-color: opacity($ovv_fg, $a_fg_2nd * $a_fg_3rd); }
    &:active { background-color: $ovv_fg; }
  }
}

@if $ver > 3.35 {
  .unlock-dialog {
    &-clock {
      @extend %unlock_clock;
      spacing: if($ref_weight >= 1.0, 24px, 18px);

      &-time {
        padding-top: 0.5em;
        @extend %unlock_time;
      }

      &-date { @extend %unlock_date; }

      &-hint {
        padding-top: if($ref_weight >= 1.0, 24px * 2, 18px * 2);
        font-weight: 400;
      }
    }

    &-notifications {
      &-container {
        width: $login_dialog_width;
        margin: if($ref_weight >= 1.0, 12px 0, 8px 0);
        @extend %unlock_container;

        .notification,
        .unlock-dialog-notification-source {
          @extend %onlock_notification;

          &.critical {
            background-color: $dest_bg;
            color: $sel_fg;

            .unlock-dialog-notification-count-text {
              background-color: $sel_fg;
              color: $dest_bg;
            }
          }
        }
      }

      &-label {
        padding: 0 0 0 12px;
        font-weight: 500;
      }

      &-count-text {
        padding: 0 6px;
        border-radius: $r_2;
        background-color: $sggt_bg;
        color: $sel_fg;
        font-weight: 700;
      }
    }
  }
}
@else {
  .screen-shield {
    &-arrows {
      padding-bottom: 3em;

      Gjs_Arrow {
        width: 80px;
        height: 48px;
        -arrow-thickness: 12px;
        -arrow-shadow: none;
        color: $ovv_fg;
      }
    }

    &-clock {
      @extend %unlock_clock;

      &-time {
        @extend %unlock_time;
        text-shadow: $z-depth-1;
      }

      &-date {
        @extend %unlock_date;
        text-shadow: $z-depth-1;
      }
    }

    &-notifications {
      &-container {
        width: 30em;
        max-height: 500px;
        @extend %unlock_container;

        .notification,
        .screen-shield-notification-source { @extend %onlock_notification; }

        .notification { margin-right: 15px; }
      }

      &-label { font-weight: 700; }

      &-label,
      &-count-text { padding: 0 0 0 12px; }
    }

    &-background { // just the shadow, really
      background: black;
      box-shadow: $z-depth-5;
    }
  }
}

@if $ver > 3.35 {
  #lockDialogGroup { background-color: mix(color($grey, 900), black, 87%); }
}
@else {
  #lockDialogGroup {
    background-color: mix(color($grey, 900), black, 87%);
    @include image-loader($url: 'noise-texture.png');
    background-repeat: repeat;
  }
}


@if $ver > 3.35 {
  #unlockDialogNotifications { @extend %unlock_scrollbar; }
}
@else {
  #screenShieldNotifications { @extend %unlock_scrollbar; }
}


// /*****************
//  * Looking Glass *
//  *****************/

$tool_icon_size: 24px;

#LookingGlassDialog {
  spacing: 4px;
  padding: 8px;
  border: none;
  border-radius: $r_8; // affects small OSD while inspecting
  background-color: opacity($osd_bg, $a_osd);
  color: $osd_fg;
  box-shadow: $z-depth-4;

  &.lg-dialog {
    padding: 0 0 $r_8;
    border-radius: 0 0 $r_8 $r_8; // shape bottom-only radius for main window
  }

  > #Toolbar {
    padding: if($ref_weight >= 1.0, 0 8px, 0 6px);
    border: none;
    border-radius: 0;
    background-color: $hidden_fill_bg;
    box-shadow:
      inset 0 -1px if($variant != light,
                      mix(white, $osd_bg, percentage($a_div_2)),
                      mix(black, $dark_bg, percentage($a_div_1)));

    > StIcon { // 'color-picker' and 'trash'
      // base-line shift
      padding: if($ref_weight >= 1.0, 5px 4px 3px, 4px 3px 2px);
    }
  }

  .labels { spacing: 0; }

  .notebook-tab {
    min-height: $tool_icon_size + if($ref_weight >= 1.0, 8px, 6px);
    padding: if($ref_weight >= 1.0, 0 8px * 2, 0 6px * 2);
    border-bottom-width: 0;
    color: $osd_ter_fg;
    @if $ver < 3.35 { // stop using fixed-fonts
      font-family: $font-family;
      font-weight: 500;
    }
    @else { font-weight: 700; } // fixed-fonts are used
    font-size: 90%;
    transition-duration: $tr_d_std;
    &:hover {
      border-bottom-width: 0;
      border-color: transparent;
      background-color: $hidden_fill_bg;
      color: $osd_fg;
      box-shadow: inset 0 -2px $osd_out_fg;
      text-shadow: none;
      transition-duration: $tr_d_std;
    }
    &:selected {
      border-bottom-width: 0;
      border-color: transparent;
      background-color: $hidden_fill_bg;
      color:
        if($variant != light,
           saturate(lighten($sel_bg, percentage($a_trk_2)),
             percentage($a_trk_2)),
           $sel_bg);
      box-shadow: inset 0 -2px $sel_bg;
      text-shadow: none;
      transition-duration: $tr_d_std;
    }

    StLabel { padding-bottom: 0.1em; }
  }

  StBoxLayout#EvalBox,
  StBoxLayout#ResultsArea {
    padding: 8px;
    spacing: 4px;
  }
}

.lg-dialog {
  StEntry {
    selection-background-color: $sel_bg;
    selected-color: $sel_fg;
    @include entry(normal, $tc: $osd_fg);
    &:hover { @include entry(hover, $tc: $osd_fg); }
    &:focus { @include entry(focus, $tc: $osd_fg); }
    &:insensitive { @include entry(disabled, $tc: $osd_fg); }
  }

  .shell-link {
    color: opacity($osd_link_fg, $a_fg_2nd);
    &:hover,
    &:active { color: $osd_link_fg; }
  }

  @if $ver > 3.37 {
    .actor-link {
      color: $osd_sec_fg;
      &:hover,
      &:active { color: $osd_fg; }
    }
  }
}

.lg-completions-text {
  color: $osd_sec_fg;
  font-style: italic;
  font-size: 90%;
}

.lg-obj-inspector {
  &-title { spacing: 4px; }

  &-button {
    // subtract bottom-padding and outlined button borders
    @if $ver < 3.35 {
      height: $close_button_size - 1px - (1px * 2);
    }
    @else {
      height: calc(#{$close_button_size} - 1px - (1px * 2));
    }
    padding: if($ref_weight >= 1.0, 0 16px 1px, 0 12px 1px);
    border-radius: $r_2;
    font-weight: 500;
    @if $variant == mixed {
      @include button(normal, $c: $osd_base, $tc: $osd_fg);
      &:hover { @include button(hover, $c: $osd_base, $tc: $osd_fg); }
      &:focus { @include button(focus, $c: $osd_base, $tc: $osd_fg); }
      &:active { @include button(active, $c: $osd_base, $tc: $osd_fg); }
      &:insensitive { @include button(flat-disabled, $tc: $osd_fg); }
    }
    @else {
      @include button(normal);
      &:hover { @include button(hover); }
      &:focus { @include button(focus); }
      &:active { @include button(active); }
      &:insensitive { @include button(flat-disabled); }
    }
  }
}

#lookingGlassExtensions { padding: 8px; }

.lg-extensions-list {
  padding: 4px;
  spacing: 6px;
}

.lg-extension {
  padding: 4px;
  border: none;
  border-radius: $r_2;
  @if $ver > 3.35 { background-color: transparent; }

  &-name {
    padding-bottom: (6px / 2) 0;
    color: $osd_fg;
    font-weight: 700;
    font-size: 130%;
  }

  &-description {
    color: $osd_sec_fg;
    font-weight: 400;
    font-size: 90%;
    &:ltr { padding: 6px 0 6px (6px * 2); }
    &:rtl { padding: 6px (6px * 2) 6px 6px; }
  }

  &-meta {
    spacing: 6px;
    font-size: 100%;
    &:ltr { padding: 6px 0 6px (6px * 2); }
    &:rtl { padding: 6px (6px * 2) 6px 6px; }
  }
}

StBoxLayout#Windows {
  &:ltr { padding: (8px + 4px + 6px / 2) 0 (8px + 4px) (8px + 4px + 6px); }
  &:rtl { padding: (8px + 4px + 6px / 2) (8px + 4px + 6px) (8px + 4px) 0; }
}

#LookingGlassPropertyInspector {
  padding: 6px;
  border: 1px solid if($variant != light,
                       mix(white, $osd_bg, percentage($a_div_2)),
                       $div_sld_fg);
  border-radius: 0;
  background-color: $osd_bg;
  color: $osd_fg;
  box-shadow: $empty_shadow;
}
