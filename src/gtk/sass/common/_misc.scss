// /***************
//  * Gnome-Panel *
//  ***************/

%gnome_panel_toplevel {
  background-color: $background_panel;

  @if $maj_ver == 3 {
    * { outline-width: 0; } // unset outlines
  }
  @else {
    *:focus(visible) { outline-width: 0; } // unset outlines
  }
}

%gnome_panel_applet {
  // do not set transparent background in this template
  // mate-panel >= 1.18.6 will be broken
  color: if($variant == mixed, $foreground_inv, );
  box-shadow: none;
}

%gnome_panel_menubar {
  border: unset;
  color: if($variant == mixed, $foreground_inv, );
  background-color: transparent;
  font-weight: 700;
}

%gnome_panel_menuitem {
  padding: 0 rem($menu_padding, $sw: 1.0);
  @include radius(0, none);
  color: if($variant == mixed, $foreground_inv, );
  background-color: transparent;
  &:hover {
    @if $variant != light {
      @include button(flat-lined-checked, $text-color: $foreground_selection);
    }
    @else {
      @include button(flat-lined-checked, $text-color: black);
    }
  }
}

panel-toplevel.background { @extend %gnome_panel_toplevel; }

panel-applet,
panel-plug,
panel-toplevel > grid.horizontal > widget > widget {
  @extend %gnome_panel_applet;
  background-color: transparent;
}

.gnome-panel-menu-bar,
gp-applet > menubar,
#clock-applet-button {
  @extend %gnome_panel_menubar;

  .background & { border: unset; }
}

@if $maj_ver == 3 {
  .gnome-panel-menu-bar > menuitem,
  gp-applet menubar > menuitem {
    @extend %gnome_panel_menuitem;
    @extend %gnome_panel_menuitem_misc;
  }
}
@else {
  .gnome-panel-menu-bar > box > menuitem,
  gp-applet menubar > box > menuitem {
    @extend %gnome_panel_menuitem;
    @extend %gnome_panel_menuitem_misc;
  }
}

%gnome_panel_menuitem_misc {
  .vertical & { padding: rem($menu_padding, $sw: 1.0) 0; }

  @each $_layout, $_line in (top, 0 2px),
                            (left, 2px 0),
                            (right, -2px 0) {
    .#{$_layout} & {
      &:hover { box-shadow: inset #{$_line} $background_selection; }
    }
  }
}

#tasklist-button,
#clock-applet-button,
#showdesktop-button {
  min-width: $icon_size;
  min-height: $icon_size;
  padding: 0 rem($menu_padding, $sw: 1.0);
  @include radius(0, none);
  @include transition(reset);
  @if $variant != light {
    @include button(flat-normal, $text-color: $foreground_inv);
    &:hover {
      @include button(flat-lined-hover, $text-color: $foreground_selection);
    }
    &:disabled { @include button(flat-disabled, $text-color: $foreground_inv); }
    &:checked {
      &, &:hover {
        @include button(flat-lined-checked, $text-color: $foreground_selection);
        background-color: track($foreground_selection, $alpha_track_1);
      }
    }

    &, &.flat {
      &:active { animation: none; }
    }
  }
  @else {
    @include button(flat-normal, $text-color: );
    &:hover {
      @include button(flat-lined-hover, $text-color: black);
    }
    &:disabled { @include button(flat-disabled, $text-color: ); }
    &:checked {
      &, &:hover {
        @include button(flat-lined-checked, $text-color: black);
        background-color: track(black, $alpha_track_1);
      }
    }

    &, &.flat {
      &:active { animation: none; }
    }
  }

  .vertical & { padding: rem($menu_padding, $sw: 1.0) 0; }

  @each $_layout, $_line in (top, 0 2px),
                            (left, 2px 0),
                            (right, -2px 0) {
    .#{$_layout} & {
      &:hover { box-shadow: inset #{$_line} $background_tracker_out; }
      &:checked,
      &:hover:checked { box-shadow: inset #{$_line} $background_selection; }
    }
  }

  label { margin-bottom: 0; } // unset baseline
}

#tasklist-button {
  &,
  label { font-weight: 400; }
}

wnck-pager {
  @if $variant != light {
    background-color: transparent;
    color: mix($foreground_inv, $background_panel, percentage($alpha_foreground_3rd)); // use opaque
    box-shadow:
      inset 0 0 0 1px mix($foreground_inv, $background_panel, percentage($alpha_foreground_bdp));
    &:hover {
      background-color: $background_tracker;
      color: $foreground_inv;
      box-shadow: inset 0 0 0 1px $background_tracker_out;
    }
    &:selected {
      background-color: track($background_selection, $alpha_track_out);
      color: $foreground_inv;
      box-shadow: inset 0 0 0 1px $background_selection;
    }
  }
  @else {
    background-color: transparent;
    color: mix(, $background_panel, percentage($alpha_foreground_3rd)); // use opaque
    box-shadow:
      inset 0 0 0 1px mix(, $background_panel, percentage($alpha_foreground_bdp));
    &:hover {
      background-color: $background_tracker;
      color: ;
      box-shadow: inset 0 0 0 1px $background_tracker_out;
    }
    &:selected {
      background-color: track($background_selection, $alpha_track_out);
      color: ;
      box-shadow: inset 0 0 0 1px $background_selection;
    }
  }
}

na-tray-applet { -NaTrayApplet-icon-padding: 2px; }

gp-arrow-button {
  min-width: rem($widget_size / 2);
  min-height: 0;
  margin: 0 rem($menu_padding);
  border: 1px solid transparent;
  background-image: none;
  color: if($variant == mixed, $foreground_inv, );
  &:hover,
  &:active { color: if($variant != light, $foreground_selection, black); }
}

sn-button { padding: 0 rem($menu_padding, $sw: 1.0); }

gp-applet > separator {
  &.vertical {
    min-width: 2px;
    margin: 3px;
  }

  background-color: $foreground_panel_div;
}

// /****************
//  * Gnome Tweaks *
//  ****************/

headerbar.titlebar.tweak-titlebar {
  &-left,
  &-right { // unset baseline correction
    > label.title { margin-bottom: 0; }

    // for hdyleaflet
    + separator.vertical { background-color: $foreground_div_sld_dark; }
  }
}

// sidebar
.tweak-categories {
  @extend %sidebar_template;
  background-image: image($background);
  color: $foreground_secondary;

  separator.horizontal {
    min-height: 0;
    border-color: transparent;
    background-color: transparent;
  }
}

.tweak-category {
  border: none;
  color: $foreground_secondary;
  background-color: transparent;
  font-weight: 500;
  &:hover { color: ; }

  &.activatable { // specificity bump
    &:selected { @extend %selected_sidebar_row; }
  }
}

// basic row node container in right-pane
row.tweak {
  outline-width: 0; // hide outlines
  &:dir(ltr) { margin-left: rem($ref_size, $sw: 1.0); }
  &:dir(rtl) { margin-right: rem($ref_size, $sw: 1.0); }

  &, &.title {
    min-height: rem($widget_size);
    &:hover,
    &:active { // unset hover/active effects
      background-image: none;
      background-color: transparent;
      animation: none;
    }
  }

  &.title { color: $foreground_tertiary; }

  &.title,
  &#AutostartTitle {
    font-weight: 700;
    // unset indentation
    &:dir(ltr) { margin-left: 0; }
    &:dir(rtl) { margin-right: 0; }
  }

  // child sub list elements
  &:not(.title) > list {
    border: 1px solid $foreground_div;

    > row.activatable {
      background-color: $base;
      color: $foreground_secondary;
      &:hover {
        background-color: $background_tracker;
        color: ;
      }
      &:active { color: ; }

      > box.horizontal {
        > label,
        > box.vertical > label:first-child { font-weight: 500; }
      }

      // draw horizontal lines
      &:not(:last-child) { border-bottom: 1px solid $foreground_div; }
    }
  }
}

// container and tweaks in a group
list.tweak-group-startup { background-color: $background; }

%startup_list_row {
  padding: rem($entry_lr_space);
  background-image: image($background);
  background-repeat: repeat-x;
  background-size: auto;
  transition-duration: 0s; // child 'grid' already has
  outline-width: 0; // hide outlines
  &:hover {
    > grid {
      background-image: image(track($foreground_secondary, $alpha_track_1));
      transition: background-image $transition_d_standard $transition_t_dec;
    }
  }
  &:active { @include transition(reset); } // disable ripples

  > grid { // actual container
    @include radius($radius_2);
    padding: rem($entry_lr_space);
    transition: background-image $transition_d_standard $transition_t_dec;

    > button { // 'remove' buttons
      @include button(raised-normal, $color: $background_destruction, $text-color: $foreground_selection_secondary);
      @include ink-reaction(normal, $fc: $foreground_selection, $tr: ink-normal-dec);
      &:hover { @include button(raised-hover, $color: $background_destruction, $text-color: $foreground_selection); }
      &:active {
        @include button(raised-active, $color: $background_selection, $text-color: $foreground_selection);
        @include ink-reaction(active-dec, $fc: $foreground_selection, $tr: ink-active-dec);
      }
      &:checked {
        @include button(raised-checked);
        &:disabled {
          border-color: mix($background_destruction, $background, percentage($alpha_track_1));
          background-color: mix($background_destruction, $background, percentage($alpha_track_1));
          color: $foreground_dis_selection;
        }
      }
      &:disabled { @include button(raised-disabled, $color: $base, $text-color: ); }
    }
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver < 23 {
    list.tweak-group-startup {
      > row.activatable { @extend %startup_list_row; }
    }
  }
  @else {
    list.tweak-group-startup {
      > row {
        @extend %startup_list_row;
        &:hover > grid { background-image: none; }
      }
    }
  }
}
@else {
  list.tweak-group-startup {
    > row {
      @extend %startup_list_row;
      &:hover > grid { background-image: none; }
    }
  }
}

dialog.background.csd > box.dialog-vbox.vertical {
  > searchbar + scrolledwindow > viewport.frame > list {
    // FIXME: who needed hard-coded 5px outer margins
    // causing weird pitch black band?
    border: 1px solid $foreground_div_sld; // use opaque
    box-shadow: 0 0 0 5px $background;
  }
}

// /*******************
//  * Gnome-Flashback *
//  *******************/

// use message-dialog style for popup osd windows
$gf_margin: 12px;

%gf_window {
  @if $variant == mixed { color: $foreground_inv; }
  @else { color: ; }

  levelbar block:not(.empty) { background-color: $background_success; }

  &.solid {
    @if $variant == mixed { color: $foreground_inv; }
    @else { color: ; }

    levelbar block:not(.empty) { background-color: $background_success; }
  }

  &:not(.solid) {
    background: none;

    > box {
      padding: $gf_margin;
      @if $variant == mixed { background-color: track($background_dark_inv, $alpha_osd); }
      @else { background-color: track($background_dark, $alpha_osd); }
    }
  }

  // for non-composited environments
  &.solid {
    border-radius: 0;
    border: 1px solid $foreground_div;
    @if $variant == mixed { background-color: track($background_dark_inv, $alpha_osd); }
    @else { background-color: track($background_dark, $alpha_osd); }
  }
}

%gf_window_decoration_3 {
  &:not(.solid) > box {
    margin: 0 0 (16px - $gf_margin);
    @include radius($radius_4, none);
    box-shadow: $z-depth-3;
  }
}

%gf_window_decoration_4 {
  &:not(.solid) > box {
    margin: (16px - $gf_margin) (24px - $gf_margin) (32px - $gf_margin);
    @include radius($r_8, none);
    box-shadow: $z-depth-4;
  }
}

// popup window widget
#gf-label-window,
#gf-bubble,
#gf-osd-window,
#gf-input-source-popup {
  @extend %gf_window;
  @extend %gf_window_decoration_4;
}

#gf-label-window {
  font-size: rem($ref_size * 3, $sw: 1.0);
  font-weight: 400;
}

#gf-bubble box.horizontal > button.flat { // OSD-style button
  @if $variant == mixed {
    @extend %inv-action-area-button;
  }
  @else {
    @extend %action-area-button;
  }
  min-width: $icon_size;
  min-height: $icon_size;
  padding: rem($menuitem_padding, $sw: 1.0);
  @include radius($radius);
}

#notification-popup-window {
  button.text-button:not(.flat) { // 'clear' button
    @extend %action-area-button;
  }

  button.flat:not(.text-button) { // close button
    min-width: $icon_size;
    min-height: $icon_size;
    padding: rem($menuitem_padding, $sw: 1.0);
    @include radius($radius);
  }
}

// input-source switcher labels
#gf-input-source {
  min-width: rem($ref_size * 9, $sw: 1.0);
  min-height: rem($ref_size * 9, $sw: 1.0);
  color: if($variant != light, $foreground_inv, );
  font-size: rem(40px, $sw: 1.0);
  font-weight: 400;
  &:selected {
    border-radius: 2px;
    background-color: $background_tracker;
    color: if($variant != light, $foreground_accent_inv, $foreground_accent);
  }
}

// popup for input-source candidates
#gf-candidate-popup {
  @extend %gf_window;
  @extend %gf_window_decoration_3;

  gf-candidate-box {
    @include radius($radius_2, none);
    color: if($variant == mixed, $foreground_inv_secondary, $foreground_secondary);
    @include transition(reset);

    label {
      padding: rem($baseline * 2)
               rem($entry_lr_space)
               rem($baseline * 3);
      font-size: 110%;
    }

    &:hover {
      background-color: $background_tracker;
      color: if($variant == mixed, $foreground_inv, );
    }
    &:selected {
      background-color: $background_suggestion;
      color: $foreground_selection;
    }
  }

  .linked > button { // page-up&down buttons
    &, &.flat {
      @if $variant == mixed {
        @extend %inv-action-area-button;
      }
      @else {
        @extend %action-area-button;
      }
      min-height: rem($widget_size);
      min-width: rem($widget_size);
    }
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 {
    gf-screensaver-panel { @extend %gf_ss_panel; }

    gf-icon { @extend %gf_icon; }
  }
}
@else {
  gf-screensaver-panel { @extend %gf_ss_panel; }

  gf-icon { @extend %gf_icon; }
}

%gf_ss_panel {
  @extend %gnome_panel_toplevel;
  @extend %gnome_panel_applet;
  padding: 4px 10px; // NEEDS_REVIEW

  label,
  image { color: if($variant == mixed, $foreground_inv, ); }
}

%gf_icon {
  margin: 2px;
  @extend %nautilus_desktop_items;
  &:hover,
  &:selected {
    image {
      @if $maj_ver == 3 { -gtk-icon-effect: highlight; }
      @else { -gtk-icon-filter: brightness(1.2); }
    }
  }

  &:selected {
    label {
      background-color: $background_selection;
      color: $foreground_selection;
    }
  }

  label {
    padding: $radius_2;
    border-radius: $radius_2;
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 {
    gf-unlock-dialog { @extend %gf_unlock_dialog; }
  }
}
@else {
  gf-unlock-dialog { @extend %gf_unlock_dialog; }
}

%gf_unlock_dialog {
  border-radius: $r_8;
  box-shadow: $z-depth-4;
  background: transparent;

  &.background { background: transparent; }

  > frame {
    border-radius: $r_8;
    @if $variant == mixed { // alpha compositing doesn't work though
      background-color: track($background_dark_inv, $alpha_osd);
      color: $foreground_inv;
    }
    @else {
      background-color: track($background_dark, $alpha_osd);
      color: ;
    }

    &, > border { border: none; }
  }

  notebook {
    button {
      @if $variant == mixed { @extend %inv_flat_button; }
      @else { @extend %flat_button; }
    }

    entry:not(.flat) {
      min-height: rem($widget_size);
      @include radius($radius_4 $radius_4 0 0, none);
      border: none;
      @if $variant == mixed {
        @include entry(flat-normal, $text-color: $foreground_inv);
        caret-color: $foreground_inv;
        &:focus { @include entry(flat-focus, $text-color: $foreground_inv); }
        &:disabled { @include entry(flat-disabled, $text-color: $foreground_inv); }

        selection { @extend %selected_items; }
      }
      @else {
        @include entry(flat-normal, $text-color: );
        caret-color: ;
        &:focus { @include entry(flat-focus, $text-color: ); }
        &:disabled { @include entry(flat-disabled, $text-color: ); }
      }
    }
  }

  buttonbox:not(.linked) button { // specificity bump
    &:not(.suggested-action):not(.destructive-action) {
      @if $variant == mixed { @extend %inv-action-area-button; }
      @else { @extend %action-area-button; }
    }
  }
}

// /************
//  * Nautilus *
//  ************/

%nautilus_desktop_items {
  color: $foreground_selection;
  text-shadow: $z-depth-1-label; // non-sense for me
  &:selected { text-shadow: none; }
}

.nautilus-desktop-window {
  &,
  notebook,
  notebook > stack { background: transparent; }
}

.nautilus-desktop.nautilus-canvas-item { @extend %nautilus_desktop_items; }

.background.nautilus-window:not(.nautilus-desktop-window) {
  &:not(nautilus-desktop-window) {
    // enforce base-color backgrounds
    background-color: $base;
  }
}

.nautilus { // hide outlines
  &-canvas-item {
    @include radius($radius_2, none);
    &:active:not(:focus) {
      // FIXME: prevent unneeded icon dimming when unfocused
      background-color: $background_selection;
      color: $foreground_selection;
    }
    @if $maj_ver == 3 {
      outline-width: 0; // unset outlines
    }
    @else {
      &:focus(visible) { outline-width: 0; } // unset outlines
    }
  }

  &-list-view treeview.view {
    @if $maj_ver == 3 {
      outline-width: 0; // unset outlines
    }
    @else {
      &:focus(visible) { outline-width: 0; } // unset outlines
    }
  }
}

.nautilus-circular-button { @include radius($radius); }

.nautilus-window {
  > grid.horizontal paned > separator {
    // do not use transparentize
    background-image: image($foreground_div_sld);
    background-size: $separator_narrow;
    background-repeat: repeat-y;
    @include transition(reset);
  }

  > headerbar.titlebar { // radial-progress widget
    revealer > button.popup.toggle {
      > widget { color: if($variant == mixed, $foreground_accent_inv, $foreground_accent); }

      &:checked > widget { color: $foreground_selection; }
    }
  }

  $child_gap: if($ref_weight < 1.0, 4px, 6px);
  $container_padding: $child_gap ($child_gap * 1.5);
  $label_margin: ($child_gap / 2) (-$child_gap * 1.5) 0;
  $label_padding: if($ref_weight < 1.0,
                  ($child_gap - 1px) $child_gap $child_gap,
                  ($child_gap - 3px) $child_gap ($child_gap - 2px));

  flowboxchild { // experimental 'new view' mode
    margin: unset; // unset spacing first
    padding: unset;
    color: ;
    @if $maj_ver == 3 {
      outline-width: 0; // unset outlines
    }
    @else {
      &:focus(visible) { outline-width: 0; } // unset outlines
    }

    * { @include transition(reset); } // unset child transitions

    box.icon {
      &-item-background {
        padding: $container_padding;
        border: 0 none transparent;

        label {
          margin: $label_margin;
          padding: $label_padding;
          @include radius($radius_2, none);
          background-color: transparent;
        }
      }

      &-background { // use solid black backgrounds
        border: 0 none transparent;
        @include radius($radius_2, none);
        background-color: black;
      }
    }

    &:selected {
      &, &:focus {
        background-color: transparent; // unset selection color
      }

      box.icon {
        &-item-background label {
          background-color: $background_selection;
          color: $foreground_selection;
        }

        // tone up image node
        &-background image,
        &-item-background image {
          @if $maj_ver == 3 { -gtk-icon-effect: highlight; }
          @else { -gtk-icon-filter: brightness(1.2); }
        }
      }
    }
  }
}

.disk-space-display {
  border: 0 none transparent;

  &.free {
    @include radius($radius, none);
    background-color: mix(, $base, percentage($alpha_track_1)); // legacy
    color: mix(, $base, percentage($alpha_track_1)); // >= 3.29.90
  }

  &.used {
    @include radius($radius, none);
    background-color: $background_accent;
    color: $background_accent;
  }

  &.unknown {
    background-color: mix($background_accent, $base, percentage($alpha_foreground_3rd));
    color: mix($background_accent, $base, percentage($alpha_foreground_3rd));
  }
}

// 'batch-rename' dialogs
.conflict-row {
  background-color: $background_warning;
  color: $foreground_fix_secondary;
  &:hover,
  &:active {
    background-color: $warn;
    color: $foreground_fix;
  }
  &:selected { @extend %selected_items; }
}

// hide unwanted frame in batch-rename dialog
dialog.background.csd > box.dialog-vbox > grid.horizontal {
  > scrolledwindow.frame {
    > viewport.frame { margin: -1px; }
  }
}

.nautilus {
  &-canvas-item {
    @include radius($radius_2, none);

    &.dim-label {
      color: $foreground_tertiary;
      &:selected {
        &, &:focus { color: mix($foreground_selection, $background_selection, percentage($alpha_foreground_3rd)); }
      }
    }
  }

  &-list-dim-label {
    color: $foreground_tertiary;
    &:selected {
      &, &:focus { color: mix($foreground_selection, $background_selection, percentage($alpha_foreground_3rd)); }
    }
  }
}

.documents-entry-tag { @extend .entry-tag; }

// /*********
//  * Geary *
//  *********/

.geary-titlebar-right {
  > .linked.raised > button {
    // 'archive' button
    &:not(.image-button):not(.text-button):not(.suggested-action) {
      > widget > box {
        > label {
          padding-bottom: 0;
          &:dir(ltr) { padding-left: 0; }
          &:dir(rtl) { padding-right: 0; }
        }

        > image { // archive icon
          margin-top: rem($baseline, $sw: 1.0); // reset baseline
        }
      }
    }
  }
}

%folder_frame_border { border-width: 0 0 1px; }

%conversation_frame {
  > border { border: none; }

  treeview.view {
    background-color: $background;
    font-weight: 400; // reset weight
    &:selected {
      background-color: track($background_selection, $alpha_track_2);
      color: ;
      &:hover { background-color: track($background_selection, $alpha_track_2); }
      &:dir(ltr) { box-shadow: inset 4px 0 $background_selection; }
      &:dir(rtl) { box-shadow: inset -4px 0 $background_selection; }
      &:focus {
        background-color: track($background_selection, $alpha_track_2);
        color: ;
        &:hover { background-color: track($background_selection, $alpha_track_2); }
        &:dir(ltr) { box-shadow: inset 4px 0 $background_selection; }
        &:dir(rtl) { box-shadow: inset -4px 0 $background_selection; }
      }
    }
    &:hover { background-color: $background_tracker; }
  }
}

%folder_frame {
  @extend %sidebar_template;

  treeview.view.sidebar {
    @extend %sidebar_treeview;

    &.cell { // = row height of placessidebar
      min-height: rem($small_widget);
    }
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver < 23 {
    // left-pane styling (legacy)
    .sidebar.vertical > paned.sidebar-pane-separator {
      .conversation-frame { @extend %conversation_frame; }

      .folder-frame {
        > border { @extend %folder_frame_border; }

        > scrolledwindow { @extend %folder_frame; }
      }
    }
  }
}

// left-pane styling (current)
.sidebar.vertical > paned.geary-sidebar-pane-separator {
  .geary-conversation-frame { @extend %conversation_frame; }

  .geary-folder-frame {
    > border { @extend  %folder_frame_border; }

    > scrolledwindow { @extend %folder_frame; }
  }
}

window.background > box.vertical > paned.horizontal > frame {
  // right-paned scrolledwindow
  > box.vertical > paned.vertical > overlay {
    > scrolledwindow > scrollbar { // always use light-variant
      background-color: transparent;

      slider {
        background-color: track($foreground_fix, $alpha_foreground_3rd * $alpha_foreground_3rd);
        &:hover { background-color: track($foreground_fix, $alpha_foreground_2nd * $alpha_foreground_3rd); }
        &:active { background-color: $foreground_fix; }
        &:disabled { opacity: $alpha_foreground_bdp; }
      }

      &.overlay-indicator {
        &:not(.dragging):not(.hovering) slider {
          background-color: track($foreground_fix, $alpha_foreground_3rd * $alpha_foreground_3rd);
        }
      }
    }

    @if $maj_ver == 3 {
      @if $mnr_ver < 23 {
        > label.bottom { // mimic floating-bar styling
          @extend %floating_bar;
          padding: $toolbar_padding;

          &.left { @extend %floating_bar_left; }

          &.right { @extend %floating_bar_right; }
        }
      }
    }
  }
}

// right-pane styling
stack#conversation_viewer {
  scrolledwindow.geary-conversation-scroller {
    // FIXME: overshoot effect sometimes can't finish its transition,
    // then it causes ramaining some part of indicators.
    overshoot {
      &.top,
      &.bottom,
      &.left,
      &.right { background: none; }
    }

    > viewport.frame { border: none; } // unset borders
  }

  list.background.conversation-listbox {
    background-color: $background;

    > row.activatable {
      > box.geary_email {
        margin: -1px; // hide hard-coded parent borders
        border-top: 1px solid $background;

        grid.geary-message-summary {
          border-bottom: 1px solid $foreground_div;
        }
      }

      &:not(.geary-expanded) { // retracted headers
        grid.geary-headers.vertical {
          label { @extend %dim_label; } // tone down
        }
      }

      > widget.geary-composer-embed {
        headerbar { // in-line headerbars
          margin: -1px -1px 0; // FIXME: does not work
          border-top: 1px solid $background;
        }
      }
    }
  }
}

// /************
//  * Epiphany *
//  ************/

// incognito-mode styling
@if $maj_ver == 3 {
  @if $mnr_ver < 23 {
    // most of widget styling are hard-coded by ephy's stylesheet,
    // but we should force using dark foregrounds at least...

    headerbar.titlebar.incognito-mode {
      entry {
        @if $variant != light {
          @include entry(normal, $color: $base_fix,
                                 $text-color: $foreground_fix);
          caret-color: $foreground_fix;
          &:focus {
            @include entry(focus, $color: $base_fix,
                                  $text-color: $foreground_fix);
            caret-color: $foreground_fix;
          }
          &:disabled {
            @include entry(disabled, $color: $base_fix,
                                     $text-color: $foreground_fix);
          }
        }
      }

      button:not(.destructive-action):not(.suggested-action) {
        // these classes are specificity bump to override titlebuttons
        &:not(.appmenu):not(.icon):not(:indeterminate) {
          @if $variant != light {
            @include button(normal, $color: $base_fix,
                                    $text-color: $foreground_fix);
            @include ink-reaction(
                       normal, $fc: $foreground_fix, $tr: ink-normal-dec);
            &:hover {
              @include button(hover, $color: $base_fix,
                                     $text-color: $foreground_fix);
            }
            &:active {
              @include button(active, $color: $base_fix,
                                      $text-color: $foreground_fix);
              @include ink-reaction(
                         active-dec, $fc: $foreground_fix, $tr: ink-active-dec);
            }
            &:disabled {
              @include button(disabled, $color: $base_fix,
                                        $text-color: $foreground_fix);
            }
            &:checked { @include button(checked, $text-color: $foreground_selection); }
            &:checked:disabled {
              @include button(checked-disabled, $color: $base_fix,
                                                $text-color: $foreground_fix);
            }
          }
        }
      }
    }
  }
}

headerbar.titlebar.incognito-mode {
  buttonbox.linked > widget {
    color: if($variant == mixed, $foreground_inv_secondary, $foreground_secondary);
  }
}

// reset inverted foreground color
notebook > stack > box.vertical > paned.vertical > overlay {
  > .floating-bar { color: $foreground_secondary; }
}

// overrides foregrounds for 3.24's ssd-mode
.background headerbar entry {
  &.starred,
  &.non-starred {
    color: if($variant == mixed, $foreground_inv_secondary, $foreground_secondary);
    caret-color: if($variant == mixed, $foreground_inv_secondary, $foreground_secondary);
    &:focus {
      color: if($variant == mixed, $foreground_inv, );
      caret-color: if($variant == mixed, $foreground_inv, );
    }
    &:disabled {
      color: if($variant == mixed, $foreground_dis_inv_secondary, $foreground_dis_secondary);
    }
  }

  // render yellow 'star' icon if bookmarked
  &.starred > image.right {
    color: track($background_question, $alpha_foreground_2nd);
    &:hover,
    &:active,
    &:checked { color: $background_question; }
  }
}

// popover for downloaded lists
@if $maj_ver == 3 {
  popover.background:not(.emoji-picker) > box.vertical > scrolledwindow {
    // re-define background colors for GtkListBox
    > viewport.frame > list.background {
      background-color: $background_dark;
    }
  }
}
@else {
  popover:not(.emoji-picker) > box.vertical > scrolledwindow {
    // re-define background colors for GtkListBox
    > viewport.frame > list.background {
      background-color: $background_dark;
    }
  }
}

// popover for bookmarks
@if $maj_ver == 3 {
  popover.background:not(.emoji-picker) > box.vertical > stack > box.vertical {
    scrolledwindow > viewport.frame {
      border: 1px solid $foreground_div;

      > list.background > row.activatable.bookmarks-row {
        color: $foreground_secondary;
        &:hover,
        &:active,
        &:checked { color: ; }

        button.flat {
          min-width: $icon_size;
          min-height: $icon_size;
          padding: rem(4px); // Same as of image.sidebar-icon
          @include radius($radius);
        }
      }
    }
  }
}
@else {
  popover:not(.emoji-picker) > box.vertical > stack > box.vertical {
    scrolledwindow > viewport.frame {
      border: 1px solid $foreground_div;

      > list.background > row.activatable.bookmarks-row {
        color: $foreground_secondary;
        &:hover,
        &:active,
        &:checked { color: ; }

        button.flat {
          min-width: $icon_size;
          min-height: $icon_size;
          padding: rem(4px); // Same as of image.sidebar-icon
          @include radius($radius);
        }
      }
    }
  }
}

// bookmark-tag flowbox-childs (almost hard-coded)
flowboxchild.bookmark-tag-widget {
  color: track($foreground_fix, $alpha_foreground_3rd); // unchecked
  font-weight: 500;

  label { margin-bottom: rem($baseline, $sw: 1.0); }

  button { @include radius($radius_2); } // revert to square button

 &-selected { color: $foreground_selection; } // checked
}

// search result counter labels
.linked > entry.search > entry { // enforce "no-relief" labels
  min-height: unset;
  border: unset;
  background: none;
}

// /************
//  * Seahorse *
//  ************/

window.background box.vertical > paned.horizontal > box.vertical {
  // remove drop-shadow
  > box.vertical > toolbar.primary-toolbar {
    box-shadow: none;
    border-bottom: 1px solid $foreground_div;
  }
}

// /**********
//  * Polari *
//  **********/

.polari-room-list { // override labels
  row.activatable {
    font-weight: 500;
    &:not(:hover):not(:active):not(:selected) {
      label,
      image { opacity: 1.0; }
    }

    &.inactive {
      &:not(:hover):not(:active):not(:selected) {
        label,
        image { opacity: $alpha_foreground_3rd; }
      }
    }

    &:selected {
      background-image:
        image(mix($background_selection, $background, percentage($alpha_track_2)));
      &:dir(ltr) { box-shadow: inset 4px 0 $background_selection; }
      &:dir(rtl) { box-shadow: inset -4px 0 $background_selection; }
    }

    label.pending-messages-count {
      background-image: image($background_suggestion);
    }
  }
}

.polari-nick-entry {
  border-image: none;
  font-weight: 700;
}

// bottom-paned entry area
window.background > box.horizontal > overlay > stack > overlay > box.vertical {
  > stack.view { // mimic inline-toolbar styling
    border-style: solid;
    border-width: 1px 0 0;
    border-color: $foreground_div;
    background-color: $background_dark;
  }
}

popover.emoji-picker flowboxchild.emoji {
  // FIXME: why did devs ignore the global emoji theming?
  // Should set hover pseudo-class to child widget node.
  &:hover > widget:not(:hover) label { color: $foreground_selection; }
}

// /*************
//  * RhythmBox *
//  *************/

// tweak sidebar styling
.sidebar-paned {
  scrolledwindow {
    @extend %sidebar_template;
    background-image: image($background);
  }

  treeview.view.sidebar { @extend %sidebar_treeview; }
}

// tweak border and frame in alt-toolbar
window.csd > box.vertical > box.vertical,
window.solid-csd > box.vertical > box.vertical {
  > toolbar.horizontal {
    margin: -1px 0;
    border-top: 1px solid $foreground_div;
    background-color: $background_dark;
    box-shadow: none;
  }

  > frame {
    margin: -1px 0;
    padding: 0;

    > border { border: none; }
  }
}

window.background > box.vertical > box.vertical > toolbar.horizontal {
  // prev/play/next buttons in alternate-mode bottom toolbar
  toolitem .linked.horizontal > button:not(.image-button):not(.text-button) {
    padding: 0 rem($toolitem_size / 4, $sw: 1.0); // revive L/R padding
  }
}

// hard-coded spacing depends on non-scalable unit,
// seems cover-art widget is the most biggest thing?
$album_art: 54px;
$album_art_small: 36px;
$min_button: 24px - (1px * 2);
$toolitem_margin: ($album_art - $min_button) / 2;

window.background > box.vertical > toolbar.primary-toolbar {
  toolitem {
    &:first-child { // 'prev/play/next'
      .linked > button.image-button.raised {
        min-width: $min_button * 2.0;
        min-height: $min_button * 2.0;
        margin: 0;
        padding: 0;
      }
    }

    .linked > button.image-button.raised { // 'shuffle/repeat'
      min-width: $min_button * 1.5;
      min-height: $min_button * 1.5;
      padding: 0;
    }

    button.flat.scale { // 'volume'
      min-width: $min_button;
      min-height: $min_button;
      margin-top: $toolitem_margin;
      margin-bottom: $toolitem_margin;
      padding: 0;
    }

    > box.horizontal:not(.linked) > button.toggle,
    > .linked > button:not(.toggle):not(.raised):not(.flat) {
      min-width: $min_button * 1.5;
      min-height: $min_button * 1.5;
      padding: 0;
    }

    &:last-child { // 'gear'
      button.popup.toggle {
        min-width: $min_button * 1.5;
        min-height: $min_button * 1.5;
        padding: 0;
      }
    }
  }
}

notebook > stack grid.horizontal > grid.horizontal > grid.horizontal {
  button.flat.toggle { // 'edit' and 'browse' button
    &:checked { // draw underline indicator
      background-color: $background_selection;
      color: $foreground_selection;
    }
  }
}

// 'plugins' dialog
dialog.background > box.dialog-vbox.vertical > box.vertical {
  > toolbar.inline-toolbar.horizontal {
    // remove weird margins
    margin: -2px -2px;

    > toolitem {
      box > button {
        min-width: $widget_size - 10.7px;
        min-height: $widget_size - 10.7px;
        padding: 0;
      }

      buttonbox > button {
        min-width: $widget_size - 10.7px;
        min-height: $widget_size - 10.7px;
        padding: 0;
        @include radius($radius_2);
      }
    }
  }
}

// bottom toolbar buttons (alternate toolbar mode)
paned.sidebar-paned + box.vertical > frame + toolbar > toolitem {
  > .linked > button,
  > box.horizontal > button.toggle { // prevent jumping button heights
    min-width: $album_art_small;
    min-height: $album_art_small;
    padding: 0;
  }
}

// /********************
//  * Gnome-Calculator *
//  ********************/

window.background {
  > grid.vertical > box.vertical widget,
  grid.math-buttons {
    button {
      min-width: calc(#{rem($widget_size - $txt_button_lr_space)} - 1px * 2);
      @include radius($radius_2);

      &:not(.suggested-action) {
        @include button(flat-normal);
        &:hover { @include button(flat-hover); }
        &:active { @include button(flat-active); }
        &:disabled { @include button(flat-disabled); }
        &:checked { @include button(flat-checked); }
        &:checked:disabled { @include button(flat-checked-disabled); }
      }

      &.suggested-action {  // '=' button
        @include radius($radius);
      }
    }
  }
}

scrolledwindow {
  &.history-view.frame {
    border-bottom-color: if($variant == dark, track(white, $alpha_div_2),
                                              $foreground_div);

    row.history-entry widget > label { color: $foreground_tertiary; }
  }
}

// /*********
//  * Gedit *
//  *********/

.gedit-bottom-panel-paned {
  .gedit-search-slider {
    @extend %app_slider;
    background-color: track($background_tooltip, $alpha_osd);
    color: ;
  }
}

paned.titlebar.horizontal {
  headerbar {
    button.flat.toggle.popup:not(.image-button) { // left-pane header button
      @include radius($radius_2);

      box > .title {
        margin-top: rem($baseline, $sw: 1.0);
        padding: 0;
      }
    }
  }
}

paned.gedit-bottom-panel-paned + statusbar { // inline-toolbar styling
  padding: $toolbar_padding;
  border-style: solid;
  border-width: 1px 0 0;
  border-color: $foreground_div;
  background-color: $background_dark;

  button.flat { // padding is overridden by (1px 8px 2px 4px)
    min-height: rem($small_widget);

    box {
      &:dir(ltr) { margin: -1px -4px -2px 4px; }
      &:dir(rtl) { margin: -1px 4px -2px -4px; }
    }
  }
}

.gedit-side-panel-paned.horizontal {
  // 'file-browser' pane
  > box.vertical > stack > grid.horizontal {
    @extend %sidebar_template;

    > box.horizontal {  // header-part
      padding: rem($menu_padding) 0;
      border-bottom: 1px solid $foreground_div;
    }

    treeview.view { @extend %sidebar_treeview; }
  }
}

.gedit-document-panel { // 'documents' pane
  @extend %sidebar_template;

  row { @extend %sidebar_row_template; }
}

frame.gedit-map-frame > border {
  &:dir(ltr) { border-width: 0 0 0 1px; }
  &:dir(rtl) { border-width: 0 1px 0 0; }
}

// /*****************
//  * Gnome-Builder *
//  *****************/

@if $maj_ver == 3 {
  @if $mnr_ver < 23 {
    // styling for editor search
    frame.gb-search-frame {
      background-image: image($background);
      padding: rem($menuitem_padding);
      border-style: solid;
      border-color: $foreground_div;
      border-width: 0 1px 1px;
      border-radius: 0;

      border { border: none; }
    }

    .gb-search-entry-occurrences-tag {
      color: $foreground_dis;
      margin: rem(2px);
      padding: rem(2px);
      border-width: 0;
    }

    // Tweaks for the editortweak popover in the editor.
    editortweak {
      button {
        padding: 0 rem($menuitem_padding) 0 rem($menuitem_padding);
      }

      list row { padding: 0; }
    }

    // Keep search bar and layouttab height in sync.
    layouttabbar > box { min-height: rem($widget_size); }

    eggsearchbar > revealer > box { min-height: rem($widget_size); }

    // Pillbox is used to render "languages" in the greeter.
    pillbox {
      border-radius: $radius_2;
      background-color: $background;
    }

    // Styling in the genesis (create project) perspective.
    genesisperspective stack > box:first-child list row {
      padding: rem(10px);
      border-bottom: 1px solid $foreground_div_sld;
      &:last-child { border-bottom: none; }
    }

    // Layout tab and tab bar tweaks
    //
    // The following makes the layout stack header look similar to a tab bar.
    layouttabbar {
      min-height: rem($widget_size);
      padding: $toolbar_padding;
      border-bottom: 1px solid $foreground_div_sld;
      background-color: $background;

      box.horizontal > button {
        &, &.popup.toggle {
          min-width: rem($widget_size);
          min-height: rem($widget_size);
          @include button(flat-normal);
          &:hover { @include button(flat-hover); }
          &:active { @include button(flat-active); }
          &:disabled { @include button(flat-disabled); }
          &:checked { // draw underline
            background-color: $background_selection;
            color: $foreground_selection;
          }
          &:checked:disabled { @include button(flat-checked-disabled); }
        }
      }
    }

    layouttab {
      margin: 4px;
      padding: $toolbar_padding;
      background-color: transparent;

      label { padding: rem($menu_padding); }

      separator.vertical {
        margin: 0 rem($baseline * 2); // expand vertically
        background-color: $foreground_div;
      }

      button {
        &, &.popup.toggle {
          min-width: rem($widget_size);
          min-height: rem($widget_size);
          margin: 4px;
          @include radius($radius_2);
          @include button(flat-normal);
          &:hover { @include button(flat-hover); }
          &:active { @include button(flat-active); }
          &:disabled { @include button(flat-disabled); }
          &:checked { // draw underline
            background-color: $background_selection;
            color: $foreground_selection;
          }
          &:checked:disabled { @include button(flat-checked-disabled); }
        }
      }

      // close button styling for layouttab.
      > box > button.close {
        @include radius($radius_2);
        min-width: rem($widget_size);
        min-height: rem($widget_size);
        @include button(flat-normal);
        &:hover { @include button(flat-hover); }
        &:active { @include button(flat-active); }
        &:disabled { @include button(flat-disabled); }
      }
    }
  }
}

layout {
  // hide top/bottom pane-separator
  border-width: 0 1px 0;
  border-style: none solid none;
  border-color: $foreground_div_sld;
  // revive top-edge border with box-shadow
  box-shadow: inset 0 -1px $foreground_div_sld;

  -PnlDockBin-handle-size: 1;
}

eggsearchbar box.search-bar { background-color: $background_dark; }

%omnibar_entry {
  // enforce inverted label color
  &:not(:hover):not(:active) > entry {
    @if $variant == mixed {
      background-image:
        image(mix($foreground_inv, $base_inv, percentage($alpha_track_1 / 2)));
      color: $foreground_inv_secondary;
      caret-color: $foreground_inv_secondary;

      label { color: $foreground_inv_secondary; }
    }
    @else {
      color: $foreground_secondary;
      caret-color: $foreground_secondary;

      label { color: $foreground_secondary; }
    }
  }

  &:hover > entry {
    @if $variant == mixed {
      background-image:
        image(mix($foreground_inv, $base_inv, percentage($alpha_track_1 / 2)));
      color: $foreground_inv;
      caret-color: $foreground_inv;

      label { color: $foreground_inv; }
    }
    @else {
      color: ;
      caret-color: ;

      label { color: ; }
    }
  }

  &:active > entry {
    &, &:focus {
      border-color: $background_selection;
      background-image: image($background_selection);
      color: $foreground_selection;
      caret-color: $foreground_selection;

      label { color: $foreground_selection; }
    }
  }
}

omnibar.linked {
  &, // fullscreen-mode (>= 3.28)
  .titlebar & { @extend %omnibar_entry; } // window-ed mode
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 { // >= 3.31.90
    entry > overlay { @extend %entry_overlay; }
  }
}
@else {
  entry > overlay { @extend %entry_overlay; }
}

%entry_overlay {
  // Gtk-2-ed like arrow up/down 12px buttons!?
  box.pan.vertical { margin: -3px 0; }

  progressbar.bottom { // expand progressbar
    trough, progress {
      min-height: calc(#{rem($widget_size)} - 2px * 2);
      &:dir(ltr) { @include radius($radius 0 0 $radius, none); }
      &:dir(rtl) { @include radius(0 $radius $radius 0, none); }
    }

    trough { background-color: transparent; }

    progress { background-color: track($background_accent, $alpha_track_out); }
  }

  // child buttons have fixed 24px min-height/width via shared-omnibar.css
  notification > box.horizontal { margin: -3px 0; }
}

%tabstrip {
  min-height: rem($small_widget);
  padding: $toolbar_padding rem($ref_size);
  border-bottom: 1px solid $foreground_div_sld;
  background-color: $background;
}

%tabstrip_tab {
  color: $foreground_tertiary;
  font-weight: 500;
  box-shadow: inset 0 -1px $background_tracker_out;
  &:hover {
    color: ;
    box-shadow: inset 0 -2px $background_tracker_out;
  }
  &:checked {
    color: ;
    box-shadow: inset 0 -2px $background_selection;
  }
}

tabstrip,
docktabstrip { @extend %tabstrip; }

tabstrip tab,
docktabstrip docktab { @extend  %tabstrip_tab; }

@if $maj_ver == 3 {
  @if $mnr_ver < 23 {
    dockstack > stack { // treeviews inside the left/right layoutpane
      > dockwidget treeview.project-tree.view,
      > devhelppanel treeview.view {
        background-color: $background;
        font-weight: 500;
        &:selected { @extend %selected_items; }
      }
    }
  }
}

headerbar > box > box.linked {
  > button.image-button.popup.toggle {
    &.run-arrow-button {
      min-width: 0;
      padding-left: 0;
      padding-right: 0;
    }
  }
}

popover {
  @if $maj_ver == 3 {
    > list > row.activatable > box.horizontal {
      > label { // add lateral gaps
        &:dir(ltr) { margin-left: rem($entry_lr_space); }
        &:dir(rtl) { margin-right: rem($entry_lr_space); }
      }
    }
  }
  @else {
    > contents > list > row.activatable > box.horizontal {
      > label { // add lateral gaps
        &:dir(ltr) { margin-left: rem($entry_lr_space); }
        &:dir(rtl) { margin-right: rem($entry_lr_space); }
      }
    }
  }
}

greeter > box.vertical > stack {
  gitclonewidget > overlay > box.vertical,
  flatpakclonewidget > overlay > box.vertical {
    margin: -36px; // kill hard-coded margins
    padding: 36px;
  }

  // project selections
  > box.vertical > stack > box.vertical > scrolledwindow {
    frame > list {
      // override shared.css
      row.activatable:not(:last-child) {
        border-image: image($foreground_div) 0 0 1 / 0 0 1px;
      }
    }
  }
}

preferences > box.horizontal {
  > box.vertical { // side-pane
    @extend %sidebar_template;

    > entry { margin: 0 4px; } // stop touching L/R edges

    > stacksidebar.sidebar {
      list {
        background-color: transparent;

        // enlarge padding
        row.activatable {
          min-height: rem($widget_size);
          padding: 0 rem(13.3px);
        }
      }
    }
  }

  preferencesgroup {
    > box.vertical > label { // titles
      color: $foreground_tertiary;
      font-weight: 700;
    }

    scrolledwindow > viewport.frame > list {
      // override shared.css
      row.activatable:not(:last-child) {
        border-image: image($base) 0 0 1 / 0 0 1px;
      }
    }
  }
}

// info-bars beneath GtkHeaderBar
window.background.workbench box.message-box.vertical {
  // hide bottom border
  infobar.horizontal { border-bottom-width: 0; }
}

ide {
  // left-pane sidebar?
  &editorsidebar {
    @extend %sidebar_template;
    background-image: image($background);
  }

  // editor-pane headers?
  &layoutstackheader { // damned upstream CSS
    border-bottom: 1px solid $foreground_div;
    box-shadow: inset 0 0 0 26px track($base_fix, 0.05);

    button {
      min-width: 26px;
      min-height: 26px;

      label { padding-bottom: rem($baseline, $sw: 1.0); }
    }
  }
}

dzl {
  &multipaned {
    > box.vertical {
      // draw borders for pane-grip
      border-top: 1px solid $foreground_div;
    }

    // 'open-pages' list
    list.open-pages { background-color: transparent; }

    // no need to highlighten headers
    buildpanel notebook > header.top { background-color: transparent; }
  }

  &menubuttonsection { // child elements in their GtkPopovers
    // kill ugly upstream CSS's parent margins
    &:only-child { margin: -$popover_padding; }
    &:first-child { margin: (-$popover_padding) (-$popover_padding) 0; }
    &:last-child { margin: 0 (-$popover_padding) (-$popover_padding); }
  }

  &preferencesview {
    entry.preferences-search.search {
      // add 1px bottom shadow as a border
      box-shadow: inset 0 -1px $foreground_div;
    }

    stacksidebar.sidebar viewport.frame > list {
      @extend %sidebar_template;
      background-image: image($background);

      row.activatable {
        min-height: rem($widget_size);
        padding: 0 rem(13.3px);
      }
    }
  }
}

headerbar button.dzlmenubutton.popup.toggle {
  &:not(.flat):not(.suggested-action):not(.destructive-action) {
    &:not(.titlebutton):not(.selection-menu):not(.text-button):not(.lock) {
      &:not(.color):not(.image-button) {
        @include radius($radius_2, none);
        padding: 0 rem($txt_button_lr_space / 2);
      }
    }
  }
}

list {
  popover.messagepopover box.popover-content-area &,
  popover.omnibar box.vertical & {
    // list node at the bottom?
    margin: $popover_padding;
    background-color: $background_dark;
  }
}

popover.transfers {
  viewport.frame > list > row { padding: $toolbar_padding; }
}

@if $maj_ver == 3 {
  window.background.workbench > popover.menu { // right-most popover
    > stack { // reduce embedded margins more
      margin: -(12px - 2px) -12px -12px;
    }
  }
}
@else {
  window.background.workbench > popover { // right-most popover
    > contents.menu > stack { // reduce embedded margins more
      margin: -(12px - 2px) -12px -12px;
    }
  }
}

window.workbench > stack.titlebar > stack > headerbar > box.horizontal {
  > button.dzlmenubutton.popup.toggle {
    padding: 0 rem($txt_button_lr_space / 2);

    image { padding: 0 rem($txt_button_lr_space / 2); }
  }

  > box.horizontal > button.popup.toggle { // radial-progress widget
    > widget { color: $foreground_accent; }

    &:checked > widget { color: $foreground_selection; }
  }
}

button.dzlmenubuttonitem.check { // menuitem buttons
  @include transition(reset); // unset transition
  font-weight: 400; // reset weight

  box > image { opacity: $alpha_foreground_2nd; }

  label { padding: rem(5.3px) 0 rem(6.7px); }

  // :checked inside the popover menus!?
  &:checked label { // keep default label color
    color: $foreground_secondary;

    &.dim-label { color: $foreground_secondary; }
  }
}

// /***************
//  * Gnome-Music *
//  ***************/

// side-bar styling
@if $maj_ver == 3 {
  @if $mnr_ver < 23 {
    .side-panel {
      .view {
        &,
        row.activatable { font-weight: 500; }
      }
    }
  }
  @else {
    overlay > stack.background stack grid scrolledwindow.sidebar {
      &:dir(ltr) { border-right: 1px solid $foreground_div; }
      &:dir(rtl) { border-right: 1px solid $foreground_div; }

      list {
        @extend %sidebar_template;
      }
    }
  }
}
@else {
  overlay > stack.background stack grid scrolledwindow.sidebar {
    &:dir(ltr) { border-right: 1px solid $foreground_div; }
    &:dir(rtl) { border-right: 1px solid $foreground_div; }

    list { @extend %sidebar_template; }
  }
}

// right-pane of AlbumWidget
.discsongsflowbox > flowboxchild {
  // increase the vertical spacing
  margin: rem($menuitem_padding, $sw: 1.0) 0;

  check:only-child { // 'songs' selection-mode check
    margin: 0;
    padding: 0;
    animation: none; // unset animations
  }
}

// /******************
//  * Gnome-Contacts *
//  ******************/

// side-bar styling
window grid.titlebar + overlay > grid.horizontal > frame {
  > border {
    &:dir(ltr) { border-width: 0 1px 0 0; }
    &:dir(rtl) { border-width: 0 0 0 1px; }
  }

  > grid scrolledwindow > viewport.frame {
    @extend %sidebar_template;
  }
}

list.contacts {
  @if $maj_ver == 3 {
    @if $mnr_ver < 23 {
      &-view {
        row.activatable { @extend %sidebar_row_template; }
      }
    }
  }

  &-contact-list { // >= 3.27.90
    row.activatable { @extend %sidebar_row_template; }
  }

  &-contact-list { border-top: 1px solid $foreground_div; }
}

list.contacts-view {
  // hide horizontal separator
  separator {
    min-height: 0;
    border-color: transparent;
    background-color: transparent;
  }
}

scrolledwindow.contacts-contact-form {
  // override stock style.css
  background-image: image($base);
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 { // >= 3.31.90
    hdyleaflet > overlay > stack { background-color: $base; }
  }
}
@else {
  hdyleaflet > overlay > stack { background-color: $base; }
}

// /**********
//  * Evince *
//  **********/

window.background {
  > box.vertical > box.horizontal {
    > widget > label { // annotation title
      color: $foreground_fix;
      font-weight: 700;
    }
  }
}

window.background.csd > box.vertical + headerbar.titlebar {
  > box.vertical { // 'Open...' button
    + button:not(.suggested-action):not(.destructive-action) {
      &:not(.titlebutton):not(.selection-menu) {
        &:not(.text-button):not(.lock):not(.color):not(.image-button) {
          padding: 0 rem($txt_button_lr_space);
          @include radius($radius_2, none);
        }
      }
    }
  }
}


// plugin mode in Ephy
window.background > widget > window.background > box.vertical {
  > toolbar.horizontal {
    border-top: 1px solid $foreground_div;
    background-color: $background;
  }

  > scrolledwindow {
    scrollbar {
      &,
      &.overlay-indicator,
      trough {
        background-color: $background;
        @include transition(reset);
      }

      slider { @include transition(reset); }
    }

    evview.content-view.view { @include transition(reset); }
  }
}

// /**************
//  * Gnome-Logs *
//  **************/

window.background > box.vertical box.horizontal {
  list.categories { // side-pane
    @extend %sidebar_template;
    border: none;
    color: $foreground_secondary;

    row.activatable.category { // use side-bar styling
      // paddings in row were hard-coded with crazy large values...
      @extend %sidebar_row_template;

      > label {
        padding-left: 0;
        padding-right: 0;
      }
    }
  }

  > box.vertical > scrolledwindow > viewport.frame > list { // right-pane
    > separator {
      background-color: transparent; // hide single-line separators

      &.compressed-rows-group-separator { // use opaque color
        background-image : image($foreground_div_sld);
      }
    }

    // > 3.25.90
    row.event.activatable {
      color: $foreground_secondary;
      &:hover,
      &:active { color: ; }
      &:not(:disabled) { // for quicker response
        background-image: none;
        transition-duration: $transition_d_short;
        transition-delay: $transition_d_none;
        animation: none;
      }

      label.compressed-entries-label { // hard-coded background-color?
        background-image: image($background_suggestion);
        color: $foreground_selection;
        font-weight: 700;
      }

      &.compressed-row {
        background-image: image($background);
        color: ;
        &:hover {
          background-image: image(mix(, $background, percentage($alpha_track_1 / 2)));
          color: ;
        }
        &:active {
          &, &:focus {
            background-image: image(mix(, $background, percentage($alpha_track_1)));
            color: ;
          }
        }

        &.popover-activated-row {
          background-image: image($background_selection);
          color: $foreground_selection;
        }

        &-header {
          background-image: image($base); // stop highlighting
          color: $label_selection;
          &:not(:disabled) {
            transition-property: opacity, // exclude background-color
                                 border-image,
                                 background-image,
                                 box-shadow;
            transition-duration: $transition_d_short;
            animation: none;
          }
          &:hover {
            background-image: image(mix($label_selection,
                                        $base, percentage($alpha_track_1 / 2)));
          }
          &:active {
            &, &:focus {
              background-image: image(mix($label_selection,
                                          $base, percentage($alpha_track_1)));
              color: $label_selection;
            }
          }

          label.compressed-entries-label {
            background-image: image($background_selection);
            color: $foreground_selection;
            transition-duration: $transition_d_none;
          }
        }
      }
    }
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 {
    button.title-menu-button.flat {
      label.title {
        margin-top: if($ref_weight < 1.0, 0, rem($baseline * 2));
        margin-bottom: 0;
      }

      label.subtitle { margin: 0; }
    }
  }
}
@else {
  button.title-menu-button.flat {
    label.title {
      margin-top: if($ref_weight < 1.0, 0, rem($baseline * 2));
      margin-bottom: 0;
    }

    label.subtitle { margin: 0; }
  }
}

// /******************
//  * Gnome-Terminal *
//  ******************/

terminal-window {
  @if $maj_ver == 3 {
    @if $mnr_ver < 23 {
      // FIXME: In XWayland mode, downstream 'transparency' patch causes
      // solid outer margin artifact when users keep enabling transparent
      // background.
      &.csd.background { background-color: transparent; }

      &.background:not(.csd),
      vte-terminal {
        background-color: if($variant == mixed, $base_inv,
                                                $base);
        color: if($variant == mixed, $foreground_inv, );
      }

      @if $variant == mixed {
        scrollbar {
          background-color: track($base_inv, $alpha_foreground_3rd);

          slider {
            background-color: track($foreground_inv, $alpha_foreground_3rd * $alpha_foreground_3rd);
            &:hover {
              background-color: track($foreground_inv, $alpha_foreground_2nd * $alpha_foreground_3rd);
            }
            &:active { background-color: $foreground_inv; }
          }
        }
      }
    }
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver == 22 {
    window.background:not(.csd) { // preferences window (3.27 < ver < 3.31)
      box.horizontal > frame > scrolledwindow > viewport.frame > list {
        @extend %term_pref_window;
      }
    }
  }
  @if $mnr_ver > 23 {
    window.background.csd { // preferences window (>= 3.31)
      box.horizontal > frame > scrolledwindow > viewport.frame > list {
        @extend %sidebar_template;
        @extend %term_pref_window;

        row.activatable button.flat.popup.toggle {
          @extend %pref_down_arrow;
        }
      }
    }
  }
}
@else {
  window.background.csd { // preferences window (>= 3.31)
    box.horizontal > frame > scrolledwindow > viewport.frame > list {
      @extend %sidebar_template;
      @extend %term_pref_window;

      row.activatable button.flat.popup.toggle {
        @extend %pref_down_arrow;
      }
    }
  }
}

%term_pref_window {
  > row.activatable {
    padding: 0; // unset padding;

    > box.horizontal > label { // indentations
      &:dir(ltr) { margin-left: rem($ref_size, $sw: 1.0); }
      &:dir(rtl) { margin-right: rem($ref_size, $sw: 1.0); }
    }

    > box.horizontal > stack > button.popup.toggle {
      min-width: rem($small_widget);
      min-height: rem($small_widget);
      padding: 0;
      @include radius($radius);
    }
    &:selected { @extend %selected_sidebar_row; }
  }

  > box.horizontal {
    label { color: $foreground_tertiary; } // titles

    > stack > button.image-button {
      min-width: rem($small_widget);
      min-height: rem($small_widget);
      padding: 0;
    }
  }
}

%pref_down_arrow {
  @include button(flat-normal, $text-color: $label_selection);
  &:hover { @include button(flat-hover, $text-color: $label_selection); }
  &:active { @include button(flat-active, $text-color: $label_selection); }
  &:checked { @include button(flat-checked, $text-color: $label_selection); }
}

// /*****************
//  * Gnome-Weather *
//  *****************/

frame#locations-frame > border { // hide double borders
  border: none;
}

frame#weather-page-content-view {
  .linked.osd.stack-switcher {
    background: transparent;

    > button.radio.text-button { // remove underlines
      @include radius(0);
      &:checked {
        &, &:hover {
          border-image: radial-gradient(circle farthest-corner at center,
                                        currentColor 100%,
                                        transparent)
                                        0 0 2 / 0 0 2px;
        }
      }
    }
  }

  button.osd {
    min-width: rem($widget_size);
    min-height: rem($widget_size);
    padding: rem($txt_button_lr_space / 2);
    @include radius($radius);
  }

  frame#weekly-forecast-frame { background: transparent; }
}

frame#weather-page-content-view { // condition-specific
  @each $_condition,
        $_label_1_color,
        $_label_2_color,
        $_frame_mask,
        $_label_alpha,
        $_mask_alpha,
        $_mix_pct in
  (clear,
    $foreground_fix, $foreground_selection, $foreground_selection, $alpha_foreground_3rd, $alpha_track_1, 100%),
  (few-clouds,
    $foreground_fix, $foreground_selection, $foreground_selection, $alpha_foreground_3rd, $alpha_track_1, 10%),
  (showers,
    $foreground_selection, $foreground_fix, $foreground_fix, $alpha_foreground_2nd, $alpha_track_1, 50%),
  (showers-scattered,
    $foreground_selection, $foreground_fix, $foreground_fix, $alpha_foreground_2nd, $alpha_track_1, 50%),
  (storm,
    $foreground_selection, $foreground_fix, $foreground_fix, $alpha_foreground_2nd, $alpha_track_1, 50%),
  (overcast,
    $foreground_fix, $foreground_selection, $foreground_inv, $alpha_foreground_2nd, $alpha_foreground_3rd, 75%),
  (fog,
    $foreground_fix, $foreground_selection, $foreground_inv, $alpha_foreground_2nd, $alpha_foreground_3rd, 75%),
  (snow,
    $foreground_selection, $foreground_link, $foreground_selection, $alpha_foreground_3rd, $alpha_track_1, 80%),
  (few-clouds-night,
    $foreground_selection, $foreground_link, $foreground_selection, $alpha_foreground_3rd, $alpha_track_1, 80%),
  (clear-night,
    $foreground_accent_inv, $foreground_selection, $foreground_selection, $alpha_foreground_2nd, $alpha_track_1, 100%) {

    &.weather-#{$_condition} {
      button.radio.text-button,
      button.osd {
        @include button(flat-normal,
                        $text-color: track($_label_1_color, $_label_alpha));
        background-image: none; // disable ink reactions
        box-shadow: none; // unset lines
        &:hover {
          color: #{$_label_1_color};
          @include button(flat-hover, $text-color: $_label_1_color);
        }
        &:active {
          // FIXME: ink reaction can't be rendered smoothly,
          // so fill background instead.
          background-color: track($_label_1_color, $alpha_track_2);
          color: #{$_label_1_color};
          animation: none;
        }
        &:checked {
          @include button(flat-normal, $text-color: $_label_1_color);
        }
      }

      frame#weekly-forecast-frame {
        background-image: image(track($_frame_mask, $_mask_alpha));

        * { color: mix($_label_1_color, $_label_2_color, $_mix_pct); }
      }
    }
  }
}

// /**************
//  * Gnome-Todo *
//  **************/

window.org-gnome-Todo headerbar > box.horizontal {
  // 'new-list' text-button
  > button.toggle.popup {
    &:not(.suggested-action):not(.destructive-action) {
      &:not(.titlebutton):not(.selection-menu) {
        &:not(.text-button):not(.lock):not(.color):not(.image-button) {
          @include radius($radius_2, none);

          > label { padding: 0 rem($txt_button_lr_space / 2); }
        }
      }
    }
  }
}

@if $maj_ver == 3 {
  window > popover > stack > grid > button.text-button {
    // prevent unwanted truncation of drop-shadows
    margin: 2px 6px 12px;
  }
}
@else {
  window > popover > contents > stack > grid > button.text-button {
    // prevent unwanted truncation of drop-shadows
    margin: 2px 6px 12px;
  }
}

// /************
//  * Gtk-Demo *
//  ************/

.background.csd > box.horizontal > frame > scrolledwindow {
  // side-bar styling
  @extend %sidebar_template;

  treeview.view {
    @extend %sidebar_treeview;
    &:selected:last-child {
      &:dir(ltr) { @include radius(0 $radius $radius 0); }
      &:dir(rtl) { @include radius($radius 0 0 $radius); }
    }
  }
}

// /***************
//  * Gnome-Disks *
//  ***************/

.background.csd > box.vertical > paned.horizontal > scrolledwindow,
.background.solid-csd > box.vertical > paned.horizontal > scrolledwindow {
  // side-bar styling
  @extend %sidebar_template;

  treeview.view {
    @extend %sidebar_treeview;
    &:selected:last-child {
      &:dir(ltr) { @include radius(0 $radius $radius 0); }
      &:dir(rtl) { @include radius($radius 0 0 $radius); }
    }
  }
}

// /************************
//  * Gnome-Control-Center *
//  ************************/

// users section
stack > box.vertical widget overlay grid.horizontal > stack {
  // prevent unwanted truncation of shadows
  padding: $shadow_margin_3;
}

// carousel widgets
.carousel-arrow-container.bottom.horizontal {
  // prevent double density border
  margin-bottom: -1px;
}

button.carousel-item.flat.menu.radio:focus {
  // outlines cause unwanted region-violations on avatar GtkImages,
  // so let's hide them
  outline-width: 0;
}

scrolledwindow.view > viewport.frame > stack { // left-pane
  > list, // > 3.25.90
  > box.vertical > entry.search + list { // > 3.33.90
    @extend %sidebar_template;

    > row.activatable {
      padding: 0; // unset padding
      color: $foreground_secondary;
      font-weight: 500;

      image.dim-label { opacity: $alpha_foreground_2nd; } // tone up icons

      label,
      image { color: $foreground_secondary; }

      &:hover,
      &:active {
        color: ;

        label,
        image { color: ; }
      }

      &:selected {
        &:dir(ltr) { @include radius(0 $radius $radius 0); }
        &:dir(rtl) { @include radius($radius 0 0 $radius); }

        &, &:focus { outline-width: 0; } // unset focus outlines

        &, &:hover {
          background-color: $background_tracker;
          color: $label_selection;

          label,
          image { color: $label_selection; }
        }
      }
    }
  }
}

dialog.background.csd {
  > headerbar.titlebar {
    > label:not(.title):not(.subtitle) {
      color: if($variant == mixed, $foreground_inv, );
      font-weight: 700;
    }
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 {
    flowboxchild > overlay > image + button.image-button.osd.remove-button {
      // subtract app's CSS T/B padding
      min-height: calc(#{rem($widget_size)} - 1px * 2);
    }
  }
}
@else {
  flowboxchild > overlay > image + button.image-button.osd.remove-button {
    // subtract app's CSS T/B padding
    min-height: calc(#{rem($widget_size)} - 1px * 2);
  }
}

// /****************
//  * Dconf-Editor *
//  ****************/

.dconf-editor {
  > headerbar.titlebar > box.pathbar { // legacy
    min-height: $icon_size;
    margin: $toolbar_padding 0;
    padding: 0 rem($menuitem_padding);

    > button {
      min-height: $icon_size;
      margin: $toolbar_padding 0;
      padding: 0;
      @include radius($radius_2);

      > .item {
        @if $maj_ver == 3 {
          @if $mnr_ver < 21 { margin: (-$toolbar_padding) 0; }
          @else { margin: 0; }
        }
        @else { margin: 0; }
        padding: 0 rem($menuitem_padding);
        border: 0 none transparent;
        color: if($variant == mixed, $foreground_inv_secondary, $foreground_secondary);
        font-weight: 500;
      }

      &:hover,
      &:active,
      &:checked,
      &.active { // '.active' class = :checked class
        color: if($variant == mixed, $foreground_inv, );

        > .item { color: if($variant == mixed, $foreground_inv, ); }
      }
      &:disabled {
        color: if($variant == mixed, $foreground_dis_inv, $foreground_dis);

        > .item { color: if($variant == mixed, $foreground_dis_inv, $foreground_dis); }
      }
    }

    // slash symbols
    > label {
      @if $maj_ver == 3 {
        @if $mnr_ver < 23 {
          color: if($variant == mixed, $foreground_inv_tertiary, $foreground_tertiary);
        }
        @else { // hack for stock dconf-editor.css
          @if $variant == mixed {
            &:not(:backdrop) { text-shadow: 1px 0 $foreground_inv_tertiary; }
          }
        }
      }
      @else {
        @if $variant == mixed {
          &:not(:backdrop) { text-shadow: 1px 0 $foreground_inv_tertiary; }
        }
      }
    }
  }

  list.properties-list > row.activatable {
    &:hover,
    &:active { // unset hover/active effects
      background-image: none;
      animation: none;
    }
  }

  list.keys-list { // >= 3.27.91
    > grid.horizontal > separator,
    > grid.vertical > label.header-label + separator { // hide separators
      all: unset;
    }

    > row.key-row:not(:first-child) { // move separator lines into child rows
      border-top: 1px solid $foreground_div;
    }

    > grid.vertical { // grid node for headers
      background-color: $background;

      // increase title height
      label.header-label { min-height: rem($widget_size); }
    }
  }

  @if $maj_ver == 3 { // >= 3.31.90
    @if $mnr_ver > 23 {
      headerbar box.centerwidget { @extend %dconf_pathbar_box; }

      &.maximized box.centerwidget box.pathbar {
        @extend %dconf_maxd_pathbar_box;
      }
    }
  }
  @else {
    headerbar box.centerwidget { @extend %dconf_pathbar_box; }

    &.maximized box.centerwidget box.pathbar {
      @extend %dconf_maxd_pathbar_box;
    }
  }

}

%dconf_pathbar_box {
  box.pathbar button { // stock CSS has 6px T/B margins!?
    &:not(.flat):not(.suggested-action):not(.destructive-action) {
      &:not(.titlebutton):not(.selection-menu):not(.text-button) {
        &:not(.lock):not(.color):not(.image-button) {
          min-height: rem($ref_size, $sw: 1.0); // shrink height
        }
      }
    }

    label.item {
      margin: -6px 0; // compensate unneeded parent T/B margns
      // mask stock 3px border indicators
      border-image: if($variant == mixed, image($background_dark_inv),
                                          image($background_dark))
                      0 0 1 / 0 0 1px stretch;

      &:backdrop {
        border-image: if($variant == mixed, image($background_inv), image($background))
                        0 0 1 / 0 0 1px stretch;
      }
    }

    &:hover:not(.active) label.item {
      color: if($variant == mixed, $foreground_inv, );
      box-shadow: inset 0 -2px if($variant == mixed,
                                 track($foreground_inv, $alpha_track_out),
                                 track(, $alpha_track_out));
    }

    &.active label.item { // redraw underline indicators
      color: if($variant == mixed, $foreground_inv, );
      box-shadow: inset 0 -2px $background_selection;
    }
  }
}

%dconf_maxd_pathbar_box {
  // this isn't perfect, but covering 99% unneeded borders at least...
  border-image: if($variant == mixed, image($background_dark_inv), image($background_dark))
                  0 0 2 / 0 0 2px stretch;
  background-image: if($variant == mixed, image($background_dark_inv),
                                          image($background_dark));
  &:backdrop {
    border-image: if($variant == mixed, image($background_inv), image($background))
                    0 0 2 / 0 0 2px stretch;
    background-image: if($variant == mixed, image($background_inv),
                                            image($background));
  }

  label,
  image { color: if($variant == mixed, $foreground_inv_secondary, $foreground_secondary); }

  button:hover label.item,
  button.active label.item { color: if($variant == mixed, $foreground_inv, ); }

  > label { color: if($variant == mixed, $foreground_inv_tertiary, $foreground_tertiary); }
}

// /*******************
//  * Gnome-Documents *
//  *******************/

window.background > grid.horizontal.titlebar {
  // search-bar revealer
  @if $maj_ver == 3 {
    box.vertical > headerbar + searchbar { background-color: $background_dark; }
  }
  @else {
    box.vertical > headerbar + searchbar > revealer > box {
      background-color: $background_dark;
    }
  }
}

// /********************
//  * Gnome-Characters *
//  ********************/

// side-pane styling
scrolledwindow > viewport.frame list.categories {
  @extend %sidebar_template;

  > row.category.activatable {
    font-weight: 500;
    &:selected {
      &:dir(ltr) { @include radius(0 $radius $radius 0); }
      &:dir(rtl) { @include radius($radius 0 0 $radius); }

      &, &:focus { outline-width: 0; } // unset focus outlines

      &, &:hover {
        background-color: $background_tracker;
        color: $label_selection;

        image.category-icon,
        label.category-label { color: $label_selection; }
      }
    }
  }
}

// right-pane styling
scrolledwindow.character-list-scroll {
  > scrollbar { // always use light-variant
    background-color: transparent;

    slider {
      background-color: track($foreground_fix_tertiary, $alpha_foreground_3rd);
      &:hover {
        background-color: track($foreground_fix_secondary, $alpha_foreground_3rd);
      }
      &:active { background-color: $foreground_fix; }
      &:disabled { opacity: $alpha_foreground_bdp; }
    }

    &.overlay-indicator {
      &:not(.dragging):not(.hovering) slider {
        background-color: track($foreground_fix_tertiary, $alpha_foreground_3rd);
      }
    }
  }
}

// /******************
//  * Gnome-Software *
//  ******************/

// get more uniformity for all 'All', 'Installed', 'Updates' buttons
buttonbox.linked > button.toggle.toolbar-primary-buttons-software {
  &:first-child,
  &:last-child,
  &:not(:first-child):not(:last-child) {
    min-height: rem($widget_size);
    border: none;
    @include radius(0);
  }

  min-width: rem($widget_size * 3);
  box-shadow: inset 0 -1px $background_tracker_out;
  &:not(:hover):not(:active):not(:checked):not(:disabled) {
    color: if($variant == mixed, $foreground_inv_secondary, $foreground_secondary);
  }
  @if $variant == mixed {
    @include button(flat-normal, $text-color: $foreground_inv);
    @include ink-reaction(
      normal, $fc: $foreground_inv, $tr: ink-normal-dec);
    &:hover { @include button(flat-lined-hover, $text-color: $foreground_inv); }
    &:active {
      @include button(flat-active, $text-color: $foreground_inv);
      @include ink-reaction(
        active-dec, $fc: $foreground_inv, $tr: ink-active-dec);
    }
    &:disabled {
      @include button(flat-disabled, $text-color: $foreground_inv);
    }
    &:checked {
      @include button(flat-lined-checked, $text-color: $label_selection_inv);
      &:hover { @include button(flat-hover, $text-color: $label_selection_inv); }
    }
  }
  @else {
    @include button(flat-normal, $text-color: );
    @include ink-reaction(normal, $fc: , $tr: ink-normal-dec);
    &:hover { @include button(flat-lined-hover, $text-color: ); }
    &:active {
      @include button(flat-active, $text-color: );
      @include ink-reaction(active-dec, $fc: , $tr: ink-active-dec);
    }
    &:disabled {
      @include button(flat-disabled, $text-color: );
    }
    &:checked {
      @include button(flat-lined-checked, $text-color: $label_selection);
      &:hover { @include button(flat-hover, $text-color: $label_selection); }
    }
  }

  > box.horizontal > label.text-button {
    border: none;
    background: none;
    color: if($variant == mixed, $foreground_inv_secondary, $foreground_secondary);
    font-weight: 500;
  }

  &:hover,
  &:active {
    color: if($variant == mixed, $foreground_inv, );

    > box.horizontal > label.text-button {
      color: if($variant == mixed, $foreground_inv, );
    }
  }

  &:checked {
    &, &:hover {
      color: if($variant == mixed, $label_selection_inv, $label_selection);

      > box.horizontal > label.text-button {
        color: if($variant == mixed, $label_selection_inv, $label_selection);
      }
    }
  }

  > box.horizontal > label.counter-label {
    margin: 2px 0; // make slight T/B spaces
    font-weight: 700;
  }
}

window.background > box.vertical > overlay > stack > widget > stack {
  // "Installed" stack
  > box.vertical > scrolledwindow > viewport.frame > widget > list {
    background-color: $background; // override $base_color

    // use asymmetrical separators
    > separator {
      &:dir(ltr) { border-left: $icon_size * 6 solid transparent; }
      &:dir(rtl) { border-right: $icon_size * 6 solid transparent; }
    }
  }

  // "Updates" stack
  widget > box.vertical.app-list {
    // override $base_color
    background-image: image($background);

    > box.vertical > list { background-color: $background; }

    // use asymmetrical separators
    separator {
      &:dir(ltr) { border-left: $icon_size * 6 solid transparent; }
      &:dir(rtl) { border-right: $icon_size * 6 solid transparent; }
    }
  }
}

// sidebar-pane styling
scrolledwindow.category-sidebar.frame > viewport.frame > list {
  @extend %sidebar_template;
  margin-top: -4px; // hide weird header-gap

  > row.activatable {
    color: $foreground_secondary;
    font-weight: 500;
    &:hover {
      background-color: $background_tracker;
      color: ;
    }
    &:selected { @extend %selected_sidebar_row; }
  }
}

%gnome-software_round_button,
button.round-button { // categories expander button
  // > 3.25.90, dropped from upstream CSS
  min-height: 32px;
  min-width: 32px;
  padding: 0;
  border: 0 none transparent;
  @include radius($radius);
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 { // >= 3.32.0, origin-box container
    window.background.csd > headerbar.titlebar > box.horizontal {
      > label.dim-label + button.popup.toggle {
        @extend %origin_box_button; // enforce text-and-image-button styling
      }
    }
  }
}
@else {
  window.background.csd > headerbar.titlebar > box.horizontal {
    > label.dim-label + button.popup.toggle { @extend %origin_box_button; }
  }
}

%origin_box_button {
  &:not(.flat):not(.text-button):not(.image-button) {
    &:dir(ltr), &:dir(rtl) { // specificity bump
      @include radius($radius_2, none);
      padding: 0 rem($txt_button_lr_space / 2);

      label,
      image { padding: 0 rem($txt_button_lr_space / 2); }
    }
  }
}

// /****************
//  * Gnome-Photos *
//  ****************/

.photos-entry-tag { @extend .entry-tag; }

headerbar.titlebar > widget > stack > button:not(.flat) {
  &:not(.suggested-action):not(.destructive-action) {
    &:not(.titlebutton):not(.selection-menu) {
      &:not(.text-button):not(.lock):not(.color):not(.image-button) {
        // revert to image-text-button
        @include radius($radius_2, none);

        image {
          &:dir(ltr) { padding-left: rem($txt_button_lr_space); }
          &:dir(rtl) { padding-right: rem($txt_button_lr_space); }
        }

        label {
          &:dir(ltr) { padding-right: rem($txt_button_lr_space); }
          &:dir(rtl) { padding-left: rem($txt_button_lr_space); }
        }
      }
    }
  }
}

// /******************
//  * Gnome-Calendar *
//  ******************/

// 'year-view' sidebar
stack.view > calendar-view.year-view > box.vertical {
  background-color: $background;

  > stack { // unset presets
    > box.sidebar,
    > scrolledwindow > viewport.frame > list.sidebar {
      border: none;
      background-color: transparent;
      box-shadow: none;
    }
  }

  // enforce action-button styling for 'Add event...' button
  > button.text-button {
    @extend %action-area-button;

    // add missing borders
    &:dir(ltr) { border-left: 1px solid $foreground_div; }
    &:dir(rtl) { border-right: 1px solid $foreground_div; }
  }
}

dialog.background {
  > box.dialog-vbox.vertical > grid.horizontal > revealer > box > box {
    // GcalTimeSelector buttons
    > button.popup.toggle {
      // prevent truncated drop-shadows
      margin: $shadow_margin_3;
    }
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 {
    // for weird GtkButton with mis-halign-ed search icon
    stack.suggestionbutton > button > image {
      &:dir(ltr) {
        padding-left: calc(#{rem($widget_size)} / 2 - 0.5px
                      - (#{$icon_size} / 2));
      }
      &:dir(rtl) {
        padding-right: calc(#{rem($widget_size)} / 2 - 0.5px
                       - (#{$icon_size} / 2));
      }
    }
  }
}
@else {
  stack.suggestionbutton > button > image {
    &:dir(ltr) {
      padding-left: calc(#{rem($widget_size)} / 2 - 0.5px
                    - (#{$icon_size} / 2));
    }
    &:dir(rtl) {
      padding-right: calc(#{rem($widget_size)} / 2 - 0.5px
                     - (#{$icon_size} / 2));
    }
  }
}

// /*****************
//  * Gnome-Recipes *
//  *****************/

window.background > box.vertical > overlay > revealer.top + stack {
  margin-top: -1px; // hide weird frame
  background-color: $background;
}

window.background > box.vertical > overlay > stack > box.vertical {
  > scrolledwindow > viewport.frame {
    box.vertical > label.heading { color: $foreground_tertiary; }
  }
}

window.background > box.vertical > overlay > stack > box.horizontal {
  > stack > box.horizontal > scrolledwindow > viewport.frame {
    // right-pane scrolled-window
    > box.vertical {
      > label.heading { color: $foreground_tertiary; }
    }

    // left-pane sidebar
    > list {
      @extend %sidebar_template;
      &:dir(ltr) { border-right: 1px solid $foreground_div; }
      &:dir(rtl) { border-left: 1px solid $foreground_div; }

      > row.activatable {
        margin: -1px 0; // kill stock CSS's border settings
        padding: 0;
        color: $foreground_secondary;

        &, &:focus { outline-width: 0; } // unset focus outlines

        > label.sidebar {
          color: $foreground_secondary;
          font-weight: 500;
          // FIXME: outset 1px solid shadows for covering ugly hard-coded
          // separators
          box-shadow: 0 -1px $background;
        }

        &:hover {
          &, > label.sidebar { color: ; }
        }
        &:active,
        &:selected {
          &, &:hover {
            background-color: $background_tracker;

            &, > label.sidebar { color: $label_selection; }
          }
        }
      }
    }
  }
}

// tiles view buttons
button.tile.view { // damned stock CSS
  flowbox > flowboxchild > & {
    &:hover { box-shadow: inset 0 0 0 9999px track(, $alpha_track_1); }
    &:active { box-shadow: inset 0 0 0 9999px track(, $alpha_track_2); }
  }

  box > grid > & {
    &:hover {
      box-shadow: inset 0 0 0 9999px if($variant != dark,
                                        track($foreground_inv, $alpha_track_1),
                                        track(, $alpha_track_1));
    }
    &:active {
      box-shadow: inset 0 0 0 9999px if($variant != dark,
                                        track($foreground_inv, $alpha_track_2),
                                        track(, $alpha_track_2));
    }
  }

  &.recipe {
    &:hover,
    &:active { box-shadow: none; }

    overlay.recipe > image {
      opacity: if($variant != dark, 1.0, $alpha_osd);
      transition-property: opacity,
                           box-shadow;
      transition-timing-function: $transition_t_dec;
      transition-duration: $transition_d_long;
    }

    &:hover,
    &:active {
      overlay.recipe > image { opacity: if($variant != dark, $alpha_osd, 1.0); }
    }
  }
}

// Note box
box.note > label { font-weight: 700; } // title

label.content.note { color: $foreground_fix; } // enforce dark label color

// title and author box
overlay.recipe > image + box {
  margin-bottom: 6px; // make room from bottom edge of images
  opacity: $alpha_osd;
  &:dir(ltr) {
    margin-right: 12px;

    box,
    label { // labels also have solid background
      &.name.recipe { border-top-right-radius: $radius_4; }
    }

    label.author.recipe { border-bottom-right-radius: $radius_4; }
  }
  &:dir(rtl) {
    margin-left: 12px;

    box,
    label {
      &.name.recipe { border-top-left-radius: $radius_4; }
    }

    label.author.recipe { border-bottom-left-radius: $radius_4; }
  }
}

// /***************
//  * Gnome-Usage *
//  ***************/

// FIXME: why was 'adwaita.css' used for all user-themes? :/
widget {
  &#PROCESSOR,
  &#MEMORY {
    list {
      row {
        margin: -1px; // kill ugly parent borders
        border: 1px solid $foreground_div_sld;

        &.max {
          color: $foreground_fix; // enforce dark foreground
          // FIXME: we can't override the salmon-pinky background
          // background-image: image($destructive_color);
          // border: 1px solid $destructive_color;
        }
      }

      // kill ugly separators
      separator.list {
        box-shadow: inset 0 0 0 1px $foreground_div_sld;
      }
    }
  }

  &#STORAGE {
    list {
      @extend %sidebar_template;
      margin: -1px; // kill ugly borders

      row.activatable {
        color: $foreground_secondary;
        &:hover,
        &:active { color: ; }
      }

      row:not(.activatable) { // top-most header row
        color: $foreground_tertiary;
        box-shadow: inset 0 -1px $foreground_div_sld;
      }

      // mask other ugly separators
      separator.list { box-shadow: inset 0 0 0 1px $background; }
    }
  }
}

%graph_switcher {
  background-image: none;
  color: $foreground_secondary;
  font-weight: 500;
  &:hover { // use opaque
    background-image: image(mix($background, , percentage($alpha_foreground_2nd)));
    color: ;
  }
  &:active,
  &:checked { // use opaque
    background-image: image( // use outline-track alpha
                        mix($background_selection, $background, percentage($alpha_track_out)));
    color: $label_selection;
    animation: none;
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver < 23 {
    graph-switcher-button.toggle { @extend %graph_switcher; }
  }
  @else {
    button.flat.graph-switcher { // >= 3.30
      @extend %graph_switcher;
    }
  }
}
@else {
  button.flat.graph-switcher { @extend %graph_switcher; }
}

box.speedometer {
  // circular progress should be drawn with our $background_accent
  // (progress bit still looks a bit brighter than we expected though)
  &-outter { background-image: image($background_accent); }

  &-inner { box-shadow: inset 0 0 0 5px track($background_accent, $alpha_track_out); }

  &-content-area label { color: $foreground_accent; }
}

// /*********
//  * Glade *
//  *********/

GladeWindow {
  headerbar#headerbar.titlebar {
    button#recent-button.popup.toggle { // down-arrow button
      min-width: $icon_size;
      @include radius($radius_2);
    }
  }

  box.horizontal scrolledwindow.frame + button.image-button {
    @include radius($radius_2);
  }
}

// /********
//  * GHex *
//  ********/

menubar#MainMenu + box.vertical > widget, // main window
menubar#MainMenu + widget { // 'Add view' window(s)
  > widget {
    &:not(.view) { // left-most pane
      color: $foreground_tertiary;
    }
  }
}

// /***************
//  * Gnome Boxes *
//  ***************/

%child_styling {
  border-radius: 0;
  &:hover { box-shadow: inset 0 0 0 9999px $background_tracker; }
  &:first-child { @include radius($radius_2 $radius_2 0 0, none); }
  &:last-child { @include radius(0 0 $radius_2 $radius_2, none); }
  &:not(:first-child):not(:only-child) { margin-top: -1px; }
}

window.background > overlay > stack.content-bg {
  &,
  stack box.content-bg { background-image: image($background); }
}

// parent container of button nodes
box.boxes-menu.vertical > box.vertical { background-color: $base; }

// child elements
row.boxes-menu-row { @extend %child_styling; }

button.boxes-menu-row {
  @extend %child_styling;
  font-weight: 700;
  &:not(:disabled):not(:hover) { box-shadow: none; }

  box.boxes-menu.vertical > & {
    margin-bottom: -1px;
    @include radius($radius_2 $radius_2 0 0, none);
  }
}

// /************
//  * Shotwell *
//  ************/

// FIXME: treeview node styling is locked, there's no way to override
window.background > box.vertical > paned.horizontal {
  > paned.vertical > box.vertical + separator {
    @if $variant == dark { background-color: $foreground_div_sld; }

    + frame {
      background-color: $background_dark;

      > border { border: unset; } // unset unneeded frame
    }
  }

  // inline-toolbar?
  > box.vertical > revealer > toolbar.bottom-toolbar {
    border-top: 1px solid $foreground_div;
    background-color: $background_dark;
    &:dir(ltr) { padding-right: $toolbar_padding * 2; }
    &:dir(rtl) { padding-left: $toolbar_padding * 2; }
  }
}

// /****************
//  * Eye of Gnome *
//  ****************/

box#eog-thumb-nav { // image gallery
  iconview.view {
    @include radius(0, none);
    &:selected {
      background-color: $background_tracker;
      color: $label_selection;
      box-shadow: inset 0 4px $background_selection;
    }
  }
}

// /*************
//  * Evolution *
//  *************/

window.background > box.vertical > box.horizontal + paned.horizontal > widget {
  > toolbutton > button.image-button.toggle {
    // damned 24px icons are not allocated at center of the parent button node
    // without meaningless padding... 
    min-width: $icon_size * 1.5;
    min-height: $icon_size * 1.5;
    padding: if($ref_weight < 1.0, $icon_size / 4, $icon_size / 2);
  }
}

infobar > revealer > box.horizontal > box + buttonbox {
  > button.flat.image-button { @include radius($radius_2); }

  > button + box.linked > button {
    &:not(.destructive-action):not(.suggested-action) {
      &.text-button,
      &.toggle {
        min-width: 0; // FIXME: force loading 16px arrow images
        padding: 0 rem($txt_button_lr_space / 2);
      }
    }
  }
}

// /****************
//  * Gnome Clocks *
//  ****************/

%hdyviewswitcher {
  button.radio {
    @include radius(0);
    border: none;
    background-image: none; // kill ink-reactions
    &:active,
    &:checked {
      background-image: none;
      &:hover { @include button(checked-hover); }
    }

    // override  app's padding values
    box.horizontal.wide { margin: -8px 0; }

    box.vertical.narrow {
      // override  app's padding values
      margin: -5px 0 -7px;

      label {
        margin: if($ref_weight < 1.0, -2px 0 0,
                                      -1px 0 0);
      }

      image {
        margin: if($ref_weight < 1.0, (-5px + 2px) 0 -2px,
                                      0 0 -1px);
      }
    }

    label {
      &,
      &:active { font-weight: 500; }
    }
  }
}

@if $maj_ver == 3 {
  @if $mnr_ver > 23 {
    headerbar hdyviewswitcher { @extend %hdyviewswitcher; }
  }
}
@else {
  headerbar hdyviewswitcher { @extend %hdyviewswitcher; }
}
