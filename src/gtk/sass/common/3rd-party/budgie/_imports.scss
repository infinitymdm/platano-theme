
@import 'panel';
@import 'popover';
@import 'menu';
@import 'raven';
@import 'widgets/clock';

// popover of sound-indicator styling
window.sound-popover.background box.horizontal {
  > button.flat.image-button { // horizontal layout
    &:first-child { // '-' button
      @include button(flat-normal, $tc: $color_fg);
      @include ink-reaction(normal, $fc: $color_err, $tr: ink-normal-dec);
      &:hover { @include button(flat-hover, $tc: $color_err); }
      &:active {
        @include button(flat-active, $tc: $color_err);
        @include ink-reaction(active-dec, $fc: $color_err, $tr: ink-active-dec);
      }
    }

    &:last-child { // '+' button
      @include button(flat-normal, $tc: $color_fg);
      @include ink-reaction(normal, $fc: $color_bg_sccs, $tr: ink-normal-dec);
      &:hover { @include button(flat-hover, $tc: $color_bg_sccs); }
      &:active {
        @include button(flat-active, $tc: $color_bg_sccs);
        @include ink-reaction(active-dec, $fc: $color_bg_sccs, $tr: ink-active-dec);
      }
    }
  }
}

@import 'nightlight';
@import 'places';

// keyboard indicator applet
.top,
.bottom {
  widget.keyboard-indicator >  widget > box.horizontal {
    > widget > image {
      margin-top: rem(-0.7px, $sw: 1.0);
      &:dir(ltr) { padding: $baseline 0 0 3px; }
      &:dir(rtl) { padding: $baseline 3px 0 0; }
    }

    > stack > widget.keyboard-label > label {
      margin-top: rem(-0.7px, $sw: 1.0);
      &:dir(ltr) { padding: $baseline 3px rem($baseline, $sw: 1.0) 0; }
      &:dir(rtl) { padding: $baseline 0 rem($baseline, $sw: 1.0) 3px; }
    }
  }
}

// separator applet
.budgie-panel > box > widget > separator {
  background-color: $color_fg_panel_inv;
}

// workspace-switcher applet
widget > box.workspace-switcher {
  // main container
  > box.workspace-layout {
    widget.workspace-item {
      @if $variant == mixed {
        background-image: image(track($color_fg_inv, $alpha_foreground_bdp));
      }
      @else {
        background-image: image(track($color_fg, $alpha_foreground_bdp));
      }
      background-repeat: no-repeat;
      transition-duration: $transition_d_none; // for underline-indicators

      &.current-workspace { background-image: image($color_bg_sel); }

      @each $position, $_size in (top, calc(100% - 4px) 3px),
                                 (bottom, calc(100% - 4px) 3px),
                                 (left, 3px calc(100% - 4px)),
                                 (right, 3px calc(100% - 4px)) {
        .#{$position} & {
          background-position: #{$position} center;
          background-size: #{$_size};
        }
      }

      button.workspace-icon-button {
        min-width: $icon_size;
        min-height: $icon_size;
        padding: 4px;
        @include radius($r_2, none);

        > image { opacity: $alpha_foreground_3rd; }

        &:hover,
        &:active {
          @if $maj_ver == 3 { -gtk-icon-effect: highlight; }
          @else { -gtk-icon-filter: brightness(1.2); }

          > image { opacity: $alpha_foreground_2nd; }
        }
      }

      // counter
      label.workspace-more-label {
        font-weight: 700;
        opacity: $alpha_foreground_3rd;
      }

      &.current-workspace {
        button.workspace-icon-button {
          > image { opacity: 1.0; }

          &:hover,
          &:active {
            @if $maj_ver == 3 { -gtk-icon-effect: highlight; }
            @else { -gtk-icon-filter: brightness(1.2); }
          }
        }

        label.workspace-more-label { opacity: 1.0; }
      }
    }
  }

  // 'plus' button
  button.image-button.workspace-add-button { // expanded?
    min-width: $icon_size;
    min-height: $icon_size;
    padding: 4px;
    @include radius(0);
    @if $variant == mixed { @extend %inv-action-area-button; }
    @else { @extend %action-area-button; }
  }
}

window.budgie-popover.workspace-popover {
  $max_children_per_line: 4;
  $requested_width: 150px;

  box.workspace-popover-button-box {
    > button.flat { // 'Rename' and 'Remove'
      min-width: $requested_width;
      font-weight: 500;
    }

    // hide unneeded separators
    > separator.horizontal {
      min-height: 0;
      margin: 0;
      background-color: transparent;
    }
  }

  flowboxchild { // apps icon grid
    button.flat:not(:active) {
      transition-property: opacity,
                           border-color,
                           border-image,
                           background-color,
                           background-image,
                           box-shadow,
                           icon-shadow;
      transition-timing-function: $transition_t_dec;
      transition-duration: $transition_d_standard;
    }

    image {
      padding: ($requested_width - $icon_size * ($max_children_per_line + 1))
               / ($max_children_per_line * 2)
               0;
    }
  }
}

// show-desktop applet
.budgie-panel {
  // specificity bump to prevent conflicts
  > box > widget > button.flat:not(.raven-trigger):not(.budgie-menu-launcher) {
    @extend %budgie_trigger_button;
    @if $variant == mixed {
      @include ink-reaction(normal, $fc: $color_bg_sel, $tr: ink-normal-dec);
      &:active {
        @include button(flat-active, $tc: $color_fg_inv);
        @include ink-reaction(active-dec, $fc: $color_fg_inv, $tr: ink-active-dec);
      }
    }
    &:checked {
      @if $variant == mixed {
        @include button(flat-checked, $tc: $color_lbl_sel_inv);
      }
      @else {
        @include button(flat-checked, $tc: $color_lbl_sel);
      }
    }

    .top &,
    .bottom & { padding: 0 4px; }

    .left &,
    .right & { padding: 2px 0; }
  }
}

// notifications
%budgie_notification_window_base,
.budgie-notification-window,
.budgie-osd-window {
  border-radius: $r_8;
  background-color: transparent;

  .drop-shadow { border-radius: $r_8; }
}

%budgie_notification_window_styling,
.budgie-notification-window .drop-shadow {
  // draw actual backgrounds
  @if $variant == mixed { background-color: track($color_bg_tooltip_inv, $alpha_osd); }
  @else { background-color: track($color_bg_tooltip, $alpha_osd); }
}

.budgie-osd-window .drop-shadow {
  @if $variant == mixed { background-color: track($color_bg_dark_inv, $alpha_osd); }
  @else { background-color: track($color_bg_dark, $alpha_osd); }
  margin: $shadow_margin_3;
}

%budgie_notification,
.budgie-notification,
.budgie-osd {
  background-color: transparent;
  @if $variant == mixed { color: $color_fg_inv; }
  @else { color: $color_fg; }
  
  .notification-title {
    @if $variant == mixed { color: $color_fg_inv_2; }
    @else { color: $color_fg_2; }
    font-size: 110%;
    font-weight: 500;
  }

  .notification-body {
    @if $variant == mixed { color: $color_fg_inv; }
    @else { color: $color_fg; }
    font-size: 90%;
    font-weight: 400;
  }

  .budgie-osd-text {
    @if $variant == mixed { color: $color_fg_inv; }
    @else { color: $color_fg; }
    font-size: 110%;
  }

  progressbar { // mimic level-bar
    min-height: 4px;
    padding: 2px;

    trough {
      background-color: $color_fg_trk_out;
      @if $variant == mixed { color: $color_fg_inv; }
      @else { color: $color_fg; }
    }

    progress { background-color: $color_bg_sccs; }
  }
}

.budgie-notification,
.budgie-osd,
.budgie-session-dialog,
.budgie-polkit-dialog,
.drop-shadow {
  button { // OSD-style buttons
    @if $variant == mixed { @extend %inv-action-area-button; }
    @else { @extend %action-area-button; }

    &.suggested-action,
    &.destructive-action {
      // hide unneeded shadows
      &:not(:disabled) { box-shadow: none; }
    }
  }
}

// alt-tab apps switcher styling
$child_margin: 2px;

window.budgie-switcher-window {
  border-radius: $r_8;
  background-color: transparent;

  // draw actual backgrounds and shadows
  .drop-shadow {
    margin: $shadow_margin_4; // reserve area for shadows
    padding: $budgie_osd_margin $budgie_osd_margin ($budgie_osd_margin / 4);
    border-radius: $r_8;
    @if $variant == mixed { background-color: track($color_bg_dark_inv, $alpha_osd); }
    @else { background-color: track($color_bg_dark, $alpha_osd); }
    box-shadow: $z-depth-4; // raise to level-4

    label.budgie-switcher-title { // bottom label for app titles
      // prepare for tall and dense fonts
      min-height: 13.3px * 2; // use non-scaling unit
      color: if($variant == mixed, $color_fg_inv, $color_fg);
      font-weight: 500;
    }
  }

  flowboxchild { // icon-tiles
    margin: $child_margin;
    @include radius($r_2);
    color: if($variant == mixed, $color_fg_acc_inv_2, $color_fg_acc_2);
    background-color: transparent;
    &:hover,
    &:active {
      background-color: track($color_bg_acc, $alpha_track_1);
      color: if($variant == mixed, $color_fg_acc_inv, $color_fg_acc);
    }
    &:selected { // use the same values with Gnome-Shell
      background-color: track($color_bg_acc, $alpha_track_2);
      color: if($variant == mixed, $color_fg_acc_inv, $color_fg_acc);
      @if $maj_ver == 3 { -gtk-icon-effect: highlight; }
      @else { -gtk-icon-filter: brightness(1.2); }
      &:disabled {
        @if $variant == mixed {
          background-color: track($color_fg_inv, $alpha_track_1);
        }
        @else {
          background-color: track($color_fg, $alpha_track_1);
        }
        @if $maj_ver == 3 { -gtk-icon-effect: dim; }
        @else { -gtk-icon-filter: opacity(0.5); }

        &, label { color: if($variant == mixed, $color_fg_dis_inv, $color_fg_dis); }
      }
    }
  }
}

// run-dialog styling
.background.csd.budgie-run-dialog {
  border: none;
  @if $variant == mixed {
    background-color: track($color_bg_dark_inv, $alpha_osd);
  }
  @else {
    background-color: track($color_bg_dark, $alpha_osd);
  }

  // specific 8px rounded corners need decoration
  // radii as well.
  &,
  decoration { @include radius($r_8, none); }

  scrolledwindow {
    margin: 0 $budgie_osd_margin $budgie_osd_margin;
    border: 1px solid if($variant == light, $color_fg_div,
                                            track(white, $alpha_div_2));
    background-color: transparent;

    list {
      background-color: transparent;

      row.activatable {
        background-color: transparent;
        color: if($variant == mixed, $color_fg_inv_2, $color_fg_2);

        .dim-label {
          color: if($variant == mixed, $color_fg_inv_2, $color_fg_2);
          opacity: 1.0;
        }

        &:hover,
        &:active {
          background-color: $color_bg_trk;
          color: if($variant == mixed, $color_fg_inv, $color_fg);

          .dim-label {
            color: if($variant == mixed, $color_fg_inv, $color_fg);
            opacity: 1.0;
          }
        }
      }
    }
  }

  entry.search {
    min-width: $icon_size * 25;
    min-height: rem($widget_size * 1.2);
    margin: $budgie_osd_margin;
    @include radius($r_4 $r_4 0 0, none);
    @if $variant == mixed {
      @include entry(flat-normal, $tc: $color_fg_inv);
      caret-color: $color_fg_inv;
      &:focus { @include entry(flat-focus, $tc: $color_fg_inv); }
      &:disabled { @include entry(flat-disabled, $tc: $color_fg_inv); }

      selection { @extend %selected_items; }
    }
    @else {
      @include entry(flat-normal, $tc: $color_fg);
      caret-color: $color_fg;
      &:focus { @include entry(flat-focus, $tc: $color_fg); }
      &:disabled { @include entry(flat-disabled, $tc: $color_fg); }
    }
    font-size: 110%;

    image {
      @if $variant == mixed {
        &:not(:hover):not(:active) { color: $color_fg_inv_2; }
        &:active { color: $color_bg_inv; }
        &:disabled { color: $color_fg_dis_inv; }
      }
      @else {
        &:not(:hover):not(:active) { color: $color_fg_2; }
        &:active { color: $color_fg; }
        &:disabled { color: $color_fg_dis; }
      }
    }
  }

  scrollbar {
    border: none;
    background: none;

    slider {
      @if $variant == mixed {
        background-color: track($color_fg_inv_3, $alpha_foreground_3rd);
        &:hover {
          background-color: track($color_fg_inv_2, $alpha_foreground_3rd);
        }
        &:active { background-color: $color_fg_inv; }
      }
      &:disabled { opacity: $alpha_foreground_bdp; }
    }
  }
}

// session-dialog and polkit-dialog styling
.budgie-session-dialog,
.budgie-polkit-dialog {
  border-radius: $r_8;
  border-width: 0;
  @if $variant == mixed {
    background-color: track($color_bg_dark_inv, $alpha_osd);
    color: $color_fg_inv;
  }
  @else {
    background-color: track($color_bg_dark, $alpha_osd);
    color: $color_fg;
  }
  font-weight: 700;

  decoration { // composite with drop-shadows
    border-radius: $r_8;
    box-shadow: $z-depth-4;
    &:backdrop {
      box-shadow: $z-depth-2-backdrop;
      transition: none;
    }
  }

  buttonbox.linked > button:not(.flat) {
    border: 2px solid transparent;
    @include radius(0);
    &:first-child {
      @include radius(0 0 0 $r_8);
      border-right-width: 0;
    }
    &:last-child {
      @include radius(0 0 $r_8 0);
      border-left-width: 0;
    }
  }
}

// polkit-dialog specific styling
.budgie-polkit-dialog {
  entry {
    @include radius($r_4 $r_4 0 0, none);
    @if $variant == mixed {
      @include entry(flat-normal, $tc: $color_fg_inv);
      caret-color: $color_fg_inv;
      &:focus {
        @include entry(flat-focus, $tc: $color_fg_inv);
      }
      &:disabled {
        @include entry(flat-disabled, $tc: $color_fg_inv);
      }

      selection { @extend %selected_items; }
    }
    @else {
      @include entry(flat-normal, $tc: $color_fg);
      caret-color: $color_fg;
      &:focus {
        @include entry(flat-focus, $tc: $color_fg);
      }
      &:disabled {
        @include entry(flat-disabled, $tc: $color_fg);
      }
    }
  }

  .message {
    color: if($variant == mixed, $color_fg_inv_2, $color_fg_2);
  }

  .failure {
    color: $color_err;
    font-weight: 700;
  }
}

// raven-controller applet
button.flat.raven-trigger {
  @extend %budgie_trigger_button;

  image { margin: 0 3px; } // add internal spacing

  .left &,
  .right & {
    image { margin: 3px 0; } // add internal spacing
  }
}

// misc settings
.drop-shadow {
  margin: $shadow_margin_4;
  background-color: transparent;
  background-image: none;
  box-shadow: $z-depth-4;
}

// settings-window
window.background.budgie-settings-window.csd {
  > box.horizontal > scrolledwindow > viewport.frame { // left-pane
    &:dir(ltr) { border-right: 1px solid $color_fg_div; }
    &:dir(rtl) { border-left: 1px solid $color_fg_div; }
  }

  box.settings-page.vertical { // right-pane
    // reserve the margin for raised widget's drop-shadows
    box.settings-frame.vertical > grid.horizontal { margin-bottom: 8px; }

    // hide double-borders
    buttonbox.inline-toolbar { border-style: none none solid; }

    frame > box.vertical > overlay { // inline header
      > label.dim-label { // title
        font-size: 110%;
        font-weight: 500;
      }

      > button.popup.suggested-action.toggle { // 'plus' button
        @extend %gnome-software_round_button;
        margin: 8px; // prevent truncated drop-shadow
      }
    }

    frame > box.vertical > list > row {
      &:dir(ltr) { padding-right: 12px; }
      &:dir(rtl) { padding-left: 12px; }

      button.desutructive-action.round-button {
        @extend %gnome-software_round_button;
      }
    }
  }
}

// pixel-saver-applet
%pixel_saver_button {
  min-width: $icon_size;
  min-height: $icon_size;
  padding: 0;
  border: none;
  background: none;
  color: if($variant == mixed, $color_fg_inv, $color_fg);
  @include transition(reset);

  image {
    border-radius: $r;
    background-size: $icon_size $icon_size;
    background-position: center center;
    background-repeat: no-repeat;
  }

  &:hover,
  &:active {
    background: none;
    color: if($variant != light, $color_fg_sel, black);
    @include transition(reset);

    image { -gtk-icon-shadow: none; }
  }

  // hide unneeded button images when Raven widget was shown
  &:disabled image { opacity: 0; }
}

%pixel_saver_button_ink_reaction {
  &:hover image {
    @if $variant != light {
      background-image: image(track($color_fg_sel, $alpha_track_1));
    }
    @else {
      background-image: image(track(black, $alpha_track_1));
    }
  }

  &:active image {
    @if $variant != light {
      background-image: image(track($color_fg_sel, $alpha_track_2));
    }
    @else {
      background-image: image(track(black, $alpha_track_2));
    }
  }
}

%pixel_saver_label_spacing {
  > widget > label {
    &:dir(ltr) { padding-right: 3px; }
    &:dir(rtl) { padding-left: 3px; }
  }
}

.budgie-panel > box > widget > box {
  // FIXME: Ubuntu-budgie has a downstream patch breaking our theming,
  // there's no specific style-classes.
  > button.flat.image-button {
    @extend %pixel_saver_button;
    @extend %pixel_saver_button_ink_reaction;
  }

  &.horizontal {
    @extend %pixel_saver_label_spacing;

    > button.flat.image-button { padding: 0 3px; }
  }
}

.budgie-panel box.titlebar { // Github original applet
  border-radius: 0;
  background: unset;

  > widget > label { // titles
    color: if($variant == mixed, $color_fg_inv, $color_fg);
  }

  > button.image-button.titlebutton {
    @extend %pixel_saver_button;

    &.close {
      &:hover image {
        background-image: image($color_bg_dest);
        color: $color_fg_sel;
      }

      &:active image {
        background-image: image($color_bg_sel);
        color: $color_fg_sel;
      }
    }

    &:not(.close) { @extend %pixel_saver_button_ink_reaction; }
  }

  &.horizontal { // spacing
    @extend %pixel_saver_label_spacing;
    padding: 0 3px;

    > button.image-button.titlebutton { padding: 0 3px; }
  }
}

menuitem.budgie-menubar { // appindicator-applet?
  // app's override seems to set its L/R padding only,
  // so this is NOT the theme-specific issue for me!
  padding: unset; // unset T/B padding as well
  @include radius(0, none); // clear roundness
  &:backdrop { opacity: 1.0; } // unset fade-effect
}

// /*******************
//  * Lightdm-Greeter *
//  *******************/

%greeter_panel_window {
  background-image: image($color_bg_panel);
  background-color: transparent;
  color: if($variant == mixed, $color_fg_inv, $color_fg);
  box-shadow: none;
  font-weight: 700;
  text-shadow: none;

  &.background { background-color: transparent; }

  > * > * { background-color: transparent; } // FIXME: ugly wildcard

  // avoid translucent top-bar
  &.osd { opacity: 1.0; } // >= 2.0.5
}

%greeter_panel_menubar {
  border: none;
  background-color: transparent;
  color: if($variant == mixed, $color_fg_inv, $color_fg);

  &:hover {
    color: if($variant != light, $color_fg_sel, black);
    box-shadow: inset 0 2px $color_bg_sel;

    label,
    image { color: if($variant != light, $color_fg_sel, black); }
  }
}

%greeter_panel_menubar_menuitem {
  // flip underline-indicator vertically
  padding: rem(5.3px, $sw: 1.0) 0;
  @include radius(0, none);
  background-color: transparent;
  &:hover { box-shadow: inset 0 2px $color_bg_sel; }
}

%greeter_panel_menu_menuitem {
  padding: $toolbar_padding rem($entry_lr_space);
  color: $color_fg_2;
  font-weight: 400;
  text-shadow: none;

  label { color: $color_fg_2; }

  &:hover {
    color: $color_fg;

    label { color: $color_fg; }
  }
  &:disabled {
    color: $color_fg_dis;

    label { color: $color_fg_dis; }
  }
}

%greeter_entry {
  min-height: rem($widget_size);
  @include radius($r_4 $r_4 0 0, none);
  font-family: monospace;
  @if $variant == mixed {
    @include entry(flat-normal, $tc: $color_fg_inv);
    caret-color: $color_fg_inv;
    &:focus { @include entry(flat-focus, $tc: $color_fg_inv); }
    &:disabled { @include entry(flat-disabled, $tc: $color_fg_inv); }

    selection { @extend %selected_items; }
  }
  @else {
    @include entry(flat-normal, $tc: $color_fg);
    caret-color: $color_fg;
    &:focus { @include entry(flat-focus, $tc: $color_fg); }
    &:disabled { @include entry(flat-disabled, $tc: $color_fg); }
  }
}

%non_csd_menu {
  margin: unset;
  padding: 1px;
  border-radius: 0;
  border: 1px solid $color_fg_div_sld;
  background-clip: border-box;
}

// gtk-greeter
.lightdm-gtk-greeter {
  // top-panel styling
  #panel_window {
    @extend %greeter_panel_window;

    menubar {
      @extend %greeter_panel_menubar;

      label,
      image {
        padding: 0 rem($menuitem_padding, $sw: 1.0);
        color: if($variant == mixed, $color_fg_inv, $color_fg);
      }

      @if $maj_ver == 3 {
        > menuitem { @extend %greeter_panel_menubar_menuitem; }
      }
      @else {
        > box > menuitem { @extend %greeter_panel_menubar_menuitem; }
      }

      menu menuitem { @extend %greeter_panel_menu_menuitem; }
    }
  }

  // main container
  #login_window,
  #restart_dialog,
  #shutdown_dialog {
    padding: 0;
    border: 0 none transparent;
    background-color: transparent;
    box-shadow: none;

    > box { // set actual raised dialog styling
      margin: $shadow_margin_4;
      border-radius: $r_8;
      box-shadow: $z-depth-4;
      @if $variant == mixed {
        background-color: track($color_bg_dark_inv, $alpha_osd);
        color: $color_fg_inv;
      }
      @else {
        background-color: track($color_bg_dark, $alpha_osd);
        color: $color_fg;
      }
    }

    button:not(.combo) {
      min-height: rem($widget_size * 1.2);
      min-width: rem($widget_size * 1.2);
      padding: 0 rem($txt_button_lr_space * 1.2);
      @if $variant == mixed { @extend %inv_flat_button; }
      @else { @extend %flat_button; }
    }
  }

  @each $node_id_1, $node_id_2, $_color in
  ('#login_window', '#login_button', $color_bg_sgst),
  ('#restart_dialog', '#restart_button', $color_bg_dest),
  ('#shutdown_dialog', '#shutdown_button', $color_bg_dest) {
    #{$node_id_1} button#{$node_id_2} {
      @include button(raised-normal, $c: $_color, $tc: $color_fg_sel_2);
      @include ink-reaction(normal, $fc: $color_fg_sel, $tr: ink-normal-dec);
      &:hover { @include button(raised-hover, $c: $_color, $tc: $color_fg_sel); }
      &:active {
        @include button(raised-active, $c: $color_bg_sel, $tc: $color_fg_sel);
        @include ink-reaction(active-dec, $fc: $color_fg_sel, $tr: ink-active-dec);
      }
      &:checked { @include button(raised-checked); }
      &:disabled {
        @if $variant == mixed {
          @include button(raised-disabled, $tc: $color_fg_inv);
        }
        @else { @include button(raised-disabled, $tc: $color_fg); }
      }
    }
  }

  #login_window {
    button.combo {
      @if $variant == mixed { @extend %inv_combobox; }

      cellview { padding-bottom: 0; }
    }

    entry { @extend %greeter_entry; }

    infobar { // notification revealer
      border: none;
      font-weight: 700;
      font-size: 110%;
      transition: none; // transition causes visual glitches

      &.error,
      &.info { // .info class for XFce4-screensaver
        @if $maj_ver == 3 {
          @if $mnr_ver < 23 { background-color: transparent; }
          @else {
            > revealer > box { background-color: transparent; }
          }
        }
        @else {
          > revealer > box { background-color: transparent; }
        }
      }

      &.error {
        margin: 0 4px; // prevent unwanted overflow
        color: $color_err;
      }

      &.info { color: $color_info; }
    }
  }

  #content_frame { padding-bottom: 14px; }

  #buttonbox_frame {
    padding-top: 8px; // reserve gap between infobar and buttonbox
  }

  // non-CSD context menus
  window.background.popup > menu { @extend %non_csd_menu; }
}

// slick-greeter
$greeter_panel_height: 32px; // pixmap height
$greeter_panel_shadow: 11px; // pixmap shadow region

%greeter_panel_menubar_menuitem_misc {
  padding: 0 rem($entry_lr_space);
  color: if($variant != dark, $color_fg_inv, $color_fg);

  label { color: if($variant != dark, $color_fg_inv, $color_fg); }

  image { color: if($variant != dark, $color_fg_inv, $color_fg); }

  &:hover { box-shadow: inset 0 2px $color_bg_sel; }

  label { margin: 0 2px rem($baseline, $sw: 1.0); }
}

window.background.lightdm {
  // top-panel
  menubar {  // broken
    @extend %greeter_panel_menubar;
    padding-top: ($greeter_panel_height - $greeter_panel_shadow - $icon_size)
                 / 2;
    font-weight: 700;
    text-shadow: none;

    @if $maj_ver == 3 {
      > menuitem {
        @extend %greeter_panel_menubar_menuitem;
        @extend %greeter_panel_menubar_menuitem_misc;
      }
    }
    @else {
      > box > menuitem {
        @extend %greeter_panel_menubar_menuitem;
        @extend %greeter_panel_menubar_menuitem_misc;
      }
    }
  }

  window.background.popup > menu {
    @extend %non_csd_menu;

    menuitem  { @extend %greeter_panel_menu_menuitem; }
  }

  button {
    &:not(.option-button):not(.toggle-button) {
      min-width: $icon_size;
      min-height: $icon_size;
      padding: rem(6.7px, $sw: 1.0);
      @include radius($r);
    }

    &.flat.option-button { // session logo button
      min-width: $icon_size;
      min-height: $icon_size;
      padding: rem(6.7px, $sw: 1.0);
      @include radius($r);
      @if $variant != dark { @extend %inv_flat_button; }
      @else { @extend %flat_button; }

      image { opacity: $alpha_foreground_2nd; }

      &:hover,
      &:active {
        image { opacity: 1.0; }
      }
    }

    &,
    &.toggle-button { // session list rows
      min-width: $icon_size;
      min-height: $icon_size;
      @if $variant != dark { @extend %inv_flat_button; }
      @else { @extend %flat_button; }

      image { opacity: $alpha_foreground_2nd; }

      &:hover,
      &:active,
      &.selected { image { opacity: 1.0; } }
    }

    &.toggle-button {
      padding: 0 rem(13.3px);
      @include radius(0);
      font-weight: 500;

      &.selected { // selected row
        &, &:hover {
          @include button(flat-normal, $tc: $color_fg_sel);
          background-image: image($color_bg_sel);

          image { opacity: 1.0; }
        }
      }
    }
  }

  entry,
  .lightdm-combo entry {
    @extend %greeter_entry;
    @if $variant != dark {
      @include entry(flat-normal, $tc: $color_fg_inv);
      caret-color: $color_fg_inv;
      &:focus { @include entry(flat-focus, $tc: $color_fg_inv); }
      &:disabled { @include entry(flat-disabled, $tc: $color_fg_inv); }
    }

    selection { @extend %selected_items; }
  }

  entry:active { // for spinner
    -gtk-icon-source: -gtk-icontheme('process-working-symbolic');
    animation: spinner 1s linear infinite;
  }

  .lightdm-combo {
    border-radius: 0;
    background-color: transparent;
  }
}

@import 'widgets/imports';