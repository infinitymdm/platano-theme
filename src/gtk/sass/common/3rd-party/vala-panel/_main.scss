// /**************
//  * Vala-Panel *
//  **************/

// That app does not have any position specific style-classes,
// so embed indicators at the bottom of tasklist buttons as default.
window#ValaPanel.background { // solid-mode
  background-color: $color_bg_panel;
  color: if($variant == mixed, $color_fg_inv, $color_fg);

  > decoration { all: unset; } // unset root decoration

  widget.-vala-panel-background > separator { // separator applet
    background-color: $color_fg_panel_inv;
  }
}

button.flat.-panel-button { // generic panel buttons
  min-width: $icon_size;
  min-height: $icon_size;
  padding: 0;
  @include radius(0);
  font-weight: 700;
  @if $variant == mixed {
    @include button(flat-normal, $tc: $color_fg_inv);
    @include ink-reaction(normal, $fc: $color_fg_inv, $tr: ink-normal-dec);
  }
  @else {
    @include button(flat-normal, $tc: $color_fg);
    @include ink-reaction(normal, $fc: $color_fg, $tr: ink-normal-dec);
  }
  @if $variant != light {
    &:hover { @include button(flat-hover, $tc: $color_fg_sel); }
    &:active {
      @include button(flat-active, $tc: $color_fg_sel);
      @include ink-reaction(
                  active-dec, $fc: $color_fg_sel, $tr: ink-active-dec);
    }
    &:disabled {
      @include button(flat-disabled, $tc: $color_fg_inv);
    }
  }
  @else {
    &:hover { @include button(flat-hover, $tc: black); }
    &:active {
      @include button(flat-active, $tc: black);
      @include ink-reaction(
                  active-dec, $fc: black, $tr: ink-active-dec);
    }
    &:disabled {
      @include button(flat-disabled, $tc: $color_fg);
    }
  }
  &:checked {
    @if $variant != light {
      @include button(flat-lined-checked, $tc: $color_fg_sel);
    }
    @else {
      @include button(flat-lined-checked, $tc: black);
    }
  }

  label { margin-bottom: 0; } // unset baseline

  box.vertical & {
    &:checked { box-shadow: inset 2px 0 $color_bg_sel; }
  }

  // FIXME: weird asymmetrical spacing exists at the right side of Application-
  // Menu icon even if the 'caption' GtkLabel was hidden, so add damned
  // compensator at the opposite side...
  > widget > box.horizontal {
    &:dir(ltr) { margin-left: 2px; }
    &:dir(rtl) { margin-right: 2px; }
  }

  &.text-button { // clock applet
    label { padding: 0 rem(4px * 1.5, $sw: 1.0); }

    box.vertical & label { padding: rem(4px * 1.5, $sw: 1.0) 0; }
  }
}

button.flat.-panel-icon-button {
  @extend %budgie_icon_tasklist_button;

  &:hover {
    @if $variant == mixed {
      box-shadow: inset 0 -2px track($color_fg_inv, $alpha_foreground_bdp);
    }
    @else {
      box-shadow: inset 0 -2px track($color_fg, $alpha_foreground_bdp);
    }
  }
  &:active,
  &:checked {
    box-shadow: inset 0 -2px $color_bg_sel;
  }

  box.vertical & {
    &:hover {
      @if $variant == mixed {
        box-shadow: inset 2px 0 track($color_fg_inv, $alpha_foreground_bdp);
      }
      @else {
        box-shadow: inset 2px 0 track($color_fg, $alpha_foreground_bdp);
      }
    }
    &:active,
    &:checked {
      box-shadow: inset 2px 0 $color_bg_sel;
    }
  }
}

.unpinned button.flat.-panel-icon-button,
.pinned button.flat.-panel-icon-button.running {
  @extend %running_budgie_icon_tasklist_button;

  > image {
    background-image:
      if($variant == light,
          image($color_bg_sel),
          image(saturate(lighten($color_bg_sel, percentage($alpha_track_2)),
                  percentage($alpha_track_2))));
    background-size: (6px / 1.1) 2px; // 1:1.1 aspect deformation exists
    background-position: bottom center;
  }

  &:hover,
  &:active,
  &:checked {
    box-shadow: inset 0 -2px $color_bg_sel;
  }

  box.vertical & {
    > image {
      background-size: 2px (6px / 1.1);
      background-position: left center;
    }

    &:hover,
    &:active,
    &:checked {
      box-shadow: inset 2px 0 $color_bg_sel;
    }
  }
}

// menubar-style'ed app menu
%vala_panel_menuitem {
  padding: 0 rem(4px, $sw: 1.0);
  @include radius(0, none);
  font-weight: 700;

  box.vertical & {
    padding: rem(4px, $sw: 1.0) 0;
    &:hover { box-shadow: inset 2px 0 $color_bg_sel; }
  }
}

menubar.-vala-panel-background {
  border: none;

  @if $maj_ver == 3 { // override global values
    > menuitem { @extend %vala_panel_menuitem; }
  }
  @else {
    > box > menuitem { @extend %vala_panel_menuitem; }
  }
}

// run dialog
.-panel-run-dialog {
  scrolledwindow.frame { margin: 6px 0 0; }

  row.activatable {
    .dim-label { opacity: $alpha_foreground_2nd; }

    &:hover,
    &:active,
    &:selected {
      .dim-label { opacity: 1.0; }
    }
  }
}

// non-CSD preference dialog
dialog.background:not(.csd) {
  .dialog-vbox stacksidebar.sidebar scrolledwindow {
    .frame { border: 1px solid $color_fg_div; }

    list {
      &:dir(ltr),
      &:dir(rtl) { box-shadow: none; }
    }
  }

  // hide unneeded animations (child radio node already has)
  .dialog-vbox grid.horizontal > grid.horizontal > modelbutton.flat {
    &:not(:disabled) {
      background-color: transparent;
      background-image: none;
      animation: none;
    }
  }
}

widget.-vala-panel-appmenu-core { // appmenu applets
  menubar {
    border-bottom: 0 none transparent;

    @if $maj_ver == 3 {
      > menuitem { @extend %vala_panel_appmenu_menuitem; }
    }
    @else {
      > box > menuitem { @extend %vala_panel_appmenu_menuitem; }
    }
  }
}

%vala_panel_appmenu_menuitem {
  @include radius(0, none);
  font-weight: 400;
  &:backdrop { opacity: 1.0; } // do not dimm in backdrop state
  &:hover {
    background-color: transparent;
    box-shadow: inset 0 -2px $color_bg_sel;

    box.vertical & { // for vertical vala-panel
      box-shadow: inset 2px 0 $color_bg_sel;
    }

    @each $along_side, $_line in (top, 0 3px),
                                  (bottom, 0 -3px),
                                  (left, 3px 0),
                                  (right, -3px 0) {
      .budgie-container.#{$along_side} & { // for budgie-panel
        box-shadow: inset #{$_line} $color_bg_sel;
      }
    }
  }

  @if $variant != light {
    .budgie-panel.transparent & {
      image { -gtk-icon-shadow: $z-depth-1; }

      label { text-shadow: $z-depth-1; }
    }
  }

  label { padding-bottom: 0; } // unset baseline
}