@if $mate_support == yes {

  // /**************
  //  * Mate-Panel *
  //  **************/

  // Most parts are themed in Gnome-panel section
  PanelToplevel.background { @extend %gnome_panel_toplevel; }

  #PanelWidget,
  #PanelPlug,
  #PanelApplet {
    @extend %gnome_panel_applet;
    background-color: $color_bg_panel; // >= 1.18.6
  }

  PanelSeparator {
    border-width: 0;
    background: none;
    background-image: none;
    color: $color_fg_panel_inv;
  }

  @each $layout, $size, $dir in (horizontal, 7px 14px, right),
                                (vertical, 14px 7px, bottom) {
    // a grip
    PanelToplevel.#{$layout} MatePanelAppletFrameDBus {
      background-repeat: no-repeat;
      background-size: #{$size};
      background-color: transparent;

      @if $layout == horizontal {
        @if $variant == light {
          background-image: -gtk-scaled(url("assets/panel-grip.png"),
                                        url("assets/panel-grip@2.png"));
        }
        @else {
          background-image: -gtk-scaled(url("assets/panel-grip-dark.png"),
                                        url("assets/panel-grip-dark@2.png"));
        }
        &:dir(ltr) { background-position: left; }
        &:dir(rtl) { background-position: right; }
      }
      @else if $layout == vertical {
        @if $variant == light {
          background-image: -gtk-scaled(url("assets/panel-grip-v.png"),
                                        url("assets/panel-grip-v@2.png"));
        }
        @else {
          background-image: -gtk-scaled(url("assets/panel-grip-v-dark.png"),
                                        url("assets/panel-grip-v-dark@2.png"));
        }
        background-position: top;
      }

      > MatePanelAppletFrameDBus { background: none; }
    }
  }

  // 'hide' arrow buttons
  PanelToplevel.mate-panel-menu-bar > grid.horizontal > button {
    min-height: 4px;
    min-width: 4px;
    padding: 0;
    @include radius(0);
    border-style: solid;
    border-color: $color_fg_panel_inv;
    @if $variant == mixed { @extend %inv_flat_button; }
    @else { @extend %flat_button; }

    > image { padding: 0 rem(4px, $sw: 1.0); }

    &:first-child {
      &:dir(ltr) { border-width: 0 1px 0 0; }
      &:dir(rtl) { border-width: 0 0 0 1px; }
    }
    &:not(:first-child) {
      &:dir(ltr) { border-width: 0 0 0 1px; }
      &:dir(rtl) { border-width: 0 1px 0 0; }
    }
  }

  .mate-panel-menu-bar {
    menubar,
    #PanelApplet-window-menu-applet-button {
      @extend %gnome_panel_menubar;

      > menuitem { @extend %gnome_panel_menuitem; }
    }

    #clock-applet-button label {
      // embed padding into label node directly (x 1.5)
      padding: 0 rem(4px * 1.5, $sw: 1.0);
    }
  }

  .mate-panel-menu-bar.vertical { // vertical layout
    menubar,
    #PanelApplet-window-menu-applet-button {
      > menuitem {
        padding: rem(4px, $sw: 1.0) 0;
        &:hover { box-shadow: inset 2px 0 $color_bg_sel; }
      }
    }

    #tasklist-button,
    #clock-applet-button,
    #showdesktop-button {
      &:hover { box-shadow: inset 2px 0 $color_fg_trk_out; }
      &:checked,
      &:hover:checked { box-shadow: inset 2px 0 $color_bg_sel; }

      label { margin-bottom: 0; } // unset baseline
    }

    #clock-applet-button label { padding: rem(4px * 1.5, $sw: 1.0) 0; }
  }

  // Brisk-Menu applet
  .mate-panel-menu-bar button.flat.toggle {
    &.brisk-button {
      padding: 0 rem(4px, $sw: 1.0);
      @include radius(0);
      @if $variant == mixed { @extend %inv_flat_button; }
      @else { @extend %flat_button; }
      font-weight: 700;
      &:hover {
        @if $variant != light {
          @include button(flat-normal, $tc: $color_fg_sel);
        }
        @else {
          @include button(flat-normal, $tc: black);
        }
        box-shadow: inset 0 -2px $color_fg_trk_out;
      }
      &:active { animation: none; }
      &:checked {
        @if $variant != light {
          @include button(flat-lined-checked, $tc: $color_fg_sel);
        }
        @else {
          @include button(flat-lined-checked, $tc: black);
        }
      }

      label { margin-bottom: 0; } // unset baseline
    }

    // vertical panel mode?
    &.brisk-button-vertical {
      padding: 0;
      &:hover { box-shadow: inset 2px 0 $color_fg_trk_out; }
      &:checked { box-shadow: inset 2px 0 $color_bg_sel; }
    }
  }

  .brisk-menu {
    border: 1px solid $color_fg_div_sld;
    background-color: $color_bg_dark;

    entry { // search-entry
      margin: rem(4px);
      @extend %flat_entry_sizing;
      @include radius($r_4 $r_4 0 0, none);
      @include entry(flat-normal);
      &:focus { @include entry(flat-focus); }
      &:disabled { @include entry(flat-disabled); }
    }

    box.horizontal scrolledwindow { // right-pane
      &:dir(ltr) { margin: rem(4px) rem(4px) rem(4px) 0; }
      &:dir(rtl) { margin: rem(4px) 0 rem(4px) rem(4px); }

      &.frame {
        border: unset;
        &:dir(ltr) {
          border-left: 1px solid if($variant == dark, track(white, $alpha_div_2),
                                                      $color_fg_div);
        }
        &:dir(rtl) {
          border-right: 1px solid if($variant == dark, track(white, $alpha_div_2),
                                                        $color_fg_div);
        }
      }
    }

    .categories-list { // left-pane
      &:dir(ltr) { margin: rem(4px) 0 rem(4px) rem(4px); }
      &:dir(rtl) { margin: rem(4px) rem(4px) rem(4px) 0; }

      button.flat {
        font-weight: 500;
        transition-duration: $transition_d_short; // shorter duration
        // almost covers :hover pseudo-class
        &:checked {
          background-color: $color_bg_trk;
          color: $color_lbl_sel;
          &:dir(ltr) { @include radius($r_2 $r $r $r_2); }
          &:dir(rtl) { @include radius($r $r_2 $r_2 $r); }
        }

        image { padding: rem(8px) 0; }
      }

      separator.horizontal {
        background-color: if($variant == dark, track(white, $alpha_div_2),
                                                $color_fg_div);
      }
    }

    // hide separator above session-buttons
    box.vertical > box.horizontal > box.vertical > separator.horizontal {
      min-height: 0;
      background-color: transparent;
    }

    button.flat.image-button.session-button { // enlarge L/R padding
      padding: 0 rem($txt_button_lr_space);
    }

    @at-root %brisk_right_pane,
    list.content-view.view { // right-pane
      background-color: $color_bg_dark;

      row.activatable {
        padding: 0;
        background-image: none;
        transition-duration: $transition_d_none;

        > button.flat {
          font-weight: 400;
          transition-duration: $transition_d_none; // needs quicker response

          // set vertical padding with icon's padding
          > box.horizontal > image { padding: rem(5.3px) 0; }
        }
      }
    }

    @if $maj_ver == 3 {
      @if $mnr_ver < 23 {
        .apps-list { @extend  %brisk_right_pane; }
      }
    }
  }

  .mate-panel-applet-slider {
    background-color: transparent;

    frame { // draw actual widget
      border: 1px solid $color_fg_div_sld;
      border-radius: $r_4;
      background-color: $color_bg_dark;

      // unset borders
      *,
      > border { border: unset; }
    }
  }
}