// /************
//  * Nautilus *
//  ************/

%nautilus_desktop_items {
  color: $color_fg_sel;
  text-shadow: $z-depth-1-label; // non-sense for me
  &:selected { text-shadow: none; }
}

.nautilus-desktop-window {
  &,
  notebook,
  notebook > stack { background: transparent; }
}

.nautilus-desktop.nautilus-canvas-item { @extend %nautilus_desktop_items; }

.background.nautilus-window:not(.nautilus-desktop-window) {
  &:not(nautilus-desktop-window) {
    // enforce base-color backgrounds
    background-color: $color_base;
  }
}

.nautilus { // hide outlines
  &-canvas-item {
    @include radius($r_2, none);
    &:active:not(:focus) {
      // FIXME: prevent unneeded icon dimming when unfocused
      background-color: $color_bg_sel;
      color: $color_fg_sel;
    }
    @if $maj_ver == 3 {
      outline-width: 0; // unset outlines
    }
    @else {
      &:focus(visible) { outline-width: 0; } // unset outlines
    }
  }

  &-list-view treeview.view {
    @if $maj_ver == 3 {
      outline-width: 0; // unset outlines
    }
    @else {
      &:focus(visible) { outline-width: 0; } // unset outlines
    }
  }
}

.nautilus-circular-button { @include radius($r); }

.nautilus-window {
  > grid.horizontal paned > separator {
    // do not use transparentize
    background-image: image($color_fg_div_sld);
    background-size: $separator_narrow;
    background-repeat: repeat-y;
    @include transition(reset);
  }

  > headerbar.titlebar { // radial-progress widget
    revealer > button.popup.toggle {
      > widget { color: if($variant == mixed, $color_fg_acc_inv, $color_fg_acc); }

      &:checked > widget { color: $color_fg_sel; }
    }
  }

  $child_gap: if($ref_weight < 1.0, 4px, 6px);
  $container_padding: $child_gap ($child_gap * 1.5);
  $label_margin: ($child_gap / 2) (-$child_gap * 1.5) 0;
  $label_padding: if($ref_weight < 1.0,
                  ($child_gap - 1px) $child_gap $child_gap,
                  ($child_gap - 3px) $child_gap ($child_gap - 2px));

  flowboxchild { // experimental 'new view' mode
    margin: unset; // unset spacing first
    padding: unset;
    color: $color_fg;
    @if $maj_ver == 3 {
      outline-width: 0; // unset outlines
    }
    @else {
      &:focus(visible) { outline-width: 0; } // unset outlines
    }

    * { @include transition(reset); } // unset child transitions

    box.icon {
      &-item-background {
        padding: $container_padding;
        border: 0 none transparent;

        label {
          margin: $label_margin;
          padding: $label_padding;
          @include radius($r_2, none);
          background-color: transparent;
        }
      }

      &-background { // use solid black backgrounds
        border: 0 none transparent;
        @include radius($r_2, none);
        background-color: black;
      }
    }

    &:selected {
      &, &:focus {
        background-color: transparent; // unset selection color
      }

      box.icon {
        &-item-background label {
          background-color: $color_bg_sel;
          color: $color_fg_sel;
        }

        // tone up image node
        &-background image,
        &-item-background image {
          @if $maj_ver == 3 { -gtk-icon-effect: highlight; }
          @else { -gtk-icon-filter: brightness(1.2); }
        }
      }
    }
  }
}

.disk-space-display {
  border: 0 none transparent;

  &.free {
    @include radius($r, none);
    background-color: mix($color_fg, $color_base, percentage($alpha_track_1)); // legacy
    color: mix($color_fg, $color_base, percentage($alpha_track_1)); // >= 3.29.90
  }

  &.used {
    @include radius($r, none);
    background-color: $color_bg_acc;
    color: $color_bg_acc;
  }

  &.unknown {
    background-color: mix($color_bg_acc, $color_base, percentage($alpha_foreground_3rd));
    color: mix($color_bg_acc, $color_base, percentage($alpha_foreground_3rd));
  }
}

// 'batch-rename' dialogs
.conflict-row {
  background-color: $color_bg_warn;
  color: $color_fg_fix_2;
  &:hover,
  &:active {
    background-color: $color_warn;
    color: $color_fg_fix;
  }
  &:selected { @extend %selected_items; }
}

// hide unwanted frame in batch-rename dialog
dialog.background.csd > box.dialog-vbox > grid.horizontal {
  > scrolledwindow.frame {
    > viewport.frame { margin: -1px; }
  }
}

.nautilus {
  &-canvas-item {
    @include radius($r_2, none);

    &.dim-label {
      color: $color_fg_3;
      &:selected {
        &, &:focus { color: mix($color_fg_sel, $color_bg_sel, percentage($alpha_foreground_3rd)); }
      }
    }
  }

  &-list-dim-label {
    color: $color_fg_3;
    &:selected {
      &, &:focus { color: mix($color_fg_sel, $color_bg_sel, percentage($alpha_foreground_3rd)); }
    }
  }
}

.documents-entry-tag { @extend .entry-tag; }
