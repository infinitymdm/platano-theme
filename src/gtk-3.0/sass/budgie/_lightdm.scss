// /*******************
//  * Lightdm-Greeter *
//  *******************/

%greeter_panel_window {
    background-image: image($color_bg_panel);
    background-color: transparent;
    color: if($variant == mixed, $color_fg_inv, $color_fg);
    box-shadow: none;
    font-weight: 700;
    text-shadow: none;
  
    &.background { background-color: transparent; }
  
    > * > * { background-color: transparent; } // FIXME: ugly wildcard
  
    // avoid translucent top-bar
    &.osd { opacity: 1.0; } // >= 2.0.5
  }
  
  %greeter_panel_menubar {
    border: none;
    background-color: transparent;
    color: if($variant == mixed, $color_fg_inv, $color_fg);
  
    &:hover {
      color: if($variant != light, $color_fg_sel, black);
      box-shadow: inset 0 2px $color_bg_sel;
  
      label,
      image { color: if($variant != light, $color_fg_sel, black); }
    }
  }
  
  %greeter_panel_menubar_menuitem {
    // flip underline-indicator vertically
    padding: rem(5.3px, $sw: 1.0) 0;
    @include radius(0, none);
    background-color: transparent;
    &:hover { box-shadow: inset 0 2px $color_bg_sel; }
  }
  
  %greeter_panel_menu_menuitem {
    padding: $toolbar_padding rem($entry_lr_space);
    color: $color_fg_2;
    font-weight: 400;
    text-shadow: none;
  
    label { color: $color_fg_2; }
  
    &:hover {
      color: $color_fg;
  
      label { color: $color_fg; }
    }
    &:disabled {
      color: $color_fg_dis;
  
      label { color: $color_fg_dis; }
    }
  }
  
  %greeter_entry {
    min-height: rem($widget_size);
    @include radius($r_4 $r_4 0 0, none);
    font-family: monospace;
    @if $variant == mixed {
      @include entry(flat-normal, $tc: $color_fg_inv);
      caret-color: $color_fg_inv;
      &:focus { @include entry(flat-focus, $tc: $color_fg_inv); }
      &:disabled { @include entry(flat-disabled, $tc: $color_fg_inv); }
  
      selection { @extend %selected_items; }
    }
    @else {
      @include entry(flat-normal, $tc: $color_fg);
      caret-color: $color_fg;
      &:focus { @include entry(flat-focus, $tc: $color_fg); }
      &:disabled { @include entry(flat-disabled, $tc: $color_fg); }
    }
  }
  
  %non_csd_menu {
    margin: unset;
    padding: 1px;
    border-radius: 0;
    border: 1px solid $color_fg_div_sld;
    background-clip: border-box;
  }
  
  // gtk-greeter
  .lightdm-gtk-greeter {
    // top-panel styling
    #panel_window {
      @extend %greeter_panel_window;
  
      menubar {
        @extend %greeter_panel_menubar;
  
        label,
        image {
          padding: 0 rem($menuitem_padding, $sw: 1.0);
          color: if($variant == mixed, $color_fg_inv, $color_fg);
        }
  
        @if $maj_ver == 3 {
          > menuitem { @extend %greeter_panel_menubar_menuitem; }
        }
        @else {
          > box > menuitem { @extend %greeter_panel_menubar_menuitem; }
        }
  
        menu menuitem { @extend %greeter_panel_menu_menuitem; }
      }
    }
  
    // main container
    #login_window,
    #restart_dialog,
    #shutdown_dialog {
      padding: 0;
      border: 0 none transparent;
      background-color: transparent;
      box-shadow: none;
  
      > box { // set actual raised dialog styling
        margin: $shadow_margin_4;
        border-radius: $r_8;
        box-shadow: $z-depth-4;
        @if $variant == mixed {
          background-color: track($color_bg_dark_inv, $a_osd);
          color: $color_fg_inv;
        }
        @else {
          background-color: track($color_bg_dark, $a_osd);
          color: $color_fg;
        }
      }
  
      button:not(.combo) {
        min-height: rem($widget_size * 1.2);
        min-width: rem($widget_size * 1.2);
        padding: 0 rem($txt_button_lr_space * 1.2);
        @if $variant == mixed { @extend %inv_flat_button; }
        @else { @extend %flat_button; }
      }
    }
  
    @each $node_id_1, $node_id_2, $_color in
    ('#login_window', '#login_button', $color_bg_sgst),
    ('#restart_dialog', '#restart_button', $color_bg_dest),
    ('#shutdown_dialog', '#shutdown_button', $color_bg_dest) {
      #{$node_id_1} button#{$node_id_2} {
        @include button(raised-normal, $c: $_color, $tc: $color_fg_sel_2);
        @include ink-reaction(normal, $fc: $color_fg_sel, $tr: ink-normal-dec);
        &:hover { @include button(raised-hover, $c: $_color, $tc: $color_fg_sel); }
        &:active {
          @include button(raised-active, $c: $color_bg_sel, $tc: $color_fg_sel);
          @include ink-reaction(active-dec, $fc: $color_fg_sel, $tr: ink-active-dec);
        }
        &:checked { @include button(raised-checked); }
        &:disabled {
          @if $variant == mixed {
            @include button(raised-disabled, $tc: $color_fg_inv);
          }
          @else { @include button(raised-disabled, $tc: $color_fg); }
        }
      }
    }
  
    #login_window {
      button.combo {
        @if $variant == mixed { @extend %inv_combobox; }
  
        cellview { padding-bottom: 0; }
      }
  
      entry { @extend %greeter_entry; }
  
      infobar { // notification revealer
        border: none;
        font-weight: 700;
        font-size: 110%;
        transition: none; // transition causes visual glitches
  
        &.error,
        &.info { // .info class for XFce4-screensaver
          @if $maj_ver == 3 {
            @if $mnr_ver < 23 { background-color: transparent; }
            @else {
              > revealer > box { background-color: transparent; }
            }
          }
          @else {
            > revealer > box { background-color: transparent; }
          }
        }
  
        &.error {
          margin: 0 4px; // prevent unwanted overflow
          color: $color_err;
        }
  
        &.info { color: $color_info; }
      }
    }
  
    #content_frame { padding-bottom: 14px; }
  
    #buttonbox_frame {
      padding-top: 8px; // reserve gap between infobar and buttonbox
    }
  
    // non-CSD context menus
    window.background.popup > menu { @extend %non_csd_menu; }
  }
  
  // slick-greeter
  $greeter_panel_height: 32px; // pixmap height
  $greeter_panel_shadow: 11px; // pixmap shadow region
  
  %greeter_panel_menubar_menuitem_misc {
    padding: 0 rem($entry_lr_space);
    color: if($variant != dark, $color_fg_inv, $color_fg);
  
    label { color: if($variant != dark, $color_fg_inv, $color_fg); }
  
    image { color: if($variant != dark, $color_fg_inv, $color_fg); }
  
    &:hover { box-shadow: inset 0 2px $color_bg_sel; }
  
    label { margin: 0 2px rem($baseline, $sw: 1.0); }
  }
  
  window.background.lightdm {
    // top-panel
    menubar {  // broken
      @extend %greeter_panel_menubar;
      padding-top: ($greeter_panel_height - $greeter_panel_shadow - $icon_size)
                   / 2;
      font-weight: 700;
      text-shadow: none;
  
      @if $maj_ver == 3 {
        > menuitem {
          @extend %greeter_panel_menubar_menuitem;
          @extend %greeter_panel_menubar_menuitem_misc;
        }
      }
      @else {
        > box > menuitem {
          @extend %greeter_panel_menubar_menuitem;
          @extend %greeter_panel_menubar_menuitem_misc;
        }
      }
    }
  
    window.background.popup > menu {
      @extend %non_csd_menu;
  
      menuitem  { @extend %greeter_panel_menu_menuitem; }
    }
  
    button {
      &:not(.option-button):not(.toggle-button) {
        min-width: $icon_size;
        min-height: $icon_size;
        padding: rem(6.7px, $sw: 1.0);
        @include radius($r);
      }
  
      &.flat.option-button { // session logo button
        min-width: $icon_size;
        min-height: $icon_size;
        padding: rem(6.7px, $sw: 1.0);
        @include radius($r);
        @if $variant != dark { @extend %inv_flat_button; }
        @else { @extend %flat_button; }
  
        image { opacity: $a_fg_2; }
  
        &:hover,
        &:active {
          image { opacity: 1.0; }
        }
      }
  
      &,
      &.toggle-button { // session list rows
        min-width: $icon_size;
        min-height: $icon_size;
        @if $variant != dark { @extend %inv_flat_button; }
        @else { @extend %flat_button; }
  
        image { opacity: $a_fg_2; }
  
        &:hover,
        &:active,
        &.selected { image { opacity: 1.0; } }
      }
  
      &.toggle-button {
        padding: 0 rem(13.3px);
        @include radius(0);
        font-weight: 500;
  
        &.selected { // selected row
          &, &:hover {
            @include button(flat-normal, $tc: $color_fg_sel);
            background-image: image($color_bg_sel);
  
            image { opacity: 1.0; }
          }
        }
      }
    }
  
    entry,
    .lightdm-combo entry {
      @extend %greeter_entry;
      @if $variant != dark {
        @include entry(flat-normal, $tc: $color_fg_inv);
        caret-color: $color_fg_inv;
        &:focus { @include entry(flat-focus, $tc: $color_fg_inv); }
        &:disabled { @include entry(flat-disabled, $tc: $color_fg_inv); }
      }
  
      selection { @extend %selected_items; }
    }
  
    entry:active { // for spinner
      -gtk-icon-source: -gtk-icontheme('process-working-symbolic');
      animation: spinner 1s linear infinite;
    }
  
    .lightdm-combo {
      border-radius: 0;
      background-color: transparent;
    }
  }