@mixin budgie_menu() {
  // @extend %reset_style;
  scrolledwindow, list, row, scrollbar {
    @extend %reset_style;
  }

  entry { 
    margin-bottom: $popover_padding;
  }

  row.activatable { // reset background
    padding: 0;
    background-image: none;
    background-color: $color_bg_dark;
    color: $color_fg_2;
    transition-duration: $transition_d_none;

    // FIXME: enlarge vertical spacing with padding of icons
    image { 
      padding: rem($menuitem_padding) 0; 
    }

    &:hover, &:selected {
      background-image: none;
      background-color: $color_bg_dark;
      // child button node has hover state already
      color: $color_fg_2;
      transition-duration: $transition_d_none;
    }
  }

  .categories { // left-paned elements of GtkPopover
    background-color: transparent;

    &:dir(ltr) {
      margin-right: $popover_padding;
      border-right: 1px solid if($variant == dark, 
                                 track(white, $a_div_2),
                                 $color_fg_div);
    }

    &:dir(rtl) {
      margin-left: $popover_padding;
      border-left: 1px solid if($variant == dark, 
                                track(white, $a_div_2),
                                $color_fg_div);
    }
  }

  label { 
    // tweak vertical spacing and font weight
    padding: 0 rem($menuitem_padding, $sw: 1.0);
    font-weight: 500;
  }

  .category-button {
    @include radius(0);
    
    &:not(:active) { 
      transition-duration: $transition_d_short; // use list-transition
    }

    &:checked {
      &, &:hover {
        background-image: none;
        background-color: $color_bg_trk;
        color: $color_lbl_sel;
      }

      &:disabled {
        color: track($color_fg_sel, $a_fg_bdp);

        label { 
          color: inherit; 
        }
      }

      &:dir(ltr) { 
        @include radius(0 $r $r 0); 
      }

      &:dir(rtl) { 
        @include radius($r 0 0 $r); 
      }
    }
  }
}

// Menu Button
@mixin budgie_menu_button($button) {
  #{$button}.budgie-menu-launcher {
    @extend %budgie_trigger_button;

    box.horizontal > label {
      &:dir(ltr) { 
        margin-left: -$icon_size / 4; 
      }
      
      &:dir(rtl) { 
        margin-right: -$icon_size / 4; 
      }
    }
  }
}

// user-indicator styling
@mixin budgie_user_menu() {
  .user-menu {
    .container {
      separator { // hide separator
        min-height: 0;
      } 

      // top-row (user-name and avatar)
      & > box.vertical row.activatable:first-child {
        margin-bottom: $popover_padding;
        outline-width: 0;
    
        button.indicator-item {
          border: 1px solid transparent;
          @include button(normal);
          font-weight: 500;
          transition-timing-function: $transition_t_standard;
          transition-property: background-color;
          transition-duration: $transition_d_standard;
    
          label, image:first-child {
            &:dir(ltr) { margin-left: -$icon_size / 4; } // align childs
            &:dir(rtl) { margin-right: -$icon_size / 4; }
          }
    
          image {
            color: $color_fg_2;

            &:first-child { // avatar image
              min-width: $icon_size * 1.5;
              opacity: $a_fg_2;
            }
          }
    
          &:hover {
            @include button(hover);
    
            image:first-child { 
              opacity: 1.0; 
            }
          }
        }
      }
    }

    list { 
      @extend %reset_style;
    }

    row {
      @extend %reset_style;

      &, .indicator-item { // stop weird and unhandled ripple-effect
        &:active, &:selected {
          background-image: none;
          animation: none;
        }
      }

      &.activatable {
        background-image: none;
        background-color: $color_bg_dark;
        color: $color_fg_2;
        transition-duration: $transition_d_none;

        .indicator-item {
          label, image { 
            color: $color_fg_2; 
          }
        }

        // FIXME: enlarge vertical spacing with padding of icons
        image { 
          padding: rem($menuitem_padding) 0; 
        }

        &:hover, &:selected {
          background-image: none;
          background-color: $color_bg_dark;
          color: $color_fg_2;
          transition-duration: $transition_d_none;

          .indicator-item {
            label, image { 
              color: $color_fg_2; 
            }

            &:hover, &:active, &:checked {
              label, image { 
                color: $color_fg; 
              }
            }
          }
        }
      }
    }
  }
}